{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":-1,"lists":{"es module":{"treeState":0},"js link":{"treeState":0},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"Debug Tutorial","children":{"main":{"name":"main","type":"apogee.Folder","children":{"dummyValue":{"name":"dummyValue","type":"apogee.JsonMember","updateData":{"data":6}},"derivedValue":{"name":"derivedValue","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return _myPrivateFunction(dummyValue);","supplementalCode":"function _myPrivateFunction(x) {\n    return foo(x);\n}"}},"foo":{"name":"foo","type":"apogee.FunctionMember","updateData":{"argList":["x"],"functionBody":"return 2*x;","supplementalCode":""}}}}}},"components":{"main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Debugging in Apogee"}]},{"type":"paragraph","content":[{"type":"text","text":"You can use the browser debugger to help you decode. For the sake of this tutorial we will use the Chrome browse as an example and we will assume the reader already knows how to use the browser debugger."}]},{"type":"heading2","content":[{"type":"text","text":"Sample Workspace"}]},{"type":"paragraph","content":[{"type":"text","text":"To demonstrate debugging, we will use the following code."}]},{"type":"paragraph","content":[{"type":"text","text":"This is a cell with a static value."}]},{"type":"apogeeComponent","attrs":{"name":"dummyValue","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a cell with a formula."}]},{"type":"apogeeComponent","attrs":{"name":"derivedValue","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"And here is a function we use."}]},{"type":"apogeeComponent","attrs":{"name":"foo","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Using the Debugger"}]},{"type":"paragraph","content":[{"type":"text","text":"1) Open the debugger and the open the "},{"type":"text","marks":[{"type":"italic"}],"text":"Sources"},{"type":"text","text":" tab. From the left panel, open the file \"www.apogeejs.com/lib/[active version]/assets/debugHook.js\""}]},{"type":"paragraph","content":[{"type":"text","text":"This file, as you can judge from the name, is made specifically to assist in using the debugger."}]},{"type":"paragraph","content":[{"type":"text","text":"[https://apogeejs.com/web/gettingStarted/debugging_setup.png]"}]},{"type":"paragraph","content":[{"type":"text","text":"2) Add a breakpoint in the function "},{"type":"text","marks":[{"type":"italic"}],"text":"__globals__.__memberFunctionDebugHook"},{"type":"text","text":"."}]},{"type":"paragraph","content":[{"type":"text","text":"This function has an empty body and does nothing other than provide an entry point to attach the debugger to the code."}]},{"type":"paragraph","content":[{"type":"text","text":"[https://apogeejs.com/web/gettingStarted/debugging_breakpoint.png]"}]},{"type":"paragraph","content":[{"type":"text","text":"3) Modify the code in the formula for the cell "},{"type":"text","marks":[{"type":"italic"}],"text":"derivedValue"},{"type":"text","text":" above, for now in a trivial way. For example, type a space in the code and then delete it."}]},{"type":"paragraph","content":[{"type":"text","text":"When the cell is saved, the workspace will recalculate. When any formula is calculated, our breakpoint will be reached."}]},{"type":"paragraph","content":[{"type":"text","text":"[https://apogeejs.com/web/gettingStarted/debugging_breakpointHit.png]"}]},{"type":"paragraph","content":[{"type":"text","text":"4) Step out of the debug hook function. As mentioned this is just an empty function. Stepping out of it will take us to the code for the given cell that is being calculated."}]},{"type":"paragraph","content":[{"type":"text","text":"[https://apogeejs.com/web/gettingStarted/debugging_inCellCode.png]"}]},{"type":"paragraph","content":[{"type":"text","text":"We can see the structure of our code when it is converted to javascript. Below we highlight the user code, both in the "},{"type":"text","marks":[{"type":"italic"}],"text":"formula"},{"type":"text","text":" and the "},{"type":"text","marks":[{"type":"italic"}],"text":"private"},{"type":"text","text":" section. This appears in dynamically generated code, and there is some overhead code around the lines we typed in as the user."}]},{"type":"paragraph","content":[{"type":"text","text":"You can also put breakpoints in this code. However, since this is dynamically generated code, this code is only valid until you modify that cell. After that you will need to enter the code through the debugHook again. (Note this may depend on the browser.)"}]},{"type":"paragraph","content":[{"type":"text","text":"[https://apogeejs.com/web/gettingStarted/debugging_cellCodeDetail.png]"}]},{"type":"paragraph","content":[{"type":"text","text":"5) Note on Function Cells - You can try stepping into the function call "},{"type":"text","marks":[{"type":"italic"}],"text":"foo(x)"},{"type":"text","text":". If you do this it will return to our "},{"type":"text","marks":[{"type":"italic"}],"text":"debugHook.js"},{"type":"text","text":" file however it won't go straight to the "},{"type":"text","marks":[{"type":"italic"}],"text":"__memberFunctionDebugHook"},{"type":"text","text":" function. Instead it first goes to the function "},{"type":"text","marks":[{"type":"italic"}],"text":"_functionTableWrapper"},{"type":"text","text":". This wrapper is used to allow lazy initialization of the function so that the function can be called recursively without triggering a circular reference error."}]}]}},"children":{"dummyValue":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"derivedValue":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":true,"height":7000}}}}},"foo":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}