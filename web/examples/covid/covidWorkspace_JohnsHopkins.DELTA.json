{"fileType":"apogee app js workspace","version":"0.50","references":{"refEntries":[{"url":"https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js","nickname":"","entryType":"js link"}],"viewState":{"treeState":-1,"lists":{"es module":{"treeState":0},"js link":{"treeState":-1},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.2,"name":"COVID Workspace","children":{"Main":{"name":"Main","type":"apogee.Folder","children":{"usInputData":{"name":"usInputData","type":"apogee.Folder","children":{"downloadedData":{"name":"downloadedData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return apogeeutil.textRequest(url);","supplementalCode":""}},"url":{"name":"url","type":"apogee.JsonTable","updateData":{"data":"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv"}},"GRID_COLUMNS":{"name":"GRID_COLUMNS","type":"apogee.JsonTable","updateData":{"data":{"FIPS":4,"COUNTY":5,"PROVINCE_STATE":6,"COUNTRY_REGION":7,"LAT":8,"LON":9,"COMBINED_KEY":10,"FIRST_DATA_ROW":11}}},"getRowTimeSeries":{"name":"getRowTimeSeries","type":"apogee.FunctionTable","updateData":{"argList":["row"],"functionBody":"return row.slice(GRID_COLUMNS.FIRST_DATA_ROW).map(stringValue => parseInt(stringValue));\n","supplementalCode":""}},"getRowTimeSeriesTest":{"name":"getRowTimeSeriesTest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getRowTimeSeries(getCountyStateTest);","supplementalCode":""}},"getRowTest":{"name":"getRowTest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getRows(GRID_COLUMNS.PROVINCE_STATE,\"West Virginia\");","supplementalCode":""}},"getCountyState":{"name":"getCountyState","type":"apogee.FunctionTable","updateData":{"argList":["countyStateString"],"functionBody":"let rowList = getRows(GRID_COLUMNS.COMBINED_KEY,countyStateString);\nif(rowList.length == 1) {\n    return rowList[0];\n}\nelse if(rowList.length > 1) {\n    throw new Error(\"Multple rows found for : \" + countyStateString);\n}\nelse {\n    throw new Error(\"County/State not found: \" + countyStateString);\n}","supplementalCode":""}},"getCountyStateTest":{"name":"getCountyStateTest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getCountyState(\"Santa Clara, California, US\");","supplementalCode":""}},"DATE_LIST":{"name":"DATE_LIST","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return gridData[0].slice(GRID_COLUMNS.FIRST_DATA_ROW);","supplementalCode":""}},"countyMap":{"name":"countyMap","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let countyMap = {};\n\ngridData.forEach( (row,index) => {\n    //ignore the header row\n    if(index === 0) return;\n    \n    let state = row[GRID_COLUMNS.PROVINCE_STATE];\n    let county = row[GRID_COLUMNS.COUNTY];\n    \n    //this is a bad entry\n    if(!state) return;\n    \n    let entry = {};\n    entry.state = state;\n    if(county != \"\") {\n        entry.county = row[GRID_COLUMNS.COUNTY];\n    }\n    entry.fips = row[GRID_COLUMNS.FIPS];\n    entry.combinedKey = row[GRID_COLUMNS.COMBINED_KEY];\n    \n    let stateEntry = countyMap[state];\n    if(!stateEntry) {\n        stateEntry = [];\n        countyMap[state] = stateEntry;\n    }\n    stateEntry.push(entry);\n})\n\nreturn countyMap;","supplementalCode":""}},"stateList":{"name":"stateList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let states = [];\nfor(let state in countyMap) {\n    states.push(state);\n}\nreturn states;","supplementalCode":""}},"getRows":{"name":"getRows","type":"apogee.FunctionTable","updateData":{"argList":["columnIndex","columnValue"],"functionBody":"return gridData.filter(row => {\n    return (row[columnIndex] == columnValue);\n})","supplementalCode":""}},"modifiedGridData":{"name":"modifiedGridData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return gridDataORIG.concat(stateTotalRows);","supplementalCode":""}},"gridDataORIG":{"name":"gridDataORIG","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let rowArray = downloadedData.split(\"\\n\");\n\nlet gridData = rowArray.map( row => {\n    //our parsing is simplified to handl this specific data rather than a general cvs file.\n    //only one (or zero) fields have quotes, we will pull it out.\n    let firstQuoteIndex = row.indexOf(\"\\\"\");\n    let secondQuoteIndex = row.indexOf(\"\\\"\",firstQuoteIndex+1);\n    \n    //no quoted strings\n    if(firstQuoteIndex < 0) return row.split(\",\");\n    \n    //split up and parse single the quoted field differently from the rest of the row.\n    let firstString = row.substr(0,firstQuoteIndex-1);\n    let secondString = row.substr(firstQuoteIndex+1,secondQuoteIndex-firstQuoteIndex-1);\n    let thirdString = row.substr(secondQuoteIndex+2);\n    \n    let firstArray = firstString.split(\",\")\n    let secondArray = secondString\n    let thirdArray = thirdString.split(\",\");\n    \n    return firstArray.concat(secondArray).concat(thirdArray);\n})\n\nreturn gridData;","supplementalCode":""}},"gridData":{"name":"gridData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return modifiedGridData;","supplementalCode":""}},"stateRowMap":{"name":"stateRowMap","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let map = {};\ngridDataORIG.forEach( (row,index) => {\n    if(index == 0) return;\n    \n    let state = row[GRID_COLUMNS.PROVINCE_STATE];\n    let stateEntry = map[state];\n    if(!stateEntry) {\n        stateEntry = [];\n        map[state] = stateEntry;\n    }\n    stateEntry.push(row);\n});\nreturn map;","supplementalCode":""}},"stateTotalTimeSeries":{"name":"stateTotalTimeSeries","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let map = {};\n\nfor(let state in stateRowMap) {\n    let stateRows = stateRowMap[state];\n    //only process states with multiple rows\n    if(stateRows.length < 2) continue;\n    \n    //sum the rows\n    let sumRow;\n    stateRows.forEach( row => {\n        let timeSeries = getRowTimeSeries(row);\n        \n        console.log(\"Time series: \" + JSON.stringify(timeSeries));\n        \n        if(!sumRow) sumRow = _getZeroRow(timeSeries.length);\n        \n        console.log(\"Zero row: \" + JSON.stringify(sumRow));\n        \n        timeSeries.forEach( (value,index) => {\n            sumRow[index] += parseInt(value);\n        });\n    })\n    \n    map[state] = sumRow;\n}\n\nreturn map;\n","supplementalCode":"//this will construct our zero rows\nfunction _getZeroRow(length) {\n    let zeroRow = [];\n    zeroRow.length = length;\n    zeroRow.fill(0);\n    return zeroRow;\n}"}},"stateTotalRows":{"name":"stateTotalRows","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let rows = [];\n\nfor(let state in stateTotalTimeSeries) {\n    let timeSeries = stateTotalTimeSeries[state];\n    \n    //get a row for this state\n    let refStateRow = apogeeutil.jsonCopy(stateRowMap[state][0]);\n    refStateRow[GRID_COLUMNS.COUNTY] = \"-ALL-\";\n    refStateRow[GRID_COLUMNS.COMBINED_KEY] = \"-ALL-, \" + state + \", US\";\n    \n    //start of our ref row\n    let newRow = refStateRow.slice(0,GRID_COLUMNS.FIRST_DATA_ROW);\n    \n    rows.push(newRow.concat(timeSeries));\n    \n}\n\nreturn rows;","supplementalCode":""}}}},"worldInputData":{"name":"worldInputData","type":"apogee.Folder","children":{"url":{"name":"url","type":"apogee.JsonTable","updateData":{"data":"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"}},"downloadedData":{"name":"downloadedData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return apogeeutil.textRequest(url);","supplementalCode":""}},"gridData":{"name":"gridData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let rowArray = downloadedData.split(\"\\n\");\n\nlet gridData = rowArray.map( row => {\n    //our parsing is simplified to handl this specific data rather than a general cvs file.\n    //only one (or zero) fields have quotes, we will pull it out.\n    let firstQuoteIndex = row.indexOf(\"\\\"\");\n    let secondQuoteIndex = row.indexOf(\"\\\"\",firstQuoteIndex+1);\n    \n    //no quoted strings\n    if(firstQuoteIndex < 0) return row.split(\",\");\n    \n    //split up and parse single the quoted field differently from the rest of the row.\n    let firstString = row.substr(0,firstQuoteIndex-1);\n    let secondString = row.substr(firstQuoteIndex+1,secondQuoteIndex-firstQuoteIndex-1);\n    let thirdString = row.substr(secondQuoteIndex+2);\n    \n    let firstArray = firstString.split(\",\")\n    let secondArray = secondString\n    let thirdArray = thirdString.split(\",\");\n    \n    return firstArray.concat(secondArray).concat(thirdArray);\n})\n\nreturn gridData;","supplementalCode":""}},"GRID_COLUMNS":{"name":"GRID_COLUMNS","type":"apogee.JsonTable","updateData":{"data":{"PROVINCE_STATE":0,"COUNTRY_REGION":1,"LAT":2,"LON":3,"FIRST_DATA_ROW":4}}},"DATE_LIST":{"name":"DATE_LIST","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return gridData[0].slice(GRID_COLUMNS.FIRST_DATA_ROW);","supplementalCode":""}},"countryMap":{"name":"countryMap","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let countryMap = {};\n\ngridData.forEach( (row,index) => {\n    //ignore the header row\n    if(index === 0) return;\n    \n    let country = row[GRID_COLUMNS.COUNTRY_REGION];\n    let state = row[GRID_COLUMNS.PROVINCE_STATE];\n    \n    //this is a bad entry\n    if(country == undefined) return;\n    \n    let entry = {};\n    entry.country = country;\n    entry.state = state;\n    \n    let countryEntry = countryMap[country];\n    if(!countryEntry) {\n        countryEntry = [];\n        countryMap[country] = countryEntry;\n    }\n    countryEntry.push(entry);\n})\n\nreturn countryMap;","supplementalCode":""}},"countryList":{"name":"countryList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let countries = [];\nfor(let country in countryMap) {\n    countries.push(country);\n}\nreturn countries;","supplementalCode":""}},"getRowTimeSeriesTest":{"name":"getRowTimeSeriesTest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getRowTimeSeries(getCountyStateTest);","supplementalCode":""}},"getCountyStateTest":{"name":"getCountyStateTest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getStateCountry(\"Hubei\",\"China\");","supplementalCode":""}},"getRowTimeSeries":{"name":"getRowTimeSeries","type":"apogee.FunctionTable","updateData":{"argList":["row"],"functionBody":"return row.slice(GRID_COLUMNS.FIRST_DATA_ROW).map(stringValue => parseInt(stringValue));\n","supplementalCode":""}},"getCountryState":{"name":"getCountryState","type":"apogee.FunctionTable","updateData":{"argList":["countyStateString"],"functionBody":"let rowList = getRow(GRID_COLUMNS.COMBINED_KEY,countyStateString);\nif(rowList.length == 1) {\n    return rowList[0];\n}\nelse if(rowList.length > 1) {\n    throw new Error(\"Multple rows found for : \" + countyStateString);\n}\nelse {\n    throw new Error(\"County/State not found: \" + countyStateString);\n}","supplementalCode":""}},"getStateCountry":{"name":"getStateCountry","type":"apogee.FunctionTable","updateData":{"argList":["state","country"],"functionBody":"let rowList = getRows2(GRID_COLUMNS.PROVINCE_STATE,state,GRID_COLUMNS.COUNTRY_REGION,country);\nif(rowList.length == 1) {\n    return rowList[0];\n}\nelse if(rowList.length > 1) {\n    throw new Error(\"Multple rows found for : \" + countyStateString);\n}\nelse {\n    throw new Error(\"County/State not found: \" + countyStateString);\n}","supplementalCode":""}},"getRows":{"name":"getRows","type":"apogee.FunctionTable","updateData":{"argList":["columnIndex","columnValue"],"functionBody":"return gridData.filter(row => {\n    return (row[columnIndex] == columnValue);\n})","supplementalCode":""}},"getRows2Test":{"name":"getRows2Test","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getRows2(GRID_COLUMNS.PROVINCE_STATE,\"Hubei\",GRID_COLUMNS.COUNTRY_REGION,\"China\");","supplementalCode":""}},"getRows2":{"name":"getRows2","type":"apogee.FunctionTable","updateData":{"argList":["colIndex1","colValue1","colIndex2","colValue2"],"functionBody":"return gridData.filter(row => {\n    return ((row[colIndex1] == colValue1)&&(row[colIndex2] == colValue2));\n})","supplementalCode":""}}}},"worldPlotPage":{"name":"worldPlotPage","type":"apogee.Folder","children":{"countyGraph":{"name":"countyGraph","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return countryGraphData;  ","supplementalCode":""}},"rowCountsData":{"name":"rowCountsData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return worldInputData.getRowTimeSeries(countryRow);","supplementalCode":""}},"countrySelection":{"name":"countrySelection","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if((!countrySelector)||(!countrySelector.data)||(!countrySelector.data.country)) return null;\n\nlet country = countrySelector.data.country; \nlet key = country + \"_states\";\nreturn countrySelector.data[key];","supplementalCode":""}},"countrySelector":{"name":"countrySelector","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionTable","updateData":{"argList":[],"functionBody":"let layout = [\n\t{\n\t\t\"type\": \"dropdown\",\n\t\t\"label\": \"Country: \",\n\t\t\"entries\": worldInputData.countryList,\n\t\t\"value\": \"China\",\n\t\t\"key\": \"country\"\n\t}\n];\n\n//add a panel for each state, that is displayed when the given state is selected\nfor(let country in worldInputData.countryMap) {\n    let countryInfoList = worldInputData.countryMap[country];\n    layout.push(_getPanelLayout(country,countryInfoList));\n}\n\nreturn layout; \n","supplementalCode":"function _getPanelLayout(country,countryInfoList) {\n    \n    //this is the panel entry with a dropdown for each county\n    //it will become visible when its parent state is selected.\n    return {\n\t\t\"type\": \"panel\",\n\t\t\"formData\": [\n        \t{\n        \t\t\"type\": \"dropdown\",\n        \t\t\"label\": \"State/Province: \",\n        \t\t\"entries\": countryInfoList.map(countryEntry => countryEntry.state),\n        \t\t\"key\": \"state\"\n        \t},\n        \t{\n        \t    \"type\": \"invisible\",\n        \t    \"value\": country,\n        \t    \"key\": \"country\"\n        \t}\n\t\t],\n\t\t\"selector\": {\n\t\t    \"parentKey\": \"country\",\n\t\t    \"parentValue\": country\n\t\t},\n\t\t\"key\": country + \"_states\"\n\t};\n}"}},"data":{"name":"data","type":"apogee.JsonTable","updateData":{"data":{"country":"US","US_states":{"state":"","country":"US"}}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionTable","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"countryRow":{"name":"countryRow","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return worldInputData.getStateCountry(countrySelection.state,countrySelection.country);","supplementalCode":""}},"countryGraphData":{"name":"countryGraphData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let chartData = {};\nchartData.type = \"line\";\nchartData.data = {};\nchartData.data.datasets = [];\n\nlet label = (countrySelection.state == \"\") ? countrySelection.country : countrySelection.state + \", \" + countrySelection.country;\n\nlet datasetCountry = {\n    \"label\": label,\n    \"data\": rowDeltaData,\n    \"fill\": false,\n    \"borderColor\": \"rgb(75, 192, 192)\",\n    \"lineTension\": 0.1\n};\n\nchartData.data.labels = worldInputData.DATE_LIST;\nchartData.data.datasets.push(datasetCountry);\n\nreturn chartData;","supplementalCode":""}},"rowDeltaData":{"name":"rowDeltaData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let previousEntry = 0;\nreturn rowCountsData.map(entry => {\n    let delta = entry - previousEntry;\n    previousEntry = entry;\n    return delta;\n})","supplementalCode":""}}}},"usPlotPage":{"name":"usPlotPage","type":"apogee.Folder","children":{"countyGraph":{"name":"countyGraph","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return countyGraphData;  ","supplementalCode":""}},"rowCountsData":{"name":"rowCountsData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return usInputData.getRowTimeSeries(countyRow);","supplementalCode":""}},"countyRow":{"name":"countyRow","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return usInputData.getCountyState(countyName);","supplementalCode":""}},"countyGraphData":{"name":"countyGraphData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let chartData = {};\nchartData.type = \"line\";\nchartData.data = {};\nchartData.data.datasets = [];\n\nlet datasetCounty = {\n    \"label\": countyName,\n    \"data\": rowDeltaData,\n    \"fill\": false,\n    \"borderColor\": \"rgb(75, 192, 192)\",\n    \"lineTension\": 0.1\n};\n\nchartData.data.labels = usInputData.DATE_LIST;\nchartData.data.datasets.push(datasetCounty);\n\nreturn chartData;","supplementalCode":""}},"countySelector":{"name":"countySelector","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionTable","updateData":{"argList":[],"functionBody":"let layout = [\n\t{\n\t\t\"type\": \"dropdown\",\n\t\t\"label\": \"State/Province: \",\n\t\t\"entries\": usInputData.stateList,\n\t\t\"value\": \"California\",\n\t\t\"key\": \"state\"\n\t}\n];\n\n//add a panel for each state, that is displayed when the given state is selected\nfor(let state in usInputData.countyMap) {\n    let countyInfoList = usInputData.countyMap[state];\n    layout.push(_getPanelLayout(state,countyInfoList));\n}\n\nreturn layout;\n","supplementalCode":"function _getPanelLayout(state,countyList) {\n\n    //get the dropdown selections\n    let dropdownEntryList = countyList.map(_countyEntryToDropdownEntry);\n    \n    //this is the panel entry with a dropdown for each county\n    //it will become visible when its parent state is selected.\n    return {\n\t\t\"type\": \"panel\",\n\t\t\"formData\": [\n        \t{\n        \t\t\"type\": \"dropdown\",\n        \t\t\"label\": \"County/Region: \",\n        \t\t\"entries\": dropdownEntryList,\n        \t\t\"key\": \"county\"\n        \t},\n        \t{\n        \t    \"type\": \"invisible\",\n        \t    \"value\": countyList[0].country,\n        \t    \"key\": \"country\"\n        \t}\n\t\t],\n\t\t\"selector\": {\n\t\t    \"parentKey\": \"state\",\n\t\t    \"parentValue\": state\n\t\t},\n\t\t\"key\": state + \"_counties\"\n\t};\n}\n\n//This function takes a county entry and creates an entry in the dropdown for it.\nfunction _countyEntryToDropdownEntry(countyEntry) {\n    if(countyEntry.county) {\n        return [countyEntry.county,countyEntry.combinedKey];\n    }\n    else {\n        return [\"<all>\",countyEntry.combinedKey];\n    }\n}\n"}},"data":{"name":"data","type":"apogee.JsonTable","updateData":{"data":{"state":"South Carolina","South Carolina_counties":{"county":"Lancaster, South Carolina, US"}}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionTable","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"countyName":{"name":"countyName","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let state = countySelector.data.state;\nlet key = state + \"_counties\";\nif((state)&&(countySelector.data[key])) {\n    return countySelector.data[key].county;\n}\nelse {\n    return null;\n}","supplementalCode":""}},"rowDeltaData":{"name":"rowDeltaData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let previousEntry = 0;\nreturn rowCountsData.map(entry => {\n    let delta = entry - previousEntry;\n    previousEntry = entry;\n    return delta;\n})","supplementalCode":""}}}}}}}},"components":{"Main":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"COVID Counts"}]},{"type":"paragraph","content":[{"type":"text","text":"This notebook gives the counts for Corona Virus by county."}]},{"type":"paragraph"}]}},"children":{"usInputData":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"US County Input Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is data from the github site managed b Johns Hopkins: "},{"type":"text","marks":[{"type":"link","attrs":{"href":"https://github.com/CSSEGISandData/COVID-19","title":null}}],"text":"https://github.com/CSSEGISandData/COVID-19"}]},{"type":"paragraph","content":[{"type":"text","text":"The url below is raw data in csv format for the US."}]},{"type":"apogeeComponent","attrs":{"name":"url","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the raw downloaded data:"}]},{"type":"apogeeComponent","attrs":{"name":"downloadedData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the data processed in to a row and column array. The field header is kept on. The parsing code is simplified parsing to handle this specific data. A more general csv parser could be added."}]},{"type":"apogeeComponent","attrs":{"name":"gridDataORIG","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"gridData","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Constant Values"}]},{"type":"paragraph","content":[{"type":"text","text":"Below are some column numbers from the above grid, with the first column being column 0;"}]},{"type":"apogeeComponent","attrs":{"name":"GRID_COLUMNS","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Below is the list of dates for the time series data.  This array should align with the getRowTimeSeries(row) data."}]},{"type":"apogeeComponent","attrs":{"name":"DATE_LIST","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following is a map of counties or other admin regions for a given state. Each state holds a list of admin regions. This is typically a county, in which case a \"county\" entry will be present. Otherwise it is the entire state/region. In this case there is no county region."}]},{"type":"apogeeComponent","attrs":{"name":"countyMap","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following is a list of unique state/regions."}]},{"type":"apogeeComponent","attrs":{"name":"stateList","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Data Access Functions"}]},{"type":"paragraph","content":[{"type":"text","text":"The following function can be used to retrieve as array of data from a given row. If the function is called on the first row, it will retrieve an array of the days on which the data was taken."}]},{"type":"apogeeComponent","attrs":{"name":"getRowTimeSeries","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following function can be used to find all rows with a given field value. "}]},{"type":"apogeeComponent","attrs":{"name":"getRows","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function returns the row for a given county state string. This string should include the full county and state names, and the county abbreviation (US for United States)."}]},{"type":"apogeeComponent","attrs":{"name":"getCountyState","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Function Examples/Tests"}]},{"type":"paragraph","content":[{"type":"text","text":"This first test uses the header row for get time series. It returns the list of data values for the county row returned ni the test getCountyStateTest."}]},{"type":"apogeeComponent","attrs":{"name":"getRowTimeSeriesTest","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we look for all rows from the state of West Virginia."}]},{"type":"apogeeComponent","attrs":{"name":"getRowTest","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we get the row for \"Santa Clara, California, US\""}]},{"type":"apogeeComponent","attrs":{"name":"getCountyStateTest","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"State Data"}]},{"type":"paragraph","content":[{"type":"text","text":"We need to access the rows from the table named \"ORIG\""}]},{"type":"apogeeComponent","attrs":{"name":"stateRowMap","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Create state totals, but only if there are multiple rows for this state."}]},{"type":"apogeeComponent","attrs":{"name":"stateTotalTimeSeries","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"stateTotalRows","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"modifiedGridData","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"downloadedData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"url":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"GRID_COLUMNS":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"getRowTimeSeries":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"getRowTimeSeriesTest":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"getRowTest":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"getCountyState":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"getCountyStateTest":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"DATE_LIST":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"countyMap":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"stateList":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"getRows":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"modifiedGridData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"gridDataORIG":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"gridData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"stateRowMap":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"stateTotalTimeSeries":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"stateTotalRows":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1}},"worldInputData":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Worldwide Input Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is data from the github site managed b Johns Hopkins: "},{"type":"text","marks":[{"type":"link","attrs":{"href":"https://github.com/CSSEGISandData/COVID-19","title":null}}],"text":"https://github.com/CSSEGISandData/COVID-19"}]},{"type":"paragraph","content":[{"type":"text","text":"The url below is raw data in csv format for the US."}]},{"type":"apogeeComponent","attrs":{"name":"url","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the raw downloaded data:"}]},{"type":"apogeeComponent","attrs":{"name":"downloadedData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the data processed in to a row and column array. The field header is kept on. The parsing code is simplified parsing to handle this specific data. A more general csv parser could be added."}]},{"type":"apogeeComponent","attrs":{"name":"gridData","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Constant Values"}]},{"type":"paragraph","content":[{"type":"text","text":"Below are some column numbers from the above grid, with the first column being column 0;"}]},{"type":"apogeeComponent","attrs":{"name":"GRID_COLUMNS","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Below is the list of dates for the time series data.  This array should align with the getRowTimeSeries(row) data."}]},{"type":"apogeeComponent","attrs":{"name":"DATE_LIST","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following is a map of counties or other admin regions for a given state. Each state holds a list of admin regions. This is typically a county, in which case a \"county\" entry will be present. Otherwise it is the entire state/region. In this case there is no county region."}]},{"type":"apogeeComponent","attrs":{"name":"countryMap","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following is a list of unique state/regions."}]},{"type":"apogeeComponent","attrs":{"name":"countryList","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Data Access Functions"}]},{"type":"paragraph","content":[{"type":"text","text":"The following function can be used to retrieve as array of data from a given row. If the function is called on the first row, it will retrieve an array of the days on which the data was taken."}]},{"type":"apogeeComponent","attrs":{"name":"getRowTimeSeries","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following function can be used to find all rows with a given field value. "}]},{"type":"apogeeComponent","attrs":{"name":"getRows","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function gets all rows with two column values specified."}]},{"type":"apogeeComponent","attrs":{"name":"getRows2","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function returns the row for a given county state string. This string should include the full county and state names, and the county abbreviation (US for United States)."}]},{"type":"apogeeComponent","attrs":{"name":"getCountryState","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This returns the row for a given state and country. "}]},{"type":"apogeeComponent","attrs":{"name":"getStateCountry","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Function Examples/Tests"}]},{"type":"paragraph","content":[{"type":"text","text":"This first test uses the header row for get time series. It returns the list of data values for the county row returned ni the test getCountyStateTest."}]},{"type":"apogeeComponent","attrs":{"name":"getRowTimeSeriesTest","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we look for all rows from the state of West Virginia."}]},{"type":"apogeeComponent","attrs":{"name":"getRows2Test","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we get the row for \"Santa Clara, California, US\""}]},{"type":"apogeeComponent","attrs":{"name":"getCountyStateTest","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"s"}]}]}},"children":{"url":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"downloadedData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"gridData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"GRID_COLUMNS":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"DATE_LIST":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"countryMap":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"countryList":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"getRowTimeSeriesTest":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"getCountyStateTest":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"getRowTimeSeries":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"getCountryState":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"getStateCountry":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":null}},"getRows":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":null}},"getRows2Test":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"getRows2":{"type":"apogeeapp.app.FunctionComponent","viewState":{"childDisplayState":null}}},"viewState":{"childDisplayState":null,"treeState":-1}},"worldPlotPage":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Worldwide COVID Counts"}]},{"type":"paragraph","content":[{"type":"text","text":"This form lets you select the country and, if available from the data, the state or province."}]},{"type":"apogeeComponent","attrs":{"name":"countrySelector","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here are the counts plotted for the selected country or state/province."}]},{"type":"apogeeComponent","attrs":{"name":"countyGraph","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the full county name selected from the selector form."}]},{"type":"apogeeComponent","attrs":{"name":"countrySelection","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This cell holds the data placed into the proper format for the plot cell."}]},{"type":"apogeeComponent","attrs":{"name":"countryGraphData","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Supporting Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the full data row for the given county."}]},{"type":"apogeeComponent","attrs":{"name":"countryRow","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the counts data from the row."}]},{"type":"apogeeComponent","attrs":{"name":"rowCountsData","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"rowDeltaData","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"countyGraph":{"type":"apogeeapp.app.CustomComponent","resource":{"html":"<div class=\"chartContainer\"><canvas class=\"chartCanvas\" id=\"chart_chart3\"></canvas></div>","css":".chartContainer {\r\n    position: relative;\r\n    /*height: 300px;*/\r\n    width: 800px;\r\n    overflow: none;\r\n}\r\n\r\n.chartCanvas {\r\n    position: relative;\r\n}","uiCode":"let canvas; \nlet chart;  \nlet chartData; \n   \n__customControlDebugHook();    \n\nreturn {\n    onLoad: function(outputElement,admin) {   \n        canvas = document.getElementById(\"chart_chart3\"); \n    }, \n     \n    setDisplayData: function(data) { \n    },\n    \n    setData: function(data) { \n        if(!chart) {\n            chartData = apogeeutil.jsonCopy(data); \n            chart = new Chart(canvas,chartData);\n        }\n        else {\n            chartData.data.labels = apogeeutil.jsonCopy(data.data.labels);\n            chartData.data.datasets = apogeeutil.jsonCopy(data.data.datasets);\n            chart.update(); \n        }\n    }  \n}"},"destroyOnInactive":false,"viewState":{"childDisplayState":{"views":{"Display":{"isViewActive":true},"Input Code":{"isViewActive":false},"Input Private":{"isViewActive":false},"HTML":{"isViewActive":false},"CSS":{"isViewActive":false},"uiGenerator()":{"isViewActive":false}}}}},"rowCountsData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"countrySelection":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"countrySelector":{"type":"apogeeapp.app.FormDataComponent","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"countryRow":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"countryGraphData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"rowDeltaData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"usPlotPage":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"US County COVID Counts"}]},{"type":"paragraph","content":[{"type":"text","text":"This table should hold the name of the county, including the full state name and country abbreviation."}]},{"type":"apogeeComponent","attrs":{"name":"countySelector","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here are the counts plotted for the given county."}]},{"type":"apogeeComponent","attrs":{"name":"countyGraph","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the full county name selected from the selector form."}]},{"type":"apogeeComponent","attrs":{"name":"countyName","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This cell holds the data placed into the proper format for the plot cell."}]},{"type":"apogeeComponent","attrs":{"name":"countyGraphData","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Supporting Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the full data row for the given county."}]},{"type":"apogeeComponent","attrs":{"name":"countyRow","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the counts data from the row."}]},{"type":"apogeeComponent","attrs":{"name":"rowCountsData","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"rowDeltaData","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"countyGraph":{"type":"apogeeapp.app.CustomComponent","resource":{"html":"<div class=\"chartContainer\"><canvas class=\"chartCanvas\" id=\"chart_chart2\"></canvas></div>","css":".chartContainer {\r\n    position: relative;\r\n    /*height: 300px;*/\r\n    width: 800px;\r\n    overflow: none;\r\n}\r\n\r\n.chartCanvas {\r\n    position: relative;\r\n}","uiCode":"let canvas; \nlet chart;  \nlet chartData; \n   \n__customControlDebugHook();    \n\nreturn {\n    onLoad: function(outputElement,admin) {   \n        canvas = document.getElementById(\"chart_chart2\"); \n    }, \n     \n    setDisplayData: function(data) { \n    },\n    \n    setData: function(data) { \n        if(!chart) {\n            chartData = apogeeutil.jsonCopy(data); \n            chart = new Chart(canvas,chartData);\n        }\n        else {\n            chartData.data.labels = apogeeutil.jsonCopy(data.data.labels);\n            chartData.data.datasets = apogeeutil.jsonCopy(data.data.datasets);\n            chart.update(); \n        }\n    }  \n}"},"destroyOnInactive":false,"viewState":{"childDisplayState":{"views":{"Display":{"isViewActive":true},"Input Code":{"isViewActive":false},"Input Private":{"isViewActive":false},"HTML":{"isViewActive":false},"CSS":{"isViewActive":false},"uiGenerator()":{"isViewActive":false}}}}},"rowCountsData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"countyRow":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"countyGraphData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"countySelector":{"type":"apogeeapp.app.FormDataComponent","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"countyName":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"rowDeltaData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}}},"viewState":{"childDisplayState":null,"treeState":1}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}