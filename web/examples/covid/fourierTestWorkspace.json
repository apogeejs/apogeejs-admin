{"fileType":"apogee app js workspace","version":"0.60","references":{"refEntries":[{"url":"http://localhost:8888/applications/modules/chartjsmodule/Chart.min.js","nickname":"","entryType":"js link"},{"url":"http://localhost:8888/applications/modules/chartjsmodule/ChartJSComponentModule.js?r=4","nickname":"","entryType":"es module"}],"viewState":{"treeState":1,"lists":{"es module":{"treeState":-1},"js link":{"treeState":-1},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"Fourier Workspace","children":{"Main":{"name":"Main","type":"apogee.Folder","children":{"sampleDataArray":{"name":"sampleDataArray","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return sampleDataSets[0].data;","supplementalCode":""}},"dataChart":{"name":"dataChart","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"\n    return {\n        \"chartType\": \"line\",\n        \"xValuesInputType\": \"common\",\n        \"commonXValueArray\": [],\n        \"datasets\": datasets,\n        \"generalOptions\": options,\n        \"storedData\": {\"chartType\":\"line\",\"xValuesInputType\":\"common\",\"commonXValueArray\":\"\",\"datasets\":\"datasets\",\"generalOptions\":\"options\"}\n    };","supplementalCode":""}},"datasets":{"name":"datasets","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"let datasets = [];\n\ndatasets.push( _createDataSet(sampleDataArray,0,1,\"Original\"));\ndatasets.push( _createDataSet(filtered,1,1,\"Filtered\"));\n\nreturn datasets;","supplementalCode":"function _createDataSet(inEntry,index,totalCount,label) {\n    return {\n        yArray: inEntry,\n        datasetOptions: {\n            label: label,\n            fill: false,\n            borderColor: _getColor(index,totalCount),\n            borderWidth: 1,\n            pointRadius: 0,\n            lineTension: 0\n        }\n    }\n}\n\n/** This function generates a color for the index based on the total count. */\nfunction _getColor(index,totalCount) {\n    let r = [0,255];\n    let g = [0,0];\n    let b = [255,0];\n    \n    //this function will interpolate a given color based on the index\n    let pick = c => c[0] + (c[1]-c[0]) * index / totalCount;\n    \n    return \"rgb(\" + pick(r) + \",\" + pick(g) + \",\" + pick(b) + \")\";  \n}"}},"options":{"name":"options","type":"apogee.JsonMember"
,"updateData":{"data":{"title":{"display":true,"text":"Fourier Test"},"scales":{"xAxes":[{"type":"category","display":true}],"yAxes":[{"type":"linear","display":true}]}}}},"filtered":{"name":"filtered","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return outData.data;","supplementalCode":""}},"kSpaceFiltered":{"name":"kSpaceFiltered","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return outData.filteredTransform;","supplementalCode":""}},"sampleDataSets":{"name":"sampleDataSets","type":"apogee.JsonMember"
,"updateData":{"data":[{"name":"Alabama","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.019745328801585,0.40789813152063403,0.8157962630412681,3.671083183685706,2.03949065760317,2.447388789123804,5.506624775528559,5.710573841288877,5.098726644007925,5.302675709768242,7.954013564652364,9.381657024974583,28.348920140684065,27.737072943403113,14.27643460322219,21.82255003635392,26.71732761460153,15.09223086626346,17.9475177869079,14.888281800503142,35.283188376534845,53.43465522920306,24.269938825477723,30.796308929807868,38.13847529717928,44.25694726998879,32.42790145589041,76.48089966011888,49.76357204551735,55.066247755285595,70.56637675306969,34.87529024501421,44.664845401509425,24.881786022758675]},{"name":"California","data":[0,0,0,0,0.050617248237336585,0,0,0,0,0.025308624118668292,0,0,0.07592587235600487,0,0,0,0,0,0,0,0.025308624118668292,0,0.025308624118668292,0,0,0,0,0,0,0,0.050617248237336585,0,0,0,0,0,0.025308624118668292,0,0.025308624118668292,0,0.22777761706801464,0.10123449647467317,0.25308624118668294,0.4049379858986927,0.20246899294934634,0.5567897306107025,0.3543207376613561,0.15185174471200974,1.0882708371027365,0.860493220034722,1.0882708371027365,1.5185174471200975,2.3030847947988144,0.025308624118668292,4.656786837834966,3.619133248969566,3.2395038871895414,4.4796264690042875,6.023452540243054,4.099997107224263,6.099378412599059,11.692584342824752,10.882708371027366,11.641967094587415,22.803070330920132,19.183937081950564,11.085177363976712,19.1586284578319,32.54689061660742,27.130845055212408,30.0919540770966,34.77404953905023,31.154916290080667,21.082083890850686,55.603047188714235,24.92899475688827,33.71108732606616,39.12713288746118,20.57591140847732,34.69812366669423,15.817890074167682,27.56109166522977,28.75059699880718,36.064789369102314,33.660470077828826]},{"name":"Mississippi","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.33600468256125615,1.6800234128062808,0,0,2.016028095367537,3.0240421430513056,4.36806087329633,5.376074920980098,10.080140476837684,20.160280953675368,22.512313731604163,14.112196667572759,23.85633246184919,19.1522669059916,36.28850571661567,31.584440160758078,28.224393335145518,32.25644952588059,29.56841206539054,30.240421430513052,45.69663682833084,34.94448698637064,60.816847543587365,32.59245420844184,61.48885690870988,33.600468256125616,59.47282881334234,29.56841206539054,86.35320341824283,70.22497865530254,58.128810083097314,46.704650876014604,54.09675389236224,48.72067897138214,91.72927833922293]},{"name":"North Carolina","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0953462996673177,0,0,0.0953462996673177,0,0,0,0.47673149833658846,0,0.7627703973385416,0.1906925993346354,0.7627703973385416,0.6674240976712239,0.6674240976712239,2.3836574916829423,2.6696963906848956,4.195237185361979,5.053353882367838,6.388202077710286,4.671968683698567,4.57662238403125,13.539174552759112,9.057898468395182,14.111252350763019,14.206598650430337,12.681057855753254,16.304217243111324,11.632248559412758,21.16687852614453,13.348481953424477,28.794582499529945,26.12488610884505,22.40638042181966,15.541446845772784,29.84339179587044,32.131702987886065,19.069259933463538,22.597073021154294,21.834302623815752,37.08971057058658,20.594800728140623,30.129430694872394,21.643610024481116,21.643610024481116]},{"name":"West Virginia","data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5579899416733114,0.5579899416733114,3.3479396500398684,2.2319597666932456,2.2319597666932456,0,3.3479396500398684,9.485829008446293,7.253869241753048,13.391758600159474,11.159798833466228,9.485829008446293,17.855678133545965,9.485829008446293,16.18170830852603,13.949748541832784,11.717788775139539,25.109547375299012,23.435577550279078,11.717788775139539,37.38532609211186,39.61728585880511,17.297688191872652,33.479396500398686,1.6739698250199342,8.927839066772982,10.043818950119604,16.18170830852603,34.595376383745304]}]}},"kSpaceChart":{"name":"kSpaceChart","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"\n    return {\n        \"chartType\": \"line\",\n        \"xValuesInputType\": \"common\",\n        \"commonXValueArray\": [],\n        \"datasets\": kDatasets,\n        \"generalOptions\": kOptions,\n        \"storedData\": {\"chartType\":\"line\",\"xValuesInputType\":\"common\",\"commonXValueArray\":\"\",\"datasets\":\"kDatasets\",\"generalOptions\":\"kOptions\"}\n    };","supplementalCode":""}},"kOptions":{"name":"kOptions","type":"apogee.JsonMember"
,"updateData":{"data":{"title":{"display":true,"text":"Filter Test"},"scales":{"xAxes":[{"type":"category","display":true}],"yAxes":[{"type":"linear","display":true}]}}}},"kDatasets":{"name":"kDatasets","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"let datasets = [];\n\nlet getCos = entry => entry.cosCoef;\nlet getSin = entry => entry.sinCoef\n\ndatasets.push( _createDataSet(kSpaceUnfiltered.map(getCos),0,1,\"Transformed - Cos\"));\ndatasets.push( _createDataSet(kSpaceUnfiltered.map(getSin),0,1,\"Transformed - Sin\"));\ndatasets.push( _createDataSet(kSpaceFiltered.map(getCos),1,1,\"Filtered - Cos\"));\ndatasets.push( _createDataSet(kSpaceFiltered.map(getSin),1,1,\"Filtered - Sin\"));\n\nreturn datasets;","supplementalCode":"function _createDataSet(inEntry,index,totalCount,label) {\n    return {\n        yArray: inEntry,\n        datasetOptions: {\n            label: label,\n            fill: false,\n            borderColor: _getColor(index,totalCount),\n            borderWidth: 1,\n            pointRadius: 0,\n            lineTension: 0\n        }\n    }\n}\n\n/** This function generates a color for the index based on the total count. */\nfunction _getColor(index,totalCount) {\n    let r = [0,255];\n    let g = [0,0];\n    let b = [255,0];\n    \n    //this function will interpolate a given color based on the index\n    let pick = c => c[0] + (c[1]-c[0]) * index / totalCount;\n    \n    return \"rgb(\" + pick(r) + \",\" + pick(g) + \",\" + pick(b) + \")\";  \n}"}},"fourierFilter":{"name":"fourierFilter","type":"apogee.FolderFunction","updateData":{"argList":["inData","filterParam"],"returnValue":"outData"},"children":{"body":{"name":"body","type":"apogee.Folder","children":{"fourier":{"name":"fourier","type":"apogee.FunctionMember"
,"updateData":{"argList":["inData"],"functionBody":"let outData = [];\nfor(let k = 0; k < inData.length; k++) {\n    let outEntry = {};\n    outEntry.k = k;\n    outEntry.cosCoef = inData.reduce( (total,currentValue,currentIndex) =>  total += _cosContribution(k,currentValue,currentIndex,inData.length) , 0 );\n    outEntry.sinCoef = inData.reduce( (total,currentValue,currentIndex) =>  total += _sinContribution(k,currentValue,currentIndex,inData.length) , 0 );\n    outData.push(outEntry);\n}\nreturn outData;\n","supplementalCode":"function _cosContribution(k,currentValue,currentIndex,numPoints) {\n    return currentValue * Math.cos(2 * Math.PI * k * currentIndex / numPoints);\n}\n\nfunction _sinContribution(k,currentValue,currentIndex,numPoints) {\n    return -currentValue * Math.sin(2 * Math.PI * k * currentIndex / numPoints);\n}"}},"inverseFourier":{"name":"inverseFourier","type":"apogee.FunctionMember"
,"updateData":{"argList":["inData"],"functionBody":"let outData = [];\nfor(let n = 0; n < inData.length; n++) {\n    let cosContribution = inData.reduce( (total,currentEntry,currentIndex) =>  total += _cosContribution(n,currentEntry.cosCoef,currentIndex,inData.length) , 0 );\n    let sinContribution = inData.reduce( (total,currentEntry,currentIndex) =>  total += _sinContribution(n,currentEntry.sinCoef,currentIndex,inData.length) , 0 );\n    outData.push(cosContribution - sinContribution);\n}\nreturn outData;","supplementalCode":"function _cosContribution(n,currentValue,currentIndex,numPoints) {\n    return currentValue * Math.cos(2 * Math.PI * n * currentIndex / numPoints) / numPoints;\n}\n\nfunction _sinContribution(n,currentValue,currentIndex,numPoints) {\n    return currentValue * Math.sin(2 * Math.PI * n * currentIndex / numPoints) / numPoints;\n}"}},"transformed":{"name":"transformed","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return fourier(inData);","supplementalCode":""}},"untransformed":{"name":"untransformed","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return inverseFourier(transformed);","supplementalCode":""}},"error":{"name":"error","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return inData.map( (value,index) => Math.abs(value - untransformed[index]) );","supplementalCode":""}},"kSpaceFiltered":{"name":"kSpaceFiltered","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"let getModifiedEntry = (entry,gain) => { return {k: entry.k, cosCoef: entry.cosCoef*gain, sinCoef: entry.sinCoef*gain} }\nlet getGain = (k,numK) => 1 - Math.exp( -Math.abs(Math.pow((k-numK/2)/filterParam,2)))\n\nreturn transformed.map( entry => getModifiedEntry(entry,getGain(entry.k,transformed.length)) );","supplementalCode":""}},"filtered":{"name":"filtered","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return inverseFourier(kSpaceFiltered);","supplementalCode":""}},"filterParam":{"name":"filterParam","type":"apogee.JsonMember"
,"updateData":{"data":33}},"inData":{"name":"inData","type":"apogee.JsonMember"
,"updateData":{"data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.019745328801585,0.40789813152063403,0.8157962630412681,3.671083183685706,2.03949065760317,2.447388789123804,5.506624775528559,5.710573841288877,5.098726644007925,5.302675709768242,7.954013564652364,9.381657024974583,28.348920140684065,27.737072943403113,14.27643460322219,21.82255003635392,26.71732761460153,15.09223086626346,17.9475177869079,14.888281800503142,35.283188376534845,53.43465522920306,24.269938825477723,30.796308929807868,38.13847529717928,44.25694726998879,32.42790145589041,76.48089966011888,49.76357204551735,55.066247755285595,70.56637675306969,34.87529024501421,44.664845401509425,24.881786022758675]}},"outData":{"name":"outData","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return {\n    data: filtered,\n    inputTransform: transformed,\n    filteredTransform: kSpaceFiltered \n}","supplementalCode":""}}}}}},"outData":{"name":"outData","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return fourierFilter(sampleDataArray,FILTER_PARAM);","supplementalCode":""}},"kSpaceUnfiltered":{"name":"kSpaceUnfiltered","type":"apogee.JsonMember"
,"updateData":{"argList":[],"functionBody":"return outData.inputTransform;","supplementalCode":""}},"FILTER_PARAM":{"name":"FILTER_PARAM","type":"apogee.JsonMember"
,"updateData":{"data":33}}}}}},"components":{"Main":{"type":"apogeeapp.PageComponent"
,"data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Fourier Transform Test"}]},{"type":"heading2","content":[{"type":"text","text":"Test Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is a set of sample data."}]},{"type":"apogeeComponent","attrs":{"name":"sampleDataSets","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a single data series from the sample data set."}]},{"type":"apogeeComponent","attrs":{"name":"sampleDataArray","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This parameter adjusts the filter settings"}]},{"type":"apogeeComponent","attrs":{"name":"FILTER_PARAM","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Fourier Filter"}]},{"type":"apogeeComponent","attrs":{"name":"fourierFilter","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Test"}]},{"type":"apogeeComponent","attrs":{"name":"outData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is unfiltered data in K space."}]},{"type":"apogeeComponent","attrs":{"name":"kSpaceUnfiltered","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is filtered data in K space."}]},{"type":"apogeeComponent","attrs":{"name":"kSpaceFiltered","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the output data"}]},{"type":"apogeeComponent","attrs":{"name":"filtered","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Charts"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a comparison of the filtered and unfiltered data."}]},{"type":"apogeeComponent","attrs":{"name":"dataChart","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is a chart of the filtered and unfiltered K Space data."}]},{"type":"apogeeComponent","attrs":{"name":"kSpaceChart","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Chart Data"}]},{"type":"paragraph","content":[{"type":"text","text":"These cells provide the chart data."}]},{"type":"apogeeComponent","attrs":{"name":"datasets","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"options","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Data for K Space"}]},{"type":"apogeeComponent","attrs":{"name":"kDatasets","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"kOptions","id":0,"state":""}},{"type":"heading2"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleDataArray":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"dataChart":{"type":"apogeeapp.ChartJSCell","viewState":{"childDisplayState":{"views":{"Chart":{"isViewActive":true},"Input":{"isViewActive":true},"Config (Debug)":{"isViewActive":false}}}}},"datasets":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":false,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"options":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"filtered":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":false,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"kSpaceFiltered":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":false,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"sampleDataSets":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"kSpaceChart":{"type":"apogeeapp.ChartJSCell","viewState":{"childDisplayState":{"views":{"Chart":{"isViewActive":true},"Input":{"isViewActive":true},"Config (Debug)":{"isViewActive":false}}}}},"kOptions":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"kDatasets":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"fourierFilter":{"type":"apogeeapp.PageFunctionComponent"
,"data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Fourier Filter"}]},{"type":"heading2","content":[{"type":"text","text":"Input Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the array of values we want to filter."}]},{"type":"apogeeComponent","attrs":{"name":"inData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a parameter for the filter."}]},{"type":"apogeeComponent","attrs":{"name":"filterParam","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Transformation Functions"}]},{"type":"apogeeComponent","attrs":{"name":"fourier","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"inverseFourier","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Filter Processing"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the fourier transform of the input data."}]},{"type":"apogeeComponent","attrs":{"name":"transformed","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the reconstituted data, unfiltered."}]},{"type":"apogeeComponent","attrs":{"name":"untransformed","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a check of error between the input and the reconstructed data. They should match to the machine/code accuracy."}]},{"type":"apogeeComponent","attrs":{"name":"error","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Filter Test"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we will filter the data in K space."}]},{"type":"apogeeComponent","attrs":{"name":"kSpaceFiltered","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we reconstitute the filtered data."}]},{"type":"apogeeComponent","attrs":{"name":"filtered","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Output"}]},{"type":"paragraph","content":[{"type":"text","text":"For the output we will give the filtered data plus some additional data for analysis."}]},{"type":"apogeeComponent","attrs":{"name":"outData","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"fourier":{"type":"apogeeapp.FunctionCell"
,"viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":true,"height":7000}}}}},"inverseFourier":{"type":"apogeeapp.FunctionCell"
,"viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":true,"height":7000}}}}},"transformed":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"untransformed":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"error":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"kSpaceFiltered":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"filtered":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"filterParam":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"inData":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"outData":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"treeState":-1,"tabOpened":true}},"outData":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":true},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"kSpaceUnfiltered":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"height":7000,"isViewActive":false}}}}},"FILTER_PARAM":{"type":"apogeeapp.JsonCell"
,"dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}