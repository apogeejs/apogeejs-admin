{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":-1,"lists":{"es module":{"treeState":0},"js link":{"treeState":0},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"ApacheLogExample","children":{"Main":{"name":"Main","type":"apogee.Folder","children":{"apacheLog":{"name":"apacheLog","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return apogeeutil.textRequest(logUrl);","supplementalCode":""}},"parsedLog":{"name":"parsedLog","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"var createEntry = row => {\n    var entry = {};\n    entry.ipAddress = row[0];\n    entry.date = _trimCharacters(row[3] + \" \" + row[4],1,1);\n    entry.method = _trimCharacters(row[5],1,0);\n    entry.path = row[6];\n    entry.protocol = _trimCharacters(row[7],0,1);\n    entry.responseCode = row[8];\n    \n    if(entry.path.includes(\"?\")) throw new Error(\"Doh! There is a query string!\");\n    \n    return entry;\n}\n\nreturn initialParse.map(createEntry);","supplementalCode":"function _trimCharacters(text,fromStart,fromEnd) {\r\n    return text.substring(fromStart,text.length-fromEnd);\r\n}"}},"endpointCounts":{"name":"endpointCounts","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"var returnValue = {};\n\nvar addToMapping = entry => {\n    if(returnValue[entry.path] !== undefined) {\n        returnValue[entry.path]++;\n    }\n    else {\n        returnValue[entry.path] = 1;\n    }\n}\n\nparsedLog.forEach(addToMapping);\n\nreturn returnValue;","supplementalCode":""}},"initialParse":{"name":"initialParse","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return apacheLog.split(\"\\n\").map(line => line.split(\" \"));","supplementalCode":""}},"logUrl":{"name":"logUrl","type":"apogee.JsonMember","updateData":{"data":"https://www.apogeejs.com/web/examples/apacheLogData/sampleShort.log"}}}}}},"components":{"Main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":" Apache Log Parsing Example"}]},{"type":"paragraph","content":[{"type":"text","text":"This is an example Apogee workspace that parses an Apache log."}]},{"type":"heading2","content":[{"type":"text","text":"Log Data"}]},{"type":"paragraph","content":[{"type":"text","text":"We will retrieve our data file from a url."}]},{"type":"apogeeComponent","attrs":{"name":"logUrl","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the raw Apache log data."}]},{"type":"apogeeComponent","attrs":{"name":"apacheLog","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Log Processing"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we will parse the Apache log into a format that is easier to work with."}]},{"type":"paragraph","content":[{"type":"text","text":"To make this job easier, we will do a simple step to parse this text file into a JSON object. We will split the text by line and then for each line we will split is on the spaces."}]},{"type":"paragraph","content":[{"type":"text","text":"To do this, we create the cell below with the simple formula referencing the "},{"type":"text","marks":[{"type":"italic"}],"text":"apacheLog"},{"type":"text","text":" cell. We can reference the cell by name as if it were a plain javascript variable."}]},{"type":"paragraph","content":[{"type":"text","text":"The output of the formula is given as the value of the cell. "}]},{"type":"apogeeComponent","attrs":{"name":"initialParse","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Now that we have this rough parsed version, we can further process it to give the data we want. In this case we will pull out the IP Address, data, request method, request path, protocol and response code. "}]},{"type":"paragraph","content":[{"type":"text","text":"We do this with the simple formula given below. In this case, we also added a "},{"type":"text","marks":[{"type":"italic"}],"text":"private"},{"type":"text","text":" functions, under the "},{"type":"text","marks":[{"type":"italic"}],"text":"Private"},{"type":"text","text":" tab. Here we can put constants and functions that are accessible only to the code in the formula for this cell. This just helps us keep the formula cleaner."}]},{"type":"paragraph","content":[{"type":"text","text":"The private function we added deleted given numbers of characters from the start and end of a string. This was helpful given the format of the data we ended up with in our initial parse cell."}]},{"type":"paragraph","content":[{"type":"text","text":"On thing to note is that, inside our main formula, we added a line that detects a query parameter. If the path contains a question mark we throw an error. This is because we would want to put the query parameter in a separate field. We are just being too lazy to do that. That is OK. This was not intended as a general web site analytics tool. It could have been meant to process the logs a specific web site. Or maybe it was mean to parse a specific log file. In this case we decided to save ourselves some work and then go back and add this code if we needed it."}]},{"type":"paragraph","content":[{"type":"text","text":"To test out what happens if there is a query parameter, go back and insert one in the log above that we are processing."}]},{"type":"apogeeComponent","attrs":{"name":"parsedLog","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Log Analysis "}]},{"type":"paragraph","content":[{"type":"text","text":"Now that we have the parsed log in a nice format we can do some analysis. In the formula for the cell below we made a map or dictionary that reports the number of times a given endpoint was called."}]},{"type":"apogeeComponent","attrs":{"name":"endpointCounts","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"apacheLog":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"parsedLog":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"endpointCounts":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"initialParse":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"logUrl":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}