{
	"fileType": "apogee app js workspace",
	"version": "0.60",
	"references": {
		"refEntries": [
			{
				"url": "http://localhost:8888/applications/modules/googleChart/GoogleChartComponent.js",
				"entryType": "es module"
			},
			{
				"url": "https://www.gstatic.com/charts/loader.js",
				"entryType": "js link"
			}
		]
	},
	"code": {
		"model": {
			"fileType": "apogee model",
			"version": 0.3,
			"name": "Population Workspace",
			"children": {
				"Model": {
					"name": "Model",
					"type": "apogee.Folder",
					"children": {
						"url": {
							"name": "url",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"data": "http://localhost:8888/examples/population/us2017.json"
							}
						},
						"populationData": {
							"name": "populationData",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"argList": [],
								"functionBody": "return apogeeutil.jsonRequest(url);",
								"supplementalCode": ""
							}
						},
						"rows": {
							"name": "rows",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"argList": [],
								"functionBody": "return populationData.map(entry => [entry.age,entry.males,entry.females]);",
								"supplementalCode": ""
							}
						},
						"chart": {
							"name": "chart",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"argList": [],
								"functionBody": "\n    return {\n        \"columns\": undefined,\n        \"rows\": rows,\n        \"options\": undefined\n    };",
								"supplementalCode": ""
							}
						},
						"columns": {
							"name": "columns",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"data": [
									"Age",
									"Males",
									"Females"
								]
							}
						},
						"chart2": {
							"name": "chart2",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"argList": [],
								"functionBody": "\n    return {\n        \"columns\": columns,\n        \"rows\": rows,\n        \"options\": undefined\n    };",
								"supplementalCode": ""
							}
						},
						"options": {
							"name": "options",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"data": {
									"hAxis": {
										"title": "Age"
									},
									"backgroundColor": "#f1f8e9",
									"title": "Population by Age and Gender",
									"height": 400,
									"width": 800
								}
							}
						},
						"chart3": {
							"name": "chart3",
							"type": "apogee.JsonMember"
,
							"updateData": {
								"argList": [],
								"functionBody": "\n    return {\n        \"columns\": columns,\n        \"rows\": rows,\n        \"options\": options\n    };",
								"supplementalCode": ""
							}
						},
						"populationComparison": {
							"name": "populationComparison",
							"type": "apogee.Folder",
							"children": {
								"populationChart": {
									"name": "populationChart",
									"type": "apogee.JsonMember"
,
									"updateData": {
										"argList": [],
										"functionBody": "\n    return {\n        \"columns\": populationColumns,\n        \"rows\": populationRows,\n        \"options\": options\n    };",
										"supplementalCode": ""
									}
								},
								"years": {
									"name": "years",
									"type": "apogee.JsonMember"
,
									"updateData": {
										"data": [
											1980,
											2000,
											2017
										]
									}
								},
								"yearToUrl": {
									"name": "yearToUrl",
									"type": "apogee.FunctionMember"
,
									"updateData": {
										"argList": [
											"year"
										],
										"functionBody": "return \"http://localhost:8888/examples/population/us\" + year + \".json\"",
										"supplementalCode": ""
									}
								},
								"populationData": {
									"name": "populationData",
									"type": "apogee.JsonMember"
,
									"updateData": {
										"argList": [],
										"functionBody": "//this convertes the year list to a list of promises for the request of each year\nlet requestPromiseList = years.map(yearToUrl).map(apogeeutil.jsonRequest);\n\n//we return a single promise, which is the combination of all the requests\nreturn Promise.all(requestPromiseList);",
										"supplementalCode": ""
									}
								},
								"popByAge": {
									"name": "popByAge",
									"type": "apogee.JsonMember"
,
									"updateData": {
										"argList": [],
										"functionBody": "let ageYearList = [];\n\npopulationData.forEach( yearAgeList => {\n    yearAgeList.forEach(yearAgeEntry => {\n        let ageYearEntry = ageYearList[yearAgeEntry.age];\n        if(!ageYearEntry) {\n            ageYearEntry = [];\n            ageYearList.push(ageYearEntry);\n        }\n        ageYearEntry.push(yearAgeEntry);\n    });\n});\n\nreturn ageYearList;",
										"supplementalCode": ""
									}
								},
								"populationRows": {
									"name": "populationRows",
									"type": "apogee.JsonMember"
,
									"updateData": {
										"argList": [],
										"functionBody": "let numberEntriesPerAge;\n\nreturn popByAge.map( (inAgeEntry, index) => {\n    outAgeEntry = [];\n    //take the age from the first entry\n    outAgeEntry.push(inAgeEntry[0].age);\n    \n    //we are going to make sure all age entries have the same number of year entries.\n    if(index == 0) {\n        numberEntriesPerAge = inAgeEntry.length;\n    }\n    else {\n        if(inAgeEntry.length != numberEntriesPerAge) throw new Error(\"Wrong nubmer of entries for age: \" + inAgeEntry[0].age);    \n    }\n    \n    //append the population for each year\n    inAgeEntry.forEach(yearAgeValue => outAgeEntry.push(yearAgeValue.total));\n    \n    return outAgeEntry;\n    \n})",
										"supplementalCode": ""
									}
								},
								"populationColumns": {
									"name": "populationColumns",
									"type": "apogee.JsonMember"
,
									"updateData": {
										"argList": [],
										"functionBody": "let columns = [];\ncolumns[0] = \"age\";\n\npopByAge[0].forEach(yearAgeEntry => columns.push(String(yearAgeEntry.year)));\n\nreturn columns;",
										"supplementalCode": ""
									}
								},
								"options": {
									"name": "options",
									"type": "apogee.JsonMember"
,
									"updateData": {
										"data": {
											"hAxis": {
												"title": "Age"
											},
											"title": "Population by Age and Year",
											"height": 400
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"components": {
			"Model": {
				"type": "apogeeapp.PageComponent"
,
				"treeState": null,
				"data": {
					"doc": {
						"type": "doc",
						"content": [
							{
								"type": "heading1",
								"content": [
									{
										"type": "text",
										"text": "Population Workspace"
									}
								]
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "This workspace is a simple demo to download and plot population data."
									}
								]
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "To plot the data we must include an external chart module. (write how to do this...)"
									}
								]
							},
							{
								"type": "heading2",
								"content": [
									{
										"type": "text",
										"text": "Input Data"
									}
								]
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "This is the url for the data."
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "url",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "This is the downloaded data."
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "populationData",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "heading2",
								"content": [
									{
										"type": "text",
										"text": "Processing"
									}
								]
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "The downloaded data is not in the format we want it, so we have to process it."
									}
								]
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "Below we will extract the quantities age, number of males and number of females, and stick them as an array value entry in a larger array."
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "rows",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "heading2",
								"content": [
									{
										"type": "text",
										"text": "Plotting"
									}
								]
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "Now we can plot the data. We can do this by opening the input view below and entering out "
									},
									{
										"type": "text",
										"marks": [
											{
												"type": "italic"
											}
										],
										"text": "rows"
									},
									{
										"type": "text",
										"text": " variable in the "
									},
									{
										"type": "text",
										"marks": [
											{
												"type": "italic"
											}
										],
										"text": "rows"
									},
									{
										"type": "text",
										"text": " field. We will select the chart type "
									},
									{
										"type": "text",
										"marks": [
											{
												"type": "italic"
											}
										],
										"text": "Line"
									},
									{
										"type": "text",
										"text": " and leave the other fields blank. "
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "chart",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "This gives default values for the columns. We can alternately create specific column values."
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "columns",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "Here is the chart with the column values set."
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "chart2",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "To make this a little more meaningful, we can set some chart options."
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "options",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "We will show the chart again with the given options."
									}
								]
							},
							{
								"type": "apogeeComponent",
								"attrs": {
									"name": "chart3",
									"id": 0,
									"state": ""
								}
							},
							{
								"type": "heading2",
								"content": [
									{
										"type": "text",
										"text": "Comparing different Years"
									}
								]
							},
							{
								"type": "paragraph",
								"content": [
									{
										"type": "text",
										"text": "Now that we have demonstrated some basic features, we will plot data from multiple years together. But to make this cleaner, we will do it on a new page. We will put it on a child page \"populationComparison\". Please open that page to view it."
									}
								]
							},
							{
								"type": "paragraph"
							},
							{
								"type": "paragraph"
							},
							{
								"type": "paragraph"
							}
						]
					},
					"selection": {
						"type": "text",
						"anchor": 1,
						"head": 1
					}
				},
				"children": {
					"url": {
						"type": "apogeeapp.JsonCell"
,
						"dataView": "Colorized"
					},
					"populationData": {
						"type": "apogeeapp.JsonCell"
,
						"dataView": "Colorized"
					},
					"rows": {
						"type": "apogeeapp.JsonCell"
,
						"dataView": "Colorized"
					},
					"chart": {
						"type": "apogeeapp.app.GoogleChartComponent",
						"formData": {
							"chartType": "line",
							"columns": "",
							"rows": "rows",
							"options": "",
							"headerRow": false
						}
					},
					"columns": {
						"type": "apogeeapp.JsonCell"
,
						"dataView": "Colorized"
					},
					"chart2": {
						"type": "apogeeapp.app.GoogleChartComponent",
						"formData": {
							"chartType": "line",
							"columns": "columns",
							"rows": "rows",
							"options": "",
							"headerRow": false
						}
					},
					"options": {
						"type": "apogeeapp.JsonCell"
,
						"dataView": "Colorized"
					},
					"chart3": {
						"type": "apogeeapp.app.GoogleChartComponent",
						"formData": {
							"chartType": "line",
							"columns": "columns",
							"rows": "rows",
							"options": "options",
							"headerRow": false
						}
					},
					"populationComparison": {
						"type": "apogeeapp.PageComponent"
,
						"treeState": null,
						"data": {
							"doc": {
								"type": "doc",
								"content": [
									{
										"type": "heading1",
										"content": [
											{
												"type": "text",
												"text": "Population Comparison"
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "This is a comparison of the population from different years."
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "populationChart",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "We see some interesting peaks in the data here."
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "First in 1980 there is a peak around 20. This is the Baby boomers. According to Wikipedia baby boomers is commonly defined people born from 1946 to 1960. This peak appears again in our data for the years 2000 and 2017."
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "Looking at 2000, there is another peak around the age of 10. There are millenials, which according to Wikipedia are people born between the early 1980's and the early 2000's. This peak is roughly 30 years after the peak for the baby boomers, which is the rough number given for the length between generations. So generally speaking, the millenials are the kids of the baby boomers."
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "There are two more \"generation\" names commonly in use, g"
											},
											{
												"type": "text",
												"marks": [
													{
														"type": "italic"
													}
												],
												"text": "eneration X"
											},
											{
												"type": "text",
												"text": " and, to a lesser extent, g"
											},
											{
												"type": "text",
												"marks": [
													{
														"type": "italic"
													}
												],
												"text": "eneration Z"
											},
											{
												"type": "text",
												"text": ". These are the population troughs between the peaks for the baby boomers and the millenials."
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "There is a little more information on the chart, but that goes beyond my rudimentary knowledge about our poplation. There is a peak that can be seen in the 1980's plot, for example, one generation before the baby boomers, which is presumably the baby boomers parents. Also, the plot for 2017 shows some extra wiggles, showing some additional dynamics in the population such as from immigration or deaths. I'll leave it as an exercise to the reader to explain that. "
											}
										]
									},
									{
										"type": "heading2",
										"content": [
											{
												"type": "text",
												"text": "Chart Format"
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "Here are the options for the chart format:"
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "options",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "heading2",
										"content": [
											{
												"type": "text",
												"text": "Input Data"
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "We will plot data from the following years:"
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "years",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "This function creates the url to retrieve the data of a given year."
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "yearToUrl",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "Below we download the data for the different years."
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "populationData",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "heading2",
										"content": [
											{
												"type": "text",
												"text": "Processing"
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "Here we will convert the above population into the proper rows format for our chart module. We will do this in two steps."
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "In the first step we will merge these different years into a single array, by age. In other words we will transpose the list so the outside list is the age and the inside list is by year."
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "popByAge",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "Lastly we will put this in the format needed for our chart package."
											}
										]
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "Our code is made a little easier by the fact that for each year the "
											},
											{
												"type": "text",
												"marks": [
													{
														"type": "italic"
													}
												],
												"text": "same"
											},
											{
												"type": "text",
												"text": " age entries are reported, as we can see from our data above. This means we don't need to double check the alignment between out output entries and the input years. BUT, we should enforce that it is true that each age entry is the same. We will throw an exception if this is not true. Then, if we have an error, we will need to go back and make our code handle this case."
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "populationRows",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "paragraph",
										"content": [
											{
												"type": "text",
												"text": "Lastly, we want to label our columns with the associated year."
											}
										]
									},
									{
										"type": "apogeeComponent",
										"attrs": {
											"name": "populationColumns",
											"id": 0,
											"state": ""
										}
									},
									{
										"type": "paragraph"
									},
									{
										"type": "paragraph"
									},
									{
										"type": "paragraph"
									},
									{
										"type": "paragraph"
									},
									{
										"type": "paragraph"
									},
									{
										"type": "paragraph"
									}
								]
							},
							"selection": {
								"type": "text",
								"anchor": 1,
								"head": 1
							}
						},
						"children": {
							"populationChart": {
								"type": "apogeeapp.app.GoogleChartComponent",
								"formData": {
									"chartType": "line",
									"columns": "populationColumns",
									"rows": "populationRows",
									"options": "options",
									"headerRow": false
								}
							},
							"years": {
								"type": "apogeeapp.JsonCell"
,
								"dataView": "Colorized"
							},
							"yearToUrl": {
								"type": "apogeeapp.FunctionCell"

							},
							"populationData": {
								"type": "apogeeapp.JsonCell"
,
								"dataView": "Colorized"
							},
							"popByAge": {
								"type": "apogeeapp.JsonCell"
,
								"dataView": "Colorized"
							},
							"populationRows": {
								"type": "apogeeapp.JsonCell"
,
								"dataView": "Colorized"
							},
							"populationColumns": {
								"type": "apogeeapp.JsonCell"
,
								"dataView": "Colorized"
							},
							"options": {
								"type": "apogeeapp.JsonCell"
,
								"dataView": "Colorized"
							}
						}
					}
				}
			}
		}
	}
}