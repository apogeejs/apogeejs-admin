{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":-1,"lists":{"es module":{"treeState":0},"js link":{"treeState":0},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"WorkspaceUpdater_0.50","children":{"Model":{"name":"Model","type":"apogee.Folder","children":{"inputFile":{"name":"inputFile","type":"apogee.JsonTable","updateData":{"data":{"fileType":"apogee app js workspace","version":"0.40","references":[],"workspace":{"fileType":"apogee workspace","version":0.2,"name":"AsynchronousFormulas","data":{"name":"Model","type":"apogee.Folder","children":{"customPromise":{"name":"customPromise","type":"apogee.Folder","children":{"delayMilliseconds":{"name":"delayMilliseconds","type":"apogee.JsonTable","updateData":{"data":5000,"description":""}},"MAX_DELAY":{"name":"MAX_DELAY","type":"apogee.JsonTable","updateData":{"data":5000,"description":""}},"asynchResult":{"name":"asynchResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var promiseFunction = function(resolve,reject) {\n\n    //create msg\n    var msg;\n    var error;\n    if(!isFinite(delayMilliseconds)) {\n        error = true;\n        msg = \"Not a valid number: \" + delayMilliseconds;\n    }\n    else if(delayMilliseconds < 0) {\n        error = true;\n        msg = \"The delay must be at least 0 miliseconds\";\n    }\n    else if(delayMilliseconds > MAX_DELAY) {\n        error = true;\n        msg = \"The max delay is \" + MAX_DELAY + \" milliseconds!\";\n    }\n    else {\n        error = false;\n        msg = \"That was a delay of \" + delayMilliseconds + \" milliseconds\";\n    }\n    \n    //resolve/reject\n    if(!error) {\n        setTimeout( () => resolve(msg), delayMilliseconds);\n    }\n    else {\n        reject(msg);\n    }\n}\n\nreturn new Promise(promiseFunction);\n","supplementalCode":"","description":"The formula for this table returns a custom promise. It will delay\nthe amount of time given in the field \"delayMilliseconds\". If there\nis a problem with that value (such as if it is not a number), the \npromise will be rejected and an error will be thrown."}}}},"webRequest":{"name":"webRequest","type":"apogee.Folder","children":{"webRequest":{"name":"webRequest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return apogee.net.jsonRequest(url);","supplementalCode":"","description":"This is a simple web request returning a JSON object."}},"url":{"name":"url","type":"apogee.JsonTable","updateData":{"data":"http://www.apogeejs.com/web/examples/BasicExample.json","description":""}}}},"NOTES":{"name":"NOTES","type":"apogee.JsonTable","updateData":{"data":"A formula for a table must be synchronous. If you need\nto do something synchronous, like make a web request,\nthe forumula should return a promise.\n\nTwo examples are shown here.","description":""}}}}},"components":{"type":"apogeeapp.app.FolderComponent","tabOpen":true,"treeState":1,"children":{"customPromise":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":40,"y":73}},"treeState":1,"children":{"delayMilliseconds":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":244,"height":72},"posInfo":{"x":48,"y":59},"state":0,"viewType":"Data"},"dataView":"Colorized"},"MAX_DELAY":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":216,"height":56},"posInfo":{"x":330,"y":58},"state":0,"viewType":"Data"},"dataView":"Colorized"},"asynchResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":543,"height":177},"posInfo":{"x":61,"y":196},"state":0,"viewType":"Data"},"dataView":"Colorized"}}},"webRequest":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":44,"y":150}},"treeState":1,"children":{"webRequest":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":516,"height":300},"posInfo":{"x":121,"y":173},"state":0,"viewType":"Text"},"dataView":"Colorized"},"url":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":495,"height":53},"posInfo":{"x":120,"y":61},"state":0,"viewType":"Text"},"dataView":"Colorized"}}},"NOTES":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":503,"height":129},"posInfo":{"x":225,"y":60},"state":0,"viewType":"Text"}}}},"activeTabMember":"Model"}}},"sampleDocEntry":{"name":"sampleDocEntry","type":"apogee.JsonTable","updateData":{"data":{"type":"doc","content":[{"type":"apogeeComponent","attrs":{"name":"inputFile","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a paragraph."}]}]}}},"outputFile":{"name":"outputFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(inputFile.length == 0) return \"\";\n\nlet output = apogeeutil.jsonCopy(inputFile);\n\nif(inputFile.version != \"0.40\") throw new Error(\"Input should be version 0.40.\")\n\n//set new version\noutput.version = \"0.50\";\n\n//update the folder entries\nlet rootComponent = output.components;\n\n_processComponent(rootComponent);\n\nreturn output;","supplementalCode":"const APOGEE_COMPONENT_NODE = {\n\t\"type\": \"apogeeComponent\",\n\t\"attrs\": {\n\t\t\"name\": \"NAME_HERE\",\n\t\t\"id\": 0,\n\t\t\"state\": \"\"\n\t}\n}\n\t\t\nconst EMPTY_PARAGRAPH = {\n\t\"type\": \"paragraph\",\n\t\"content\": [\n\t\t{\n\t\t\t\"type\": \"text\",\n\t\t\t\"text\": \" \"\n\t\t}\n\t]\n}\n\nfunction _processComponent(component) {\n    //for now we only support folders as having doc elements\n    //we need to add folder functions.\n    if(component.type == \"apogeeapp.app.FolderComponent\") {\n        //create the doc entry\n        let doc = {};\n        component.data = {};\n        component.data.doc = doc;\n        doc.type = \"doc\";\n        doc.content = [];\n        //add the top empty paragraph\n        doc.content.push(_getEmptyParagraph());\n        \n        //traverse the children\n        for(var childName in component.children) {\n            let childComponent = component.children[childName];\n            \n            //add a child node and empty paragraph if this is not a folder (we need to cleaen this up...)\n            if(childComponent.type != \"apogee.Folder\") {\n                doc.content.push(_getApogeeComponent(childName));\n                doc.content.push(_getEmptyParagraph());\n            }\n            \n            //process this child component\n            _processComponent(childComponent)\n        }\n    }\n}\n\nfunction _getEmptyParagraph() {\n    return apogeeutil.jsonCopy(EMPTY_PARAGRAPH);\n}\n\nfunction _getApogeeComponent(name) {\n    let node = apogeeutil.jsonCopy(APOGEE_COMPONENT_NODE);\n    node.attrs.name = name;\n    return node;\n}\n"}}}}}},"components":{"Model":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Workspace Updater 0.4 to 0.5"}]},{"type":"paragraph","content":[{"type":"text","text":"The workspace will take a version 0.40 workspace file and convert it into a proper workspace 0.5 input file."}]},{"type":"heading2","content":[{"type":"text","text":"Input File"}]},{"type":"apogeeComponent","attrs":{"name":"inputFile","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Modifications"}]},{"type":"paragraph","content":[{"type":"text","text":"We have the following modifcations:"}]},{"type":"heading3","content":[{"type":"text","text":"File Version"}]},{"type":"paragraph","content":[{"type":"text","text":"The file version should be updated from \"0.40\" to \"0.50\"."}]},{"type":"heading3","content":[{"type":"text","text":"Doc Entry for Folders"}]},{"type":"paragraph","content":[{"type":"text","text":"Folders (soon to be called pages) have a \"doc\" entry for the \"data\" object in the for the folder component object. Below is a sample Doc entry including a single apogee component and a trivial paragraph."}]},{"type":"paragraph","content":[{"type":"text","text":"We will want to add an apogee component to the folder, along with a paragraph after each one, and a paragraph at the top. Note the paragraphs can not be empty, so they have some minor content."}]},{"type":"apogeeComponent","attrs":{"name":"sampleDocEntry","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Library Name Modification"}]},{"type":"paragraph","content":[{"type":"text","text":"apogee.util => apogeeutil"}]},{"type":"paragraph","content":[{"type":"text","text":"apogee.net => apogeeutil"}]},{"type":"paragraph","content":[{"type":"text","text":"NOT COVERED HERE!!!"}]},{"type":"heading2","content":[{"type":"text","text":"Output Calculation"}]},{"type":"paragraph","content":[{"type":"text","text":"This entry will replace the version and insert the necessary components into each folder object."}]},{"type":"apogeeComponent","attrs":{"name":"outputFile","id":0,"state":""}}]}},"children":{"inputFile":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"sampleDocEntry":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"outputFile":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}