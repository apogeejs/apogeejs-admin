{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":-1,"lists":{"es module":{"treeState":0},"js link":{"treeState":0},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"SudokuHelper","children":{"Model":{"name":"Model","type":"apogee.Folder","children":{"gameBoard":{"name":"gameBoard","type":"apogee.JsonTable","updateData":{"data":[["5","3","4","6","7","8","9","1","2"],["6","7","2","1","9","5","3","4","8"],["1","9","8","3","4","2","5","6","7"],["8","5","9","7","6","1","4","2","3"],["4","2","6","8","5","3","7","9","1"],["7","1","3","9","2","4","8","5","6"],["9","6","1","5","3","7","2","8","4"],["2","8","7","4","1","9","6","3","5"],["3","4","5","2","8","6","1","7","9"]]}},"refGameBoard":{"name":"refGameBoard","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return [\n\t[\n\t\t\"5\",\n\t\t\"3\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"7\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\"\n\t],\n\t[\n\t\t\"6\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"1\",\n\t\t\"9\",\n\t\t\"5\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\"\n\t],\n\t[\n\t\t\"\",\n\t\t\"9\",\n\t\t\"8\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"6\",\n\t\t\"\"\n\t],\n\t[\n\t\t\"8\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"6\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"3\"\n\t],\n\t[\n\t\t\"4\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"8\",\n\t\t\"\",\n\t\t\"3\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"1\"\n\t],\n\t[\n\t\t\"7\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"2\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"6\"\n\t],\n\t[\n\t\t\"\",\n\t\t\"6\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"2\",\n\t\t\"8\",\n\t\t\"\"\n\t],\n\t[\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"4\",\n\t\t\"1\",\n\t\t\"9\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"5\"\n\t],\n\t[\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"8\",\n\t\t\"\",\n\t\t\"\",\n\t\t\"7\",\n\t\t\"9\"\n\t]\n];","supplementalCode":""}},"gameBoardData":{"name":"gameBoardData","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let data = [];\n\nfor(let ir = 0; ir < 9; ir++) {\n    data[ir] = [];\n    for(let ic = 0; ic < 9; ic++) {\n        let stringValue = gameBoard[ir][ic];\n        data[ir][ic] = stringValue == \"\" ? null : parseInt(stringValue);\n    }\n}\n\nreturn data;","supplementalCode":""}},"getAllowedSquareValues":{"name":"getAllowedSquareValues","type":"apogee.FolderFunction","updateData":{"argList":["rowIndex","columnIndex","gameBoardData"],"returnValue":"allowedSquareValues"},"children":{"body":{"name":"body","type":"apogee.Folder","children":{"rowIndex":{"name":"rowIndex","type":"apogee.JsonTable","updateData":{"data":3}},"columnIndex":{"name":"columnIndex","type":"apogee.JsonTable","updateData":{"data":2}},"gameBoardData":{"name":"gameBoardData","type":"apogee.JsonTable","updateData":{"data":[[5,3,null,null,7,null,null,null,null],[6,null,null,1,9,5,null,null,null],[null,9,8,null,null,null,null,6,null],[8,null,null,null,6,null,null,null,3],[4,null,null,8,null,3,null,null,1],[7,null,null,null,2,null,null,null,6],[null,6,null,null,null,null,2,8,null],[null,null,null,4,1,9,null,null,5],[null,null,null,null,8,null,null,7,9]]}},"sectionNumber":{"name":"sectionNumber","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return 3 * Math.floor(rowIndex / 3) + Math.floor(columnIndex / 3);","supplementalCode":""}},"sectionIndex":{"name":"sectionIndex","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return 3 * (rowIndex % 3) + (columnIndex % 3);","supplementalCode":""}},"rowSelections":{"name":"rowSelections","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let row = gameBoardData[rowIndex];\nlet rowSelections = [];\n\nrow.forEach( (value,index) => {\n    if((index != columnIndex)&&(value !== null)) rowSelections.push(value);\n});\n\nreturn rowSelections;","supplementalCode":""}},"columnSelections":{"name":"columnSelections","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let columnSelections = [];\n\ngameBoardData.forEach( (row,index) => {\n    let value = row[columnIndex];\n    if((index != rowIndex)&&(value != null)) columnSelections.push(value)\n});\n\nreturn columnSelections;","supplementalCode":""}},"sectionSelections":{"name":"sectionSelections","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let sectionSelections = [];\nlet iFirstRow = Math.floor(sectionNumber / 3) * 3;\nlet iFirstCol = (sectionNumber % 3) * 3;\n\nfor(let iSecRow = 0; iSecRow < 3; iSecRow++) {\n    for(let iSecCol = 0; iSecCol < 3; iSecCol++) {\n        \n        let localSectionIndex = iSecRow*3 + iSecCol;\n        if(localSectionIndex == sectionIndex) continue;\n        \n        let value = gameBoardData[iFirstRow + iSecRow][iFirstCol + iSecCol];\n        if(value != null) sectionSelections.push(value);   \n    }\n}\n\nreturn sectionSelections;","supplementalCode":""}},"allowedSquareValues":{"name":"allowedSquareValues","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"\n//start with all values allowed - expresssed as an array of booleans\n//we will map the index of the array to selection values. Note that the\n//array is 0=based while the selections are one-based.\nlet allowedValueBools = (new Array(9).fill(true));\n\n//this function removes a selection from the array\nlet removeFromAllowedValues = selection => {\n    allowedValueBools[selection-1] = false;\n}\n\n//exclude values from other sqaures in the same row\nrowSelections.forEach(removeFromAllowedValues);\n\n//exclude values from other sqaures in the same row\ncolumnSelections.forEach(removeFromAllowedValues);\n\n//exclude values from other sqaures in the same row\nsectionSelections.forEach(removeFromAllowedValues);\n\n//now we will convert our arry of bools to a list of selections\nallowedValues = [];\nallowedValueBools.forEach( (allowed,index) => {\n    if(allowed) allowedValues.push(index+1);\n});\n\nreturn allowedValues;\n\n\n\n\n","supplementalCode":""}}}}}},"allowedMoves":{"name":"allowedMoves","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"let allowedSquareValuesGrid = [];\n\nfor(let ir = 0; ir < 9; ir++) {\n    allowedSquareValuesGrid[ir] = [];\n    for(let ic = 0; ic < 9; ic++) {\n        let squareSelection = gameBoardData[ir][ic];\n        if(squareSelection == null) {\n            //if there is no selection, find the allowed values\n            allowedSquareValuesGrid[ir][ic] = getAllowedSquareValues(ir,ic,gameBoardData);\n        }\n        else {\n            //otherwise, show the current selection\n            allowedSquareValuesGrid[ir][ic] = `<${squareSelection}>`;\n        }\n    }\n}\n\nreturn allowedSquareValuesGrid;\n\n\n\n\n","supplementalCode":""}}}}}},"components":{"Model":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Sudoku Helper"}]},{"type":"paragraph","content":[{"type":"text","text":"This workspace is an aid for playing sudoku. It determines which squares are ruled out based on the other entries in a given row, column or section of the board."}]},{"type":"paragraph","content":[{"type":"text","text":"TO DO:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"I should detect illegal states"}]}]},{"type":"heading2","content":[{"type":"text","text":"Game Board"}]},{"type":"paragraph","content":[{"type":"text","text":"This is a copy of the game board, so you can revert to it if you screw up. Use the other game board below to play."}]},{"type":"apogeeComponent","attrs":{"name":"refGameBoard","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the game board that should be edited."}]},{"type":"apogeeComponent","attrs":{"name":"gameBoard","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Allowed Moves"}]},{"type":"paragraph","content":[{"type":"text","text":"This board contains the allowed moves for each square, based on the other values present in the given row, column and section. We use the function getAllowedSquareValues to find the value for each square that does not have a selection in it."}]},{"type":"apogeeComponent","attrs":{"name":"allowedMoves","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Processing"}]},{"type":"paragraph","content":[{"type":"text","text":"We will convert the game board above, which contains strings, to data that contains integers so it is easier to work with."}]},{"type":"apogeeComponent","attrs":{"name":"gameBoardData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we have a folder function to find the allowed values for a specific square given the current game board."}]},{"type":"apogeeComponent","attrs":{"name":"getAllowedSquareValues","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"gameBoard":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Grid","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":300},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"refGameBoard":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Grid","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":300},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"gameBoardData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"getAllowedSquareValues":{"type":"apogeeapp.app.FolderFunctionComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"getAllowedSquareValues"}]},{"type":"paragraph","content":[{"type":"text","text":"This page function finds the allowed values for a gameboard square given the square row and column and the game board data."}]},{"type":"heading2","content":[{"type":"text","text":"Inputs"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the row index for the working square."}]},{"type":"apogeeComponent","attrs":{"name":"rowIndex","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the column index for the working square."}]},{"type":"apogeeComponent","attrs":{"name":"columnIndex","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the game board data."}]},{"type":"apogeeComponent","attrs":{"name":"gameBoardData","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Processing"}]},{"type":"heading3","content":[{"type":"text","text":"Section Info"}]},{"type":"paragraph","content":[{"type":"text","text":"The following functions deal with sections. That is what I am calling a 3x3 section of the board. There may be a proper name for this, but I don't know much about sudoku so I am going with this."}]},{"type":"paragraph","content":[{"type":"text","text":"The naming conventions I am using is section number refers to the 3x3 square from the game board and section index refers to the sqaure within the section. The numbering/indexing starts at the top left (with 0) and increases by one as you go horizontally."}]},{"type":"paragraph","content":[{"type":"text","text":"Below are the section number and section index for the current active square."}]},{"type":"apogeeComponent","attrs":{"name":"sectionNumber","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"sectionIndex","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Selections"}]},{"type":"paragraph","content":[{"type":"text","text":"The following are the selections on the game board in the active row, excluding the current square."}]},{"type":"apogeeComponent","attrs":{"name":"rowSelections","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following are the selections on the game board in the active column, excluding the current square."}]},{"type":"apogeeComponent","attrs":{"name":"columnSelections","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following are the selections on the game board in the active section, excluding the current square."}]},{"type":"apogeeComponent","attrs":{"name":"sectionSelections","id":0,"state":""}},{"type":"paragraph"},{"type":"heading3","content":[{"type":"text","text":"Return Value"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we calculate what values are allowed for a cell given the current game board data. This is also the return value."}]},{"type":"apogeeComponent","attrs":{"name":"allowedSquareValues","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"rowIndex":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"columnIndex":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"gameBoardData":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Grid","viewState":{"childDisplayState":null}},"sectionNumber":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"sectionIndex":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"rowSelections":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"columnSelections":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"sectionSelections":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}},"allowedSquareValues":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":null}}},"viewState":{"treeState":-1}},"allowedMoves":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Grid","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":300},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}