{
	"fileType": "apogee js web workspace",
	"jsLinks": [],
	"cssLinks": [],
	"workspace": {
		"fileType": "apogee workspace",
		"version": 0.2,
		"data": {
			"name": "AsynchSample",
			"type": "apogee.Folder",
			"children": {
				"a": {
					"name": "a",
					"type": "apogee.JsonTable",
					"updateData": {
						"argList": [],
						"functionBody": "var value;\n//BASIC ASYNCHROUNOUS FORMULA\r\n//Proper error handling is shown in table b.\r\n\r\n//If a formula is asynchronous, the return value should be a \"Promise\"\r\n//A promise can often returned from asynchronous requests, or it can be manually\r\n//constructed. A manuall constructed example is given below. Simply pass\r\n//an appropriate function in to the Promise constructor.\r\n\r\nvar promiseFunction = function(resolve,reject) {\r\n    var result = 7 + seed;\r\n    var callback = function() {\r\n        resolve(result);\r\n    }\r\n    setTimeout(callback,3000);\r\n}\r\n\r\nvalue = new Promise(promiseFunction);\nreturn value;\n\n",
						"supplementalCode": "",
						"description": ""
					}
				},
				"b": {
					"name": "b",
					"type": "apogee.JsonTable",
					"updateData": {
						"argList": [],
						"functionBody": "var value;\n//ASYNCHRONOUS FORMULA WITH ERROR HANDLING\r\n\r\n//We do this similar to table \"a\" except here we handle a \r\n//error case. Our error case here is just a sample. It can be\r\n//triggered by setting the \"seed\" table to anything less than 6.\r\n\r\nvar promiseFunction = function(resolve,reject) {\r\n    var result = 4 + seed;\r\n    var error = (result < 10);\r\n    var callback = function() {\r\n        if(!error) {\r\n            resolve(result);\r\n        }\r\n        else {\r\n            reject(\"Error in asynchronous processing! Result to small\");\r\n        }\r\n    }\r\n    setTimeout(callback,5000);\r\n}\r\n\r\nvalue = new Promise(promiseFunction);\nreturn value;\n\n",
						"supplementalCode": "",
						"description": ""
					}
				},
				"c": {
					"name": "c",
					"type": "apogee.JsonTable",
					"updateData": {
						"argList": [],
						"functionBody": "var value;\n//This is a table that depends on tables\n//a and b, for demonstration purposes\n\nvalue = a + b;\nreturn value;\n\n",
						"supplementalCode": "",
						"description": ""
					}
				},
				"seed": {
					"name": "seed",
					"type": "apogee.JsonTable",
					"updateData": {
						"data": 9,
						"description": ""
					}
				}
			}
		}
	},
	"components": {
		"type": "apogeeapp.app.FolderComponent",
		"children": {
			"a": {
				"type": "apogeeapp.app.JsonTableComponent",
				"windowState": {
					"sizeInfo": {
						"width": 223,
						"height": 130
					},
					"posInfo": {
						"x": 75,
						"y": 75
					},
					"state": 0,
					"viewType": "Text"
				}
			},
			"b": {
				"type": "apogeeapp.app.JsonTableComponent",
				"windowState": {
					"sizeInfo": {
						"width": 232,
						"height": 159
					},
					"posInfo": {
						"x": 355,
						"y": 319
					},
					"state": 0,
					"viewType": "Text"
				}
			},
			"c": {
				"type": "apogeeapp.app.JsonTableComponent",
				"windowState": {
					"sizeInfo": {
						"width": 208,
						"height": 144
					},
					"posInfo": {
						"x": 71,
						"y": 317
					},
					"state": 0,
					"viewType": "Text"
				}
			},
			"seed": {
				"type": "apogeeapp.app.JsonTableComponent",
				"windowState": {
					"sizeInfo": {
						"width": 201,
						"height": 139
					},
					"posInfo": {
						"x": 406,
						"y": 105
					},
					"state": 0,
					"viewType": "Text"
				}
			}
		}
	}
}