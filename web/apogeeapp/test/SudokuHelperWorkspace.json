{"fileType":"apogee app js workspace","version":"0.40","references":[],"workspace":{"fileType":"apogee workspace","version":0.2,"name":"SudokuHelper","data":{"name":"Model","type":"apogee.Folder","children":{"gameBoard":{"name":"gameBoard","type":"apogee.JsonTable","updateData":{"data":[["","","6","","","","3","9","8"],["","","","2","","9","5","",""],["9","5","","6","","8","4","","2"],["","3","","8","6","","7","4","9"],["7","6","","","5","","8","2","1"],["","","","","9","","6","3","5"],["6","","7","1","","","9","5","3"],["","","5","9","","6","1","",""],["4","9","","","","","2","",""]],"description":""}},"possibleValues":{"name":"possibleValues","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"//new code idea\n//-create a game grid with each cell being the possible options for that cell, initially 1-9\n//-create an array with the rows. Each element is a reference to respective cells in the main grid (this is the game grid!)\n//-create an array for the cols. Each element is a reference to the respective cells in the main grid\n//-create an arrary of box. Each element is a reference to the respective cells in the main grid\n//\n// input game row, game col\n//- row index - game row, game col\n//- col index - game col, game row\n//- box index - below:\n//var box = 3 * Math.floor(row / 3) + Math.floor(col / 3);\n//var boxIndex = 3 * (row % 3) + (col % 3);\n\n//-to process a cell, gets its (row, index into row), (col, index into col), (box, index into box)\n//and procee each os the array elements\n//\n//- to update, check each row, col, box. Make a map of values to the number of boxes that have that option\n//- if there is only one option for a value, set that box to that value\n\n//old code\nvar possibleValueStruct = _getEmptyPossibleGrid();\n\n//for each row, traverse each cell, update the possible grid for each cell value\nvar processRow = (row,rowIndex) => {\n    row.forEach( (cellValue,colIndex) => _addValue(cellValue,rowIndex,colIndex,possibleValueStruct) );\n}\n\n//traverse each row in the game board\ngameBoard.forEach(processRow);\n\n\nvar structToList = entry => {\n    var options = [];\n    for(var key in entry) {\n        if(entry[key]) options.push(key);\n    }\n    return options;\n }\n\nvar possibleGrid = possibleValueStruct.map(row => row.map(structToList))\n\n//------------------------------------------------------\n//new - if there is only one possibility, set that value. If there are no possibilites return an error\nvar newGameBoard = possibleGrid.map( (row,rowIndex) => row.map( (cell,colIndex) => {\n        //check for an error\n        if(cell.length === 0) return \"XXX\";\n        \n        return (cell.length === 1) ? cell[0] : \"\";\n    })\n);\nif(apogee.util.jsonEquals(newGameBoard,gameBoard)) {\n    //console.log(\"equal\");\n}    \nelse {\n    //console.log(\"not equal\");\n    //apogeeMessenger.dataUpdate(\"gameBoard\",newGameBoard);\n    apogeeMessenger.compoundDataUpdate([[\"gameBoard\",newGameBoard],[\"lastAutoUpdate\",newGameBoard]])\n}\n//--------------------------------------------------------\n\n\nreturn possibleGrid;","supplementalCode":"function _getEmptyPossibleGrid() {\n    var possibleGrid = [];\n    for(var i = 0; i < 9; i++) {\n        var row = [];\n        possibleGrid.push(row);\n        for(var j = 0; j < 9; j++) {\n            row.push(_getAllValuesPossible());\n        }\n    }\n    \n    return possibleGrid;\n}\n\nfunction _getAllValuesPossible() {\n    entry = {};\n    for(var i = 1; i <= 9; i++) {\n        entry[i] = true;\n    }\n    return entry;\n}\n\nfunction _addValue(cellValue,rowIndex,colIndex,possibleValueStruct) {\n    //make sure there is a value set\n    if(cellValue == \"\") return;\n    \n    //reset the given options for this cell\n    var fixedValue = {};\n    fixedValue[cellValue] = true;\n    possibleValueStruct[rowIndex][colIndex] = fixedValue;\n    \n    //exclude value from all columns but current\n    for(var ic = 0; ic < 9; ic++) {\n        if(ic == colIndex) continue;\n        \n        possibleValueStruct[rowIndex][ic][cellValue] = false;\n    }\n    \n    //exclude value from all rows but current\n    for(var ir = 0; ir < 9; ir++) {\n        if(ir == rowIndex) continue\n        \n        possibleValueStruct[ir][colIndex][cellValue] = false;\n    }\n    \n    //exclude values in this box\n    var boxStartRow = 3 * Math.floor(rowIndex / 3);\n    var boxStartCol = 3 * Math.floor(colIndex / 3);\n    for(var ib = 0; ib < 9; ib++) {\n        var boxRow = boxStartRow + Math.floor(ib /3);\n        var boxCol = boxStartCol + ib % 3;\n        if((boxRow == rowIndex)&&(boxCol == colIndex)) continue;\n        \n        possibleValueStruct[boxRow][boxCol][cellValue] = false;\n    }\n}","description":""}},"startBoard":{"name":"startBoard","type":"apogee.JsonTable","updateData":{"data":[["","","6","","","","","9","8"],["","","","2","","","5","",""],["9","5","","","","8","4","",""],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["","","7","1","","","","5","3"],["","","5","","","6","","",""],["4","9","","","","","2","",""]],"description":""}},"restartForm":{"name":"restartForm","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var onSubmit = () => {\n    apogeeMessenger.compoundDataUpdate([\n            [\"gameBoard\",startBoard],\n            [\"moveList\",[]],\n            [\"lastAutoUpdate\",\"\"]\n        ]);\n} \n\nreturn [\n    {\n        type:\"submit\",\n        onSubmit: onSubmit\n    }\n]","supplementalCode":"","description":""}},"clearForm":{"name":"clearForm","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var onSubmit = () => {\n    //create a 9x9 array filled with the empty string\n    var emptyBoard = new Array(9).fill(new Array(9).fill(\"\"));\n    apogeeMessenger.dataUpdate(\"startBoard\",emptyBoard);\n} \n\nreturn [\n    {\n        type:\"submit\",\n        onSubmit: onSubmit\n    }\n]","supplementalCode":"","description":""}},"lastAutoUpdate":{"name":"lastAutoUpdate","type":"apogee.JsonTable","updateData":{"data":[["","","6","","","","3","9","8"],["","","","2","","9","5","",""],["9","5","","6","","8","4","","2"],["","3","","8","6","","7","4","9"],["7","6","","","5","","8","2","1"],["","","","","9","","6","3","5"],["6","","7","1","","","9","5","3"],["","","5","9","","6","1","",""],["4","9","","","","","2","",""]],"description":""}},"moveList":{"name":"moveList","type":"apogee.JsonTable","updateData":{"data":[[["","","6","","","","","9","8"],["","","","2","","","5","",""],["9","5","","","","8","4","",""],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["","","7","1","","","","5","3"],["","","5","","","6","","",""],["4","9","","","","","2","",""]],[["","","6","","","","3","9","8"],["","","","2","","","5","",""],["9","5","","","","8","4","",""],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["","","7","1","","","","5","3"],["","","5","","","6","","",""],["4","9","","","","","2","",""]],[["","","6","","","","3","9","8"],["","","","2","","","5","",""],["9","5","","","","8","4","",""],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["6","","7","1","","","","5","3"],["","","5","","","6","","",""],["4","9","","","","","2","",""]],[["","","6","","","","3","9","8"],["","","","2","","","5","",""],["9","5","","","","8","4","","2"],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["6","","7","1","","","","5","3"],["","","5","","","6","","",""],["4","9","","","","","2","",""]],[["","","6","","","","3","9","8"],["","","","2","","","5","",""],["9","5","","6","","8","4","","2"],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["6","","7","1","","","","5","3"],["","","5","","","6","","",""],["4","9","","","","","2","",""]],[["","","6","","","","3","9","8"],["","","","2","","9","5","",""],["9","5","","6","","8","4","","2"],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["6","","7","1","","","","5","3"],["","","5","","","6","","",""],["4","9","","","","","2","",""]],[["","","6","","","","3","9","8"],["","","","2","","9","5","",""],["9","5","","6","","8","4","","2"],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["6","","7","1","","","","5","3"],["","","5","9","","6","","",""],["4","9","","","","","2","",""]],[["","","6","","","","3","9","8"],["","","","2","","9","5","",""],["9","5","","6","","8","4","","2"],["","3","","","6","","","",""],["7","6","","","5","","","2","1"],["","","","","9","","","3",""],["6","","7","1","","","9","5","3"],["","","5","9","","6","","",""],["4","9","","","","","2","",""]]],"description":""}},"redoOldMove":{"name":"redoOldMove","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var onReplay = (value) => {\n    if(value.moveIndex === undefined) {\n        alert(\"You must select a valid move!\");\n        return;\n    }\n    \n    var moveIndex = parseInt(value.moveIndex);\n    var newMoveList = moveList.slice(0,moveIndex+1)\n    apogeeMessenger.compoundDataUpdate([\n            [\"gameBoard\",moveList[moveIndex]],\n            [\"moveList\",newMoveList]\n        ]);\n} \n\n// var onPreview = (value) => {\n    \n//     apogeeMessenger.dataUpdate(\"preview\",startBoard);\n// } \n\nvar oldMoveIndexes = moveList.map( (board,index) => index );\n\nreturn [\n    {\n        type:\"heading\",\n        level:\"2\",\n        text:\"Redo Old Move\"\n    },\n    {\n        type:\"dropdown\",\n        key:\"moveIndex\",\n        entries:oldMoveIndexes\n    },\n    {\n        type:\"submit\",\n        onSubmit: onReplay,\n        //onCancel: onPreview,\n        submitLabel: \"Replay\",\n        //cancelLabel: \"Preview\"\n    }\n]","supplementalCode":"","description":""}},"moveSaver":{"name":"moveSaver","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!apogee.util.jsonEquals(gameBoard,lastAutoUpdate)) {\n    var latestManualUpdate = moveList[moveList.length-1];\n    if(!apogee.util.jsonEquals(gameBoard,latestManualUpdate)) {\n        var newMoveList = apogee.util.jsonCopy(moveList); \n        newMoveList.push(gameBoard);\n        \n        apogeeMessenger.dataUpdate(\"moveList\",newMoveList);\n        console.log(\"New move!\");\n    }\n    else {\n        console.log(\"Repeat process of new move\");\n    }\n}\nelse {\n    console.log(\"Autoupdate\");\n}\n\nreturn \"This table displays not special value, but it is updating other tables remotely.\"","supplementalCode":"","description":""}},"temp":{"name":"temp","type":"apogee.JsonTable","updateData":{"data":[["","","6","","","","3","9","8"],["","","","2","","9","5","",""],["9","5","","6","","8","4","","2"],["","3","","8","6","","7","4","9"],["7","6","","","5","","8","2","1"],["","","","","9","","6","3","5"],["6","","7","1","","","9","5","3"],["","","5","9","","6","1","",""],["4","9","","","","","2","",""]],"description":""}},"NOTES":{"name":"NOTES","type":"apogee.JsonTable","updateData":{"data":"- in the code for possible values, I have a comment at the top that \ngives a new data structure model for calculating the possible data. \nFor this, i had in mice an addition that sets a field if there is only\none square in a row, column or box that has a given choice. This is\nsomething the user has to do manually now.\n\n- I have dirty code for saving moves. Think about this. It is a little \ncumbersome because I have to include a circular reference to the \nmoveList table (to append to it), and I have to make sure when my update\ntriggers a recalc I don't try to update moveList again. (A protected \ncircular reference. Otherwise it will lok indefintely)\n\n- I also have dirty error checking code. I should really improve this.","description":""}}}}},"components":{"type":"apogeeapp.app.FolderComponent","tabOpen":true,"treeState":-1,"children":{"gameBoard":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":687,"height":294},"posInfo":{"x":15,"y":582},"state":0,"viewType":"Data"},"dataView":"Grid"},"possibleValues":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":677,"height":297},"posInfo":{"x":750,"y":227},"state":0,"viewType":"Data"},"dataView":"Grid"},"startBoard":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":528,"height":264},"posInfo":{"x":56,"y":85},"state":0,"viewType":"Data"},"dataView":"Grid"},"restartForm":{"type":"apogeeapp.app.DynamicForm","windowState":{"sizeInfo":{"width":248,"height":68},"posInfo":{"x":27,"y":408},"state":0,"viewType":"Output"}},"clearForm":{"type":"apogeeapp.app.DynamicForm","windowState":{"sizeInfo":{"width":233,"height":63},"posInfo":{"x":79,"y":8},"state":0,"viewType":"Output"}},"lastAutoUpdate":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":542,"height":300},"posInfo":{"x":1141,"y":63},"state":-1,"viewType":"Data"},"dataView":"Grid"},"moveList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":422,"height":142},"posInfo":{"x":695,"y":12},"state":0,"viewType":"Data"},"dataView":"Colorized"},"redoOldMove":{"type":"apogeeapp.app.DynamicForm","windowState":{"sizeInfo":{"width":237,"height":135},"posInfo":{"x":332,"y":387},"state":0,"viewType":"Output"}},"moveSaver":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":641,"height":47},"posInfo":{"x":1146,"y":119},"state":-1,"viewType":"Data"},"dataView":"Text Data"},"temp":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":543,"height":300},"posInfo":{"x":897,"y":639},"state":0,"viewType":"Data"},"dataView":"Grid"},"NOTES":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":550,"height":217},"posInfo":{"x":773,"y":619},"state":0,"viewType":"Data"},"dataView":"Text Data"}}},"activeTabMember":"Model"}