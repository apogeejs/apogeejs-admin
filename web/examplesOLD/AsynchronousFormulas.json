{"fileType":"apogee app js workspace","version":"0.40","references":[],"workspace":{"fileType":"apogee workspace","version":0.2,"name":"AsynchronousFormulas","data":{"name":"Model","type":"apogee.Folder","children":{"customPromise":{"name":"customPromise","type":"apogee.Folder","children":{"delayMilliseconds":{"name":"delayMilliseconds","type":"apogee.JsonTable","updateData":{"data":5000,"description":""}},"MAX_DELAY":{"name":"MAX_DELAY","type":"apogee.JsonTable","updateData":{"data":5000,"description":""}},"asynchResult":{"name":"asynchResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var promiseFunction = function(resolve,reject) {\n\n    //create msg\n    var msg;\n    var error;\n    if(!isFinite(delayMilliseconds)) {\n        error = true;\n        msg = \"Not a valid number: \" + delayMilliseconds;\n    }\n    else if(delayMilliseconds < 0) {\n        error = true;\n        msg = \"The delay must be at least 0 miliseconds\";\n    }\n    else if(delayMilliseconds > MAX_DELAY) {\n        error = true;\n        msg = \"The max delay is \" + MAX_DELAY + \" milliseconds!\";\n    }\n    else {\n        error = false;\n        msg = \"That was a delay of \" + delayMilliseconds + \" milliseconds\";\n    }\n    \n    //resolve/reject\n    if(!error) {\n        setTimeout( () => resolve(msg), delayMilliseconds);\n    }\n    else {\n        reject(msg);\n    }\n}\n\nreturn new Promise(promiseFunction);\n","supplementalCode":"","description":"The formula for this table returns a custom promise. It will delay\nthe amount of time given in the field \"delayMilliseconds\". If there\nis a problem with that value (such as if it is not a number), the \npromise will be rejected and an error will be thrown."}}}},"webRequest":{"name":"webRequest","type":"apogee.Folder","children":{"webRequest":{"name":"webRequest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return apogee.net.jsonRequest(url);","supplementalCode":"","description":"This is a simple web request returning a JSON object."}},"url":{"name":"url","type":"apogee.JsonTable","updateData":{"data":"http://www.apogeejs.com/web/examples/BasicExample.json","description":""}}}},"NOTES":{"name":"NOTES","type":"apogee.JsonTable","updateData":{"data":"A formula for a table must be synchronous. If you need\nto do something synchronous, like make a web request,\nthe forumula should return a promise.\n\nTwo examples are shown here.","description":""}}}}},"components":{"type":"apogeeapp.app.FolderComponent","tabOpen":true,"treeState":1,"children":{"customPromise":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":40,"y":73}},"treeState":1,"children":{"delayMilliseconds":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":244,"height":72},"posInfo":{"x":48,"y":59},"state":0,"viewType":"Data"},"dataView":"Colorized"},"MAX_DELAY":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":216,"height":56},"posInfo":{"x":330,"y":58},"state":0,"viewType":"Data"},"dataView":"Colorized"},"asynchResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":543,"height":177},"posInfo":{"x":61,"y":196},"state":0,"viewType":"Data"},"dataView":"Colorized"}}},"webRequest":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":44,"y":150}},"treeState":1,"children":{"webRequest":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":516,"height":300},"posInfo":{"x":121,"y":173},"state":0,"viewType":"Text"},"dataView":"Colorized"},"url":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":495,"height":53},"posInfo":{"x":120,"y":61},"state":0,"viewType":"Text"},"dataView":"Colorized"}}},"NOTES":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":503,"height":129},"posInfo":{"x":225,"y":60},"state":0,"viewType":"Text"}}}},"activeTabMember":"Model"}