{"fileType":"apogee app js workspace","version":"0.50","references":{"viewState":{"treeState":-1}},"code":{"model":{"fileType":"apogee model","version":0.2,"name":"Workspace","data":{"name":"Main","type":"apogee.Folder","children":{"xxx":{"name":"xxx","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return a;","supplementalCode":""}},"a":{"name":"a","type":"apogee.JsonTable","updateData":{"data":"This is the text I want to inject. And a little more."}}}}},"components":{"Main":{"type":"apogeeapp.app.FolderComponent","data":{"doc":{"type":"doc","content":[{"type":"apogeeComponent","attrs":{"name":"xxx","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"asdfasdf"}]},{"type":"apogeeComponent","attrs":{"name":"a","id":0,"state":""}}]}},"children":{"xxx":{"type":"apogeeapp.app.CustomComponent","resource":{"html":"<h1>Hello</h1>\r\n<p>Is it me your looking for</p>\r\n<div id=\"xxx_test\"></div>\r\n<p> And here is some code to go afterwards.</p>","css":"","uiCode":"/** This sample class gives the format of the UI Generator object\n * that is used to construct the main display for a custom control. \n * The user should return an object with these functions to implement\n * the functionality of the display. All these methods are optional and\n * any can safely be omitted. As such, a class does not need to be\n * created, any object be passed in. If the class is used, an \n * instance should be returned from the uiGenerator view.\n * In the methods listed, outputElement is the HTML element that\n * contains the form. The admin argument is an object that contains\n * some utilities. See the documentation for a definition. */\nvar SampleUiGeneratorClass = class {\n    \n    /** This can have whatever you want in it. They user will \n     * return an an instance rather than the class so this is\n     * called by the user himself, if he even shooses to use\n     * a class. OPTIONAL */\n    constructor() {\n    }\n\n    /** This is called when the instance is first compiled into\n     * the control. Note the output element will exist but it \n     * may not be showing. The method onLoad will be called when\n     * the outputElement is loaded into the page. OPTIONAL */\n    init(outputElement,admin) {\n    }\n    \n    /** This method is called when the HTML element (outputElement)\n     * is loaded onto the page. OPTIONAL */\n    onLoad(outputElement,admin) {\n        this.testDiv = document.getElementById(\"xxx_test\");\n    }\n    \n    /** This method is called when the HTML element is unloaded\n     * from the page OPTIONAL */\n    onUnload(outputElement,admin) {\n    }\n    \n    /** This method is the way of passing data into the component.\n     * The code here can NOT access the other tables because this code\n     * is not part of our model. This object is just UI code.\n     * The data passed is the value returned \n     * from the user input function when the value updates. OPTIONAL */\n    setData(data,outputElement,admin) {\n        if(this.testDiv) {\n            this.testDiv.innerHTML = data;\n        }\n    }\n    \n    /** This method is used when save is pressed on the coponents save toolbar,\n     * if applicable. It retreives an data from the control, such as if this is\n     * an edit table. OPTIONAL */ \n    getData(outputElement,admin) {\n    }\n    \n    /** This method is called id the output element resizes. \n     * OPTIONAL */\n    onResize(outputElement,admin) {\n    }   \n    \n    /** This method is called before the window is closed. It should\n     * return apogeeapp.app.ViewMode.CLOSE_OK if it is OK to close\n     * this windows. If this function is omitted, it will be assumed\n     * it is OK to close. An alternate return value is \n     * apogeeapp.app.ViewMode.UNSAVED_DATA. OPTIONAL */\n    isCloseOk(outputElement,admin) {\n        return apogeeapp.app.ViewMode.CLOSE_OK;\n    }\n    \n    /** This method is called when the control is being destroyed. \n     * It allows the user to do any needed cleanup. OPTIONAL. */\n    destroy(outputElement,admin) {\n    }\n    \n}\n\nreturn new SampleUiGeneratorClass();"},"destroyOnInactive":false,"viewState":{"childDisplayState":{"views":{"Display":{"isViewActive":true},"Input Code":{"isViewActive":true,"height":7000},"Input Private":{"isViewActive":true,"height":7000},"HTML":{"isViewActive":true,"height":7000},"CSS":{"isViewActive":false,"height":7000},"uiGenerator()":{"height":7000,"isViewActive":false}}}}},"a":{"type":"apogeeapp.app.JsonTableComponent","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}