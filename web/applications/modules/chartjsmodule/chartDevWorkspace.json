{"fileType":"apogee app js workspace","version":"0.60","references":{"refEntries":[{"url":"/applications/modules/chartjsmodule/src/ChartJSComponentModule.js","nickname":"ChartJSComponentModule.j","entryType":"es module"}],"viewState":{"treeState":1,"lists":{"es module":{"treeState":1},"js link":{"treeState":0},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"ChartDevWorkspace","children":{"lineGraph":{"name":"lineGraph","type":"apogee.Folder","children":{"lineGraphForm":{"name":"lineGraphForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    let formMeta = formObject.getMeta();\n    let functionBody = apogeeui.getFormResultFunctionBody(formValue,formMeta);\n    admin.getCommandMessenger().dataCommand(\"functionBodyTest\",functionBody);\n}\n\nlet chartLayout = general.getFormLayout(\"line\");\n\nlet testLayout = chartLayout.concat([{\n    type: \"submit\",\n    onSubmit: onSubmit,\n    submitLabel: \"Submit\"\n}]);\n\n\nreturn testLayout;\n","supplementalCode":""}},"functionBodyTest":{"name":"functionBodyTest","type":"apogee.JsonMember","updateData":{"data":"let output = {};\noutput[\"inputType\"] = \"form\"\noutput[\"formData\"]= {};\noutput[\"formData\"][\"xValuesType\"] = \"numeric\"\noutput[\"formData\"][\"numericDataSeries\"]= []\noutput[\"formData\"][\"numericDataSeries\"][0]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"dataFormat\"] = \"values\"\noutput[\"formData\"][\"numericDataSeries\"][0][\"xValues\"] = testData.xDataNumbers\noutput[\"formData\"][\"numericDataSeries\"][0][\"yValues\"] = testData.yData1\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"line\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"line\"][\"selectColor\"] = false\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"line\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"]= {};\noutput[\"formData\"][\"options\"][\"xValuesType\"] = \"numeric\"\noutput[\"formData\"][\"options\"][\"title\"]= {};\noutput[\"formData\"][\"options\"][\"title\"][\"display\"] = false\noutput[\"formData\"][\"options\"][\"title\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"legend\"]= {};\noutput[\"formData\"][\"options\"][\"legend\"][\"display\"] = true\noutput[\"formData\"][\"options\"][\"line\"]= {};\noutput[\"formData\"][\"options\"][\"line\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"line\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"xAxes\"]= {};\noutput[\"formData\"][\"options\"][\"xAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"]= {};\noutput[\"formData\"][\"options\"][\"yAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"][\"stacked\"] = false\noutput[\"storedFormValue\"] = {\"inputType\":\"form\",\"formData\":{\"xValuesType\":\"numeric\",\"numericDataSeries\":[{\"dataFormat\":\"values\",\"xValues\":\"testData.xDataNumbers\",\"yValues\":\"testData.yData1\",\"options\":{\"label\":\"\",\"line\":{\"selectColor\":false,\"borderWidth\":\"default\",\"fill\":\"default\",\"selectAreaColor\":false,\"doLineTension\":\"default\",\"spanGaps\":\"default\",\"stepped\":\"default\"},\"point\":{\"showPoints\":\"default\",\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"}}}],\"options\":{\"xValuesType\":\"numeric\",\"title\":{\"display\":false,\"text\":\"\",\"fontSize\":\"default\",\"selectColor\":false},\"legend\":{\"display\":true,\"position\":\"default\"},\"line\":{\"selectColor\":false,\"borderWidth\":\"default\",\"fill\":\"default\",\"selectAreaColor\":false,\"doLineTension\":\"default\",\"spanGaps\":\"default\",\"stepped\":\"default\"},\"point\":{\"showPoints\":\"default\",\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"},\"xAxes\":{\"type\":\"linear\"},\"yAxes\":{\"type\":\"linear\",\"stacked\":false}}}}\nreturn output;"}},"functionBodyEval":{"name":"functionBodyEval","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"inputType\"] = \"form\"\noutput[\"formData\"]= {};\noutput[\"formData\"][\"xValuesType\"] = \"numeric\"\noutput[\"formData\"][\"numericDataSeries\"]= []\noutput[\"formData\"][\"numericDataSeries\"][0]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"dataFormat\"] = \"values\"\noutput[\"formData\"][\"numericDataSeries\"][0][\"xValues\"] = testData.xDataNumbers\noutput[\"formData\"][\"numericDataSeries\"][0][\"yValues\"] = testData.yData1\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"line\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"line\"][\"selectColor\"] = false\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"line\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"]= {};\noutput[\"formData\"][\"options\"][\"xValuesType\"] = \"numeric\"\noutput[\"formData\"][\"options\"][\"title\"]= {};\noutput[\"formData\"][\"options\"][\"title\"][\"display\"] = false\noutput[\"formData\"][\"options\"][\"title\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"legend\"]= {};\noutput[\"formData\"][\"options\"][\"legend\"][\"display\"] = true\noutput[\"formData\"][\"options\"][\"line\"]= {};\noutput[\"formData\"][\"options\"][\"line\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"line\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"xAxes\"]= {};\noutput[\"formData\"][\"options\"][\"xAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"]= {};\noutput[\"formData\"][\"options\"][\"yAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"][\"stacked\"] = false\noutput[\"storedFormValue\"] = {\"inputType\":\"form\",\"formData\":{\"xValuesType\":\"numeric\",\"numericDataSeries\":[{\"dataFormat\":\"values\",\"xValues\":\"testData.xDataNumbers\",\"yValues\":\"testData.yData1\",\"options\":{\"label\":\"\",\"line\":{\"selectColor\":false,\"borderWidth\":\"default\",\"fill\":\"default\",\"selectAreaColor\":false,\"doLineTension\":\"default\",\"spanGaps\":\"default\",\"stepped\":\"default\"},\"point\":{\"showPoints\":\"default\",\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"}}}],\"options\":{\"xValuesType\":\"numeric\",\"title\":{\"display\":false,\"text\":\"\",\"fontSize\":\"default\",\"selectColor\":false},\"legend\":{\"display\":true,\"position\":\"default\"},\"line\":{\"selectColor\":false,\"borderWidth\":\"default\",\"fill\":\"default\",\"selectAreaColor\":false,\"doLineTension\":\"default\",\"spanGaps\":\"default\",\"stepped\":\"default\"},\"point\":{\"showPoints\":\"default\",\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"},\"xAxes\":{\"type\":\"linear\"},\"yAxes\":{\"type\":\"linear\",\"stacked\":false}}}}\nreturn output;","supplementalCode":""}},"chartInput":{"name":"chartInput","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let formValue = functionBodyEval;\nlet chartData;\nif(formValue.inputType != \"form\") throw new Error(\"This page only works on form data\");\nelse chartData = formValue.formData;\n\nreturn general.createChartConfig(chartData,\"line\");"}},"testChart":{"name":"testChart","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"inputType\"] = \"rawConfig\"\noutput[\"configData\"] = chartInput\noutput[\"storedFormValue\"] = {\"inputType\":\"rawConfig\",\"configData\":\"chartInput\"}\nreturn output;","supplementalCode":""}},"test":{"name":"test","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n\t\"type\": \"line\",\n\t\"options\": {\n\t\t\"elements\": {\n\t\t\t\"point\": {\n\t\t\t\t\"selectColor\": false,\n\t\t\t\t\"borderColor\": \"auto\"\n\t\t\t},\n\t\t\t\"line\": {\n\t\t\t\t\"selectColor\": false,\n\t\t\t\t\"selectAreaColor\": false,\n\t\t\t\t\"borderColor\": \"auto\",\n\t\t\t\t\"fill\": false,\n\t\t\t\t\"backgroundColor\": \"auto\"\n\t\t\t}\n\t\t},\n\t\t\"title\": {\n\t\t\t\"display\": false,\n\t\t\t\"selectColor\": false\n\t\t},\n\t\t\"legend\": {\n\t\t\t\"display\": true\n\t\t},\n\t\t\"scales\": {\n\t\t\t\"xAxes\": [\n\t\t\t\t{}\n\t\t\t],\n\t\t\t\"yAxes\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"linear\",\n\t\t\t\t\t\"stacked\": false\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t\"data\": {\n\t\t\"datasets\": [\n\t\t\t{\n\t\t\t\t\"data\": [\n\t\t\t\t\t4,\n\t\t\t\t\t2,\n\t\t\t\t\t7,\n\t\t\t\t\t3,\n\t\t\t\t\t7,\n\t\t\t\t\t2,\n\t\t\t\t\t7\n\t\t\t\t],\n\t\t\t\t\"selectColor\": true,\n\t\t\t\t\"pointBorderColor\": \"blue\",\n\t\t\t\t\"borderColor\": \"#ff004c\",\n\t\t\t\t\"selectAreaColor\": true,\n\t\t\t\t\"backgroundColor\": \"orange\", //\"rgba(255,0,76,0.2)\",\n\t\t\t\t\"fill\": \"true\"\n\t\t\t}\n\t\t],\n\t\t\"labels\": [\n\t\t\t1,\n\t\t\t2,\n\t\t\t3,\n\t\t\t4,\n\t\t\t5,\n\t\t\t6,\n\t\t\t7\n\t\t]\n\t}\n}","supplementalCode":""}}}},"general":{"name":"general","type":"apogee.Folder","children":{"legendForm":{"name":"legendForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [legendConfigElement];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"legend":{"display":true,"position":"default"}}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"titleForm":{"name":"titleForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [titleConfigElement];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"display":true,"title":{"text":"","fontSize":"default","selectColor":true,"fontColor":"#1fbe33"}}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"lineForm":{"name":"lineForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [lineConfigElement];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"line":{"selectColor":true,"borderColor":"#52db24","borderWidth":2,"fill":false,"selectAreaColor":true,"backgroundColor":"#0000ff","doLineTension":true,"lineTension":"0.5","spanGaps":true,"stepped":"middle"}}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"pointForm":{"name":"pointForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"return [pointConfigElement];","supplementalCode":""}},"rectForm":{"name":"rectForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [rectConfigElement];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"rectangle":{"selectAreaColor":true,"backgroundColor":"#0000ff","selectBorderColor":true,"borderColor":"#34cbc7","borderWidth":"default"}}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"xAxisNumericForm":{"name":"xAxisNumericForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [xAxisConfigElement];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"yAxisForm":{"name":"yAxisForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [yAxisConfigEntry];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"titleConfigElement":{"name":"titleConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n    type: \"showHideLayout\",\r\n    heading: \"Title\",\r\n    closed: true,\r\n    formData: [\r\n        {\r\n        \ttype: \"panel\",\r\n        \tformData: [\r\n        \t    {\r\n        \t\t\ttype: \"checkbox\",\r\n        \t\t\tlabel: \"Show: \",\r\n        \t\t\tvalue: false,\r\n        \t\t\tkey: \"display\"\r\n        \t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"textField\",\r\n\t\t\t\t\tlabel: \"Text: \",\r\n\t\t\t\t\tkey: \"text\",\r\n\t\t\t\t\tmeta: {\r\n\t\t\t\t\t\t\"excludeValue\": \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n            \t\ttype: \"dropdown\",\r\n            \t\tlabel: \"Font Size: \",\r\n            \t\tentries: [[\"Use Default\",\"default\"],[\"10px\",10],[\"12px\",12],[\"14px\",14],[\"18px\",18],[\"24px\",24],[\"36px\",36],[\"48px\",48]],\r\n            \t\tkey: \"fontSize\",\r\n            \t\tmeta: {\r\n            \t\t\t\"excludeValue\": \"default\"\r\n            \t\t}\r\n            \t},\r\n        \t\t{\r\n        \t\t\ttype: \"horizontalLayout\",\r\n        \t\t\tformData: [\r\n        \t\t\t\t{\r\n                    \t    type: \"radioButtonGroup\",\r\n                    \t    label: \"Font Color: \",\r\n                    \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n                    \t    horizontal: true,\r\n                    \t    value: false,\r\n                    \t    key: \"selectColor\"\r\n                    \t},\r\n                    \t{\r\n                    \t\ttype: \"colorPicker\",\r\n                    \t\tkey: \"fontColor\",\r\n                    \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n                    \t\tselector: {\r\n                    \t\t    parentKey: \"selectColor\",\r\n                    \t\t    parentValue: true\r\n                    \t\t}\r\n                    \t}\r\n        \t\t\t]\r\n        \t\t}\r\n        \t],\r\n        \tkey: \"title\",\r\n        \tmeta: {\r\n        \t\t\"expression\": \"object\"\r\n        \t}\r\n        }\r\n    ]\r\n}","supplementalCode":""}},"legendConfigElement":{"name":"legendConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n    type: \"showHideLayout\",\r\n    heading: \"Legend\",\r\n    closed: true,\r\n    formData: [\r\n        {\r\n        \ttype: \"panel\",\r\n        \tformData: [\r\n        \t    {\r\n        \t        type: \"horizontalLayout\",\r\n        \t\t    formData: [\r\n                \t\t{\r\n                \t\t\ttype: \"checkbox\",\r\n                \t\t\tlabel: \"Show: \",\r\n                \t\t\tvalue: true,\r\n                \t\t\tkey: \"display\"\r\n                \t\t},\r\n                \t\t{\r\n                \t\t\ttype: \"dropdown\",\r\n                \t\t\tlabel: \"Position: \",\r\n                \t\t\tentries: [\"default\",\"top\",\"bottom\",\"right\",\"left\"],\r\n                \t\t\tvalue: \"default\",\r\n                \t\t\tkey: \"position\",\r\n                \t\t\tselector: {\r\n                \t\t\t\tparentKey: \"display\",\r\n                \t\t\t\tparentValue: true\r\n                \t\t\t},\r\n                \t\t\tmeta: {\r\n                \t\t\t\t\"excludeValue\": \"default\"\r\n                \t\t\t}\r\n                \t\t}\r\n                \t]\r\n        \t\t}\r\n        \t],\r\n        \tkey: \"legend\",\r\n        \tmeta: {\r\n        \t\t\"expression\": \"object\"\r\n        \t}\r\n        }\r\n    ]\r\n}","supplementalCode":""}},"lineConfigElement":{"name":"lineConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n    type: \"showHideLayout\",\r\n    heading: \"Line Style\",\r\n    closed: true,\r\n    formData: [\r\n        {\r\n        \ttype: \"panel\",\r\n        \tformData: [\r\n        \t    {\r\n                    type: \"horizontalLayout\",\r\n                    formData: [\r\n                    \t{\r\n                    \t    type: \"radioButtonGroup\",\r\n                    \t    label: \"Color: \",\r\n                    \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n                    \t    horizontal: true,\r\n                    \t    value: false,\r\n                    \t    key: \"selectColor\"\r\n                    \t},\r\n                    \t{\r\n                    \t\ttype: \"colorPicker\",\r\n                    \t\tkey: \"borderColor\",\r\n                    \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n                    \t\tselector: {\r\n                    \t\t    parentKey: \"selectColor\",\r\n                    \t\t    parentValue: true\r\n                    \t\t}\r\n                    \t}\r\n                    ]\r\n            \t},\r\n        \t    {\r\n            \t\ttype: \"dropdown\",\r\n            \t\tlabel: \"Line Width: \",\r\n            \t\tentries: [[\"Use Default\",\"default\"],[\"1px\",1],[\"2px\",2],[\"3px\",3],[\"5px\",5],[\"7px\",7],[\"10px\",10]],\r\n            \t\tkey: \"borderWidth\",\r\n            \t\tmeta: {\r\n            \t\t\t\"excludeValue\": \"default\"\r\n            \t\t}\r\n            \t},\t\r\n            \t{\r\n\t\t\t\t\ttype: \"radioButtonGroup\",\r\n\t\t\t\t\tlabel: \"Fill Area Under Line: \",\r\n\t\t\t\t\tentries: [[\"Use Default\",\"default\"],[\"Don't Show\",false],[\"Show\",true]],\r\n\t\t\t\t\tvalue: \"default\",\r\n\t\t\t\t\thorizontal: true,\r\n\t\t\t\t\tkey: \"fill\",\r\n\t\t\t\t\tmeta: {\r\n\t\t\t\t\t\t\"excludeValue\": \"default\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n        \t\t{\r\n        \t\t    type: \"horizontalLayout\",\r\n        \t\t    formData: [\r\n        \t\t\t\t{\r\n                    \t    type: \"radioButtonGroup\",\r\n                    \t    label: \"Area Color: \",\r\n                    \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n                    \t    horizontal: true,\r\n                    \t    value: false,\r\n                    \t    key: \"selectAreaColor\"\r\n                    \t},\r\n                    \t{\r\n                    \t\ttype: \"colorPicker\",\r\n                    \t\tkey: \"backgroundColor\",\r\n                    \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n                    \t\tselector: {\r\n                    \t\t    parentKey: \"selectAreaColor\",\r\n                    \t\t    parentValue: true\r\n                    \t\t}\r\n                    \t}\r\n        \t\t\t]\r\n                },\r\n                {\r\n        \t\t    type: \"horizontalLayout\",\r\n        \t\t    formData: [\r\n        \t\t\t\t{\r\n        \t\t\t\t\ttype: \"radioButtonGroup\",\r\n        \t\t\t\t\tlabel: \"Line Tension: \",\r\n        \t\t\t\t\tentries: [[\"Use Default\",\"default\"],[\"Select\",true]],\r\n        \t\t\t\t\tvalue: \"default\",\r\n        \t\t\t\t\thorizontal: true,\r\n        \t\t\t\t\tkey: \"doLineTension\",\r\n        \t\t\t\t\tmeta: {\r\n        \t\t\t\t\t\t\"excludeValue\": \"default\"\r\n        \t\t\t\t\t}\r\n        \t\t\t\t},\r\n        \t\t\t\t{\r\n        \t\t\t\t\ttype: \"slider\",\r\n        \t\t\t\t\tkey: \"tension\",\r\n        \t\t\t\t\tmin: 0,\r\n        \t\t\t\t\tmax: .5,\r\n        \t\t\t\t\tstep: .05,\r\n        \t\t\t\t\tvalue: 0,\r\n        \t\t\t\t\tselector: {\r\n        \t\t\t\t\t    parentKey: \"doLineTension\",\r\n        \t\t\t\t\t    parentValue: true\r\n        \t\t\t\t\t}\r\n        \t\t\t    }\r\n        \t\t\t]\r\n                },\r\n                {\r\n                    type: \"dropdown\",\r\n                    label: \"Span Gaps: \",\r\n                    entries: [[\"Use Default\",\"default\"],true,false],\r\n                    key: \"spanGaps\",\r\n                    meta: {\r\n        \t\t\t\t\"excludeValue\": \"default\"\r\n        \t\t\t}\r\n                },\r\n                {\r\n                    type: \"dropdown\",\r\n                    label: \"Stepped Line: \",\r\n                    entries: [[\"Use Default\",\"default\"],false,[\"Before\",\"before\"],[\"Middle\",\"middle\"],[\"After\",\"after\"]],\r\n                    key: \"stepped\",\r\n                    meta: {\r\n        \t\t\t\t\"excludeValue\": \"default\"\r\n        \t\t\t}\r\n                }\r\n            ],\r\n        \tkey: \"line\",\r\n        \tmeta: {\r\n        \t\t\"expression\": \"object\"\r\n        \t}\r\n        }\r\n\t]\r\n};","supplementalCode":""}},"rectConfigElement":{"name":"rectConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n    type: \"showHideLayout\",\r\n    heading: \"Bar Style\",\r\n    closed: true,\r\n    formData: [\r\n        {\r\n        \ttype: \"panel\",\r\n        \tformData: [\r\n        \t\t{\r\n        \t\t    type: \"horizontalLayout\",\r\n        \t\t    formData: [\r\n        \t\t\t\t{\r\n                    \t    type: \"radioButtonGroup\",\r\n                    \t    label: \"Fill Color: \",\r\n                    \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n                    \t    horizontal: true,\r\n                    \t    value: false,\r\n                    \t    key: \"selectAreaColor\"\r\n                    \t},\r\n                    \t{\r\n                    \t\ttype: \"colorPicker\",\r\n                    \t\tkey: \"backgroundColor\",\r\n                    \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n                    \t\tselector: {\r\n                    \t\t    parentKey: \"selectAreaColor\",\r\n                    \t\t    parentValue: true\r\n                    \t\t}\r\n                    \t}\r\n        \t\t\t]\r\n        \t\t},\r\n        \t\t{\r\n        \t\t    type: \"horizontalLayout\",\r\n        \t\t    formData: [\r\n        \t\t\t\t{\r\n                    \t    type: \"radioButtonGroup\",\r\n                    \t    label: \"Border Color: \",\r\n                    \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n                    \t    horizontal: true,\r\n                    \t    value: false,\r\n                    \t    key: \"selectBorderColor\"\r\n                    \t},\r\n                    \t{\r\n                    \t\ttype: \"colorPicker\",\r\n                    \t\tkey: \"borderColor\",\r\n                    \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n                    \t\tselector: {\r\n                    \t\t    parentKey: \"selectBorderColor\",\r\n                    \t\t    parentValue: true\r\n                    \t\t}\r\n                    \t}\r\n        \t\t\t]\r\n        \t\t},\r\n        \t\t{\r\n            \t\ttype: \"dropdown\",\r\n            \t\tlabel: \"Border Width: \",\r\n            \t\tentries: [[\"Use Default\",\"default\"],[\"1px\",1],[\"2px\",2],[\"3px\",3],[\"5px\",5],[\"7px\",7],[\"10px\",10]],\r\n            \t\tkey: \"borderWidth\",\r\n            \t\tmeta: {\r\n            \t\t\t\"excludeValue\": \"default\"\r\n            \t\t}\r\n            \t},\r\n        \t],\r\n        \tkey: \"rectangle\",\r\n        \tmeta: {\r\n        \t\t\"expression\": \"object\"\r\n        \t}\r\n        }\r\n    ]\r\n}","supplementalCode":""}},"loadSeriesOptions":{"name":"loadSeriesOptions","type":"apogee.FunctionMember","updateData":{"argList":["targetOptions","sourceOptions","chartInfo","chartOptions","index"],"functionBody":"if(sourceOptions.label !== undefined) targetOptions.label = sourceOptions.label;\nelse {\n    targetOptions.label = \"Series \" + (index + 1);\n}\n\nif(chartInfo.usePoint) {\n    let seriesPointOptions = processOptions(sourceOptions.point,\"point\",\"series\");\n    \n    //------------\n    //special rules\n    //------------\n    let chartPointOptions;\n    if((chartOptions)&&(chartOptions.elements)&&(chartOptions.elements.point)) chartPointOptions = chartOptions.elements.point;\n    else chartPointOptions = {};\n    \n    //check for \"auto\" border color in chart options\n    if(seriesPointOptions.borderColor === undefined) {\n        if(chartPointOptions.borderColor == \"auto\") {\n            seriesPointOptions.borderColor = _getColorForIndex(index);\n        }\n        else if(chartPointOptions.borderColor !== undefined) {\n            seriesPointOptions.borderColor = chartPointOptions.borderColor;\n        }\n    }\n    \n    //implement for \"show points\" from chart options or series options - set radius to 0\n    if( (seriesPointOptions.showPoints === false) ||\n        ((chartPointOptions.showPoints === false)&&(seriesPointOptions.showPoints !== true)) ) {\n        seriesPointOptions.radius = 0;        \n    }\n    \n    //if we are also using line we need to remap some keys\n    if(chartInfo.useLine) {\n        _remap(seriesPointOptions,LINE_POINT_KEY_MAPPING);\n    } \n    \n    //map these back to our series options\n    Object.assign(targetOptions,seriesPointOptions);\n}\n\nif(chartInfo.useLine) {\n    let seriesLineOptions = processOptions(sourceOptions.line,\"line\",\"series\");\n    \n    //------------\n    //special rules\n    //------------\n    let chartLineOptions;\n    if((chartOptions)&&(chartOptions.elements)&&(chartOptions.elements.line)) chartLineOptions = chartOptions.elements.line;\n    else chartLineOptions = {};\n\n    //explictily set line color since we added the \"auto\" option\n    if (seriesLineOptions.borderColor === undefined) {\n        if(chartLineOptions.borderColor == \"auto\") {\n            seriesLineOptions.borderColor = _getColorForIndex(index);\n        }\n        else if(chartLineOptions.borderColor !== undefined) {\n            seriesLineOptions.borderColor = chartLineOptions.borderColor;\n        }\n    }\n    \n    //explictily set the point color\n    //we are using results of target options set above.\n    if(targetOptions.pointBorderColor === undefined) {\n        seriesLineOptions.pointBorderColor = seriesLineOptions.borderColor;\n    }\n    \n    //explictily set the area color since we added the \"auto\" option\n    if(seriesLineOptions.backgroundColor === undefined) {\n        if(chartLineOptions.backgroundColor == \"auto\") {\n            seriesLineOptions.backgroundColor = _getColorForIndex(index);\n        }\n        else if(chartLineOptions.backgroundColor !== undefined) {\n            seriesLineOptions.backgroundColor = chartLineOptions.backgroundColor;\n        }\n        else {\n            //default to line color\n            seriesLineOptions.backgroundColor = seriesLineOptions.borderColor;\n        }\n    }\n    \n    //merge a currently hard coded pacity into the background color, if it exists.\n    if(seriesLineOptions.backgroundColor) {\n        let opacity = .2;\n        seriesLineOptions.backgroundColor = mergeOpacity(seriesLineOptions.backgroundColor,opacity);\n    }\n    \n    //there is some remapping for the series\n    _remap(seriesLineOptions,LINE_KEY_MAPPING);\n    \n    //map these back to our series options\n    Object.assign(targetOptions,seriesLineOptions);\n}\n\nif(chartInfo.useRectangle) {\n    let seriesRectOptions = processOptions(sourceOptions.rectangle,\"rectangle\",\"series\");\n    \n    //------------\n    //special rules\n    //------------\n    let chartRectOptions;\n    if((chartOptions)&&(chartOptions.elements)&&(chartOptions.elements.rectangle)) chartRectOptions = chartOptions.elements.rectangle;\n    else chartRectOptions = {};\n    \n    //check for \"auto\" in chart options\n    if(seriesRectOptions.backgroundColor === undefined) {\n        if(chartRectOptions.backgroundColor == \"auto\") {\n            seriesRectOptions.backgroundColor = _getColorForIndex(index);\n        }\n        else if(chartRectOptions.backgroundColor == \"auto\") {\n            seriesRectOptions.backgroundColor = chartRectOptions.backgroundColor;\n        }\n    }\n    \n    //map these back to our series options\n    Object.assign(targetOptions,seriesRectOptions);\n}\n\nif(chartInfo.useArc) {\n    let seriesArcOptions = processOptions(sourceOptions.arc,\"arc\",\"series\");\n    \n    //------------\n    //special rules\n    //------------\n    let chartArcOptions;\n    if((chartOptions)&&(chartOptions.elements)&&(chartOptions.elements.arc)) chartArcOptions = chartOptions.elements.arc;\n    else chartArcOptions = {};\n    \n    //check for \"auto\" in chart options\n    if(seriesArcOptions.backgroundColor === undefined) {\n        if(chartArcOptions.backgroundColor == \"auto\") {\n            seriesArcOptions.backgroundColor = _getColorForIndex(index);\n        }\n        else if(chartArcOptions.backgroundColor == \"auto\") {\n            seriesArcOptions.backgroundColor = chartArcOptions.backgroundColor;\n        }\n    }\n    \n    //map these back to our series options\n    Object.assign(targetOptions,seriesArcOptions);\n}\n","supplementalCode":"const LINE_POINT_KEY_MAPPING = {\n    radius: \"pointRadius\",\n    borderColor: \"pointBorderColor\",\n    borderWidth: \"pointBorderWidth\",\n    backgroundColor: \"pointBackgroundColor\"\n}\n\nconst LINE_KEY_MAPPING = {\n    stepped: \"steppedLine\",\n    tension: \"lineTension\",\n}\n\nfunction _remap(target,mapping) {\n    for(let key in mapping) {\n        target[mapping[key]] = target[key]; \n        delete target[key];\n    }\n}\n\nfunction _getColorForIndex(index) {\n    return COLOR_LIST[index % COLOR_LIST.length];\n}\n\n"}},"getChartOptions":{"name":"getChartOptions","type":"apogee.FunctionMember","updateData":{"argList":["sourceData","chartInfo"],"functionBody":"let sourceOptions = sourceData.options ? sourceData.options : {};\nlet targetOptions = {};\n\n//elements\ntargetOptions.elements = {};\n    \nif(chartInfo.usePoint) {\n    targetOptions.elements.point = processOptions(sourceOptions.point,\"point\",\"chart\");\n}\n\nif(chartInfo.useLine) {\n    targetOptions.elements.line = processOptions(sourceOptions.line,\"line\",\"chart\");\n    \n    //merge a currently hard coded pacity into the background color, if it exists and is not \"auto\"\n    if((targetOptions.elements.line)&&(targetOptions.elements.line.backgroundColor)&&(targetOptions.elements.line.backgroundColor != \"auto\")) {\n        let opacity = .2;\n        targetOptions.elements.line.backgroundColor = mergeOpacity(targetOptions.elements.line.backgroundColor,opacity);\n    }\n}\n\nif(chartInfo.useRectangle) {\n    targetOptions.elements.rectangle = processOptions(sourceOptions.rectangle,\"rectangle\",\"chart\");\n}\n\nif(chartInfo.useArc) {\n    targetOptions.elements.arc = processOptions(sourceOptions.arc,\"arc\",\"chart\");\n}\n\ntargetOptions.title = processOptions(sourceOptions.title,\"title\",\"chart\");\n\ntargetOptions.legend = processOptions(sourceOptions.legend,\"legend\",\"chart\");\n\n//scales\n//for now out inputs are single axis, but the chart config takes an array,\n//for multiple axes. We will add that later. For now we just support one.\ntargetOptions.scales = {};\nlet tempTarget;\n\ntempTarget = processOptions(sourceOptions.xAxes,\"xAxes\",\"chart\");\ntargetOptions.scales.xAxes = [tempTarget];\n\ntempTarget = processOptions(sourceOptions.yAxes,\"yAxes\",\"chart\");\ntargetOptions.scales.yAxes = [tempTarget];\n    \nreturn targetOptions;","supplementalCode":""}},"getXNumericChartData":{"name":"getXNumericChartData","type":"apogee.FunctionMember","updateData":{"argList":["sourceData","chartInfo","generalChartOptions"],"functionBody":"let data = {};\n\nif(!sourceData.numericDataSeries) throw new Error(\"Unknown error: Numeric data series array missing for numeric data chart.\");\n\n//read the datasets\ndata.datasets = sourceData.numericDataSeries.map( (dataSeriesEntry,index) => {\n    let entry = {};\n    \n    //read the data - one of three formats\n    if(dataSeriesEntry.xyPoints !== undefined) {\n        //points, format {x:x, y:y}\n        entry.data = dataSeriesEntry.xyPoints;\n    }\n    else if((dataSeriesEntry.xValues !== undefined)&&(dataSeriesEntry.yValues !== undefined)) {\n        //x and y value arrays\n        if(dataSeriesEntry.xValues.length != dataSeriesEntry.yValues.length) throw new Error(\"Data series x and y values are not the same length!\");\n        \n        entry.data = [];\n        for(let i = 0; i < dataSeriesEntry.xValues.length; i++) {\n            let point = {\n                x: dataSeriesEntry.xValues[i],\n                y: dataSeriesEntry.yValues[i]\n            }\n            entry.data.push(point);\n        }\n    }\n    else if((dataSeriesEntry.dataArray !== undefined)&&(dataSeriesEntry.xAccessor)&&(dataSeriesEntry.yAccessor)) {\n        //data array and x and y accessor function\n        entry.data = [];\n        for(let i = 0; i < dataSeriesEntry.dataArray.length; i++) {\n            let point = {\n                x: dataSeriesEntry.xAccessor(dataSeriesEntry.dataArray[i]),\n                y: dataSeriesEntry.yAccessor(dataSeriesEntry.dataArray[i])\n            }\n            entry.data.push(point);\n        }\n    }\n    else {\n        throw new Error(\"Input X and/or Y data is not defined!\");\n    }\n    \n    //read the options\n    if(dataSeriesEntry.options) {\n        loadSeriesOptions(entry,dataSeriesEntry.options,chartInfo,generalChartOptions,index);\n    }\n    \n    return entry;\n});\n\nreturn data;","supplementalCode":""}},"getXCategoryChartData":{"name":"getXCategoryChartData","type":"apogee.FunctionMember","updateData":{"argList":["sourceData","chartInfo","generalChartOptions"],"functionBody":"let data = {};\n\nif(!sourceData.categoryDataSeries) throw new Error(\"Unknown error: Category data series array missing for category data chart.\");\n\n//read the category data\nlet xCategories;\nlet hasImplicitXCategories = false;\nlet maxYLength = 0;\n\nif(sourceData.xCategories) {\n    xCategories = sourceData.xCategories;\n}\nelse {\n    //auto generator categories\n    hasImplicitXCategories = true;\n}\n\n//read the dataset data\ndata.datasets = sourceData.categoryDataSeries.map( (dataSeriesEntry,index) => {\n    let entry = {};\n    \n    //read the data\n    if(dataSeriesEntry.yValues !== undefined) {\n        entry.data = dataSeriesEntry.yValues;\n    }\n    else if((dataSeriesEntry.dataArray !== undefined)&&(dataSeriesEntry.yAccessor)) {\n        entry.data = dataSeriesEntry.dataArray.map(dataSeriesEntry.yAccessor);\n    }\n    else {\n        throw new Error(\"Input Y data is not defined!\");\n    }\n    \n    if((entry.data)&&(entry.data.length > maxYLength)) maxYLength = entry.data.length;\n    \n    //read the options\n    if(dataSeriesEntry.options) {\n        loadSeriesOptions(entry,dataSeriesEntry.options,chartInfo,generalChartOptions,index);\n    }\n\n    return entry;\n});\n\n//if needed construct explicit categories. It is simple integers, starting with 1\nif(hasImplicitXCategories) {\n    xCategories = [];\n    for(let i = 1; i <= maxYLength; i++) xCategories.push(i);\n}\n\ndata.labels = xCategories;\n\nreturn data;","supplementalCode":""}},"categoryDataSeriesDataForm":{"name":"categoryDataSeriesDataForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return baseCategoryDataSeriesDataLayout;","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"dataType":"structs","dataArray":"","yAccessor":""}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"numericDataSeriesDataForm":{"name":"numericDataSeriesDataForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return baseNumericDataSeriesDataLayout;","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"baseNumericDataSeriesDataLayout":{"name":"baseNumericDataSeriesDataLayout","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"dropdown\",\n        label: \"Data Format: \",\n        entries: [[\"X Array and Y Array\",\"values\"],[\"XY Point Array\",\"points\"],[\"Data Array and X and Y Acccessors\",\"structs\"]],\n        value: \"values\", //default\n        help: numericDataFormatHelp,\n        key: \"dataFormat\"\n    },\n    {\n\t\ttype: \"textField\",\n\t\tlabel: \"X Values: \",\n\t\thint: \"expression\",\n\t\thelp: numericXValuesHelp,\n\t\tkey: \"xValues\",\n\t\tselector: {\n\t\t\tparentKey: \"dataFormat\",\n\t\t\tparentValue: \"values\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t},\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"Y Values: \",\n\t\thint: \"expression\",\n\t\thelp: numericYValuesHelp,\n\t\tkey: \"yValues\",\n\t\tselector: {\n\t\t\tparentKey: \"dataFormat\",\n\t\t\tparentValue: \"values\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t},\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"XY Point Array: \",\n\t\thint: \"expression\",\n\t\thelp: numericXYPointsHelp,\n\t\tkey: \"xyPoints\",\n\t\tselector: {\n\t\t\tparentKey: \"dataFormat\",\n\t\t\tparentValue: \"points\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t},\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"Data Array: \",\n\t\thint: \"expression\",\n\t\thelp: numericDataArrayHelp,\n\t\tkey: \"dataArray\",\n\t\tselector: {\n\t\t\tparentKey: \"dataFormat\",\n\t\t\tparentValue: \"structs\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t},\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"X Accessor: \",\n\t\thint: \"expression\",\n\t\thelp: numericXAccessorHelp,\n\t\tkey: \"xAccessor\",\n\t\tselector: {\n\t\t\tparentKey: \"dataFormat\",\n\t\t\tparentValue: \"structs\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t},\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"Y Accessor: \",\n\t\thint: \"expression\",\n\t\thelp: numericYAccessorHelp,\n\t\tkey: \"yAccessor\",\n\t\tselector: {\n\t\t\tparentKey: \"dataFormat\",\n\t\t\tparentValue: \"structs\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t}\n];","supplementalCode":""}},"baseCategoryDataSeriesDataLayout":{"name":"baseCategoryDataSeriesDataLayout","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"dropdown\",\n        label: \"Data Format: \",\n        entries: [[\"Y Array\",\"values\"],[\"Data Array and Y Acccessor\",\"structs\"]],\n        value: \"values\", //default\n        help: categoryDataFormatHelp,\n        key: \"dataType\"\n    },\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"Y Values: \",\n\t\thint: \"expression\",\n\t\thelp: categoryYValuesHelp,\n\t\tkey: \"yValues\",\n\t\tselector: {\n\t\t\tparentKey: \"dataType\",\n\t\t\tparentValue: \"values\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t},\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"Data Array: \",\n\t\thint: \"expression\",\n\t\thelp: categoryDataArrayHelp,\n\t\tkey: \"dataArray\",\n\t\tselector: {\n\t\t\tparentKey: \"dataType\",\n\t\t\tparentValue: \"structs\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t},\n\t{\n\t\ttype: \"textField\",\n\t\tlabel: \"Y Accessor: \",\n\t\thint: \"expression\",\n\t\thelp: categoryYAccessorHelp,\n\t\tkey: \"yAccessor\",\n\t\tselector: {\n\t\t\tparentKey: \"dataType\",\n\t\t\tparentValue: \"structs\"\n\t\t},\n\t\tmeta: {\n\t\t\t\"expression\": \"simple\",\n\t\t\t\"excludeValue\": \"\"\n\t\t}\n\t}\n];","supplementalCode":""}},"xAxisConfigElement":{"name":"xAxisConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n\ttype: \"panel\",\r\n\tformData: [\r\n\t\t{\r\n        \ttype: \"dropdown\",\r\n        \tlabel: \"X Axis Scale: \",\r\n        \tentries: [\"linear\",\"logarithmic\"],\r\n        \tvalue: \"linear\",\r\n        \tkey: \"type\"\r\n        }\r\n\t],\r\n\tkey: \"xAxes\",\r\n\tmeta: {\r\n\t\t\"expression\": \"object\"\r\n\t}\r\n}","supplementalCode":""}},"showPointsElement":{"name":"showPointsElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n    type: \"radioButtonGroup\",\r\n    label: \"Show Points: \",\r\n    entries: [[\"Use Default\",\"default\"],[\"Show\",true],[\"Don't Show\",false]],\r\n    horizontal: true,\r\n    value: \"default\",\r\n    key: \"showPoints\",\r\n    meta: {\r\n\t\t\"excludeValue\": \"default\"\r\n\t}\r\n}","supplementalCode":""}},"pointFormWithNoneOption":{"name":"pointFormWithNoneOption","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    pointConfigElementWithShow\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"basePointConfigElement":{"name":"basePointConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n\ttype: \"panel\",\r\n\tformData: [\r\n    \t{\r\n    \t\ttype: \"dropdown\",\r\n    \t\tlabel: \"Symbol: \",\r\n    \t\tentries: [[\"Use Default\",\"default\"],'circle', 'cross', 'dash', 'line', 'rect', 'rectRounded', 'rectRot', 'star', 'triangle'],\r\n    \t\tvalue: \"default\",\r\n    \t\tkey: \"pointStyle\",\r\n    \t\tmeta: {\r\n    \t\t\t\"excludeValue\": \"default\"\r\n    \t\t}\r\n    \t},\r\n    \t{\r\n    \t\ttype: \"dropdown\",\r\n    \t\tlabel: \"Radius: \",\r\n    \t\tentries: [[\"Use Default\",\"default\"],[\"1px\",1],[\"2px\",2],[\"3px\",3],[\"5px\",5],[\"7px\",7],[\"10px\",10]],\r\n    \t\tkey: \"radius\",\r\n    \t\tmeta: {\r\n    \t\t\t\"excludeValue\": \"default\"\r\n    \t\t}\r\n    \t},\r\n    \t{\r\n            type: \"horizontalLayout\",\r\n            formData: [\r\n            \t{\r\n            \t    type: \"radioButtonGroup\",\r\n            \t    label: \"Color: \",\r\n            \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n            \t    horizontal: true,\r\n            \t    value: false,\r\n            \t    key: \"selectColor\"\r\n            \t},\r\n            \t{\r\n            \t\ttype: \"colorPicker\",\r\n            \t\tkey: \"borderColor\",\r\n            \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n            \t\tselector: {\r\n            \t\t    parentKey: \"selectColor\",\r\n            \t\t    parentValue: true\r\n            \t\t}\r\n            \t}\r\n            ]\r\n    \t},\r\n    \t{\r\n    \t\ttype: \"dropdown\",\r\n    \t\tlabel: \"Weight: \",\r\n    \t\tentries: [[\"Use Default\",\"default\"],[\"1px\",1],[\"2px\",2],[\"3px\",3],[\"5px\",5],[\"7px\",7],[\"10px\",10]],\r\n    \t\tkey: \"borderWidth\",\r\n    \t\tmeta: {\r\n    \t\t\t\"excludeValue\": \"default\"\r\n    \t\t}\r\n    \t}\r\n\t],\r\n\tkey: \"point\",\r\n\tmeta: {\r\n\t\t\"expression\": \"object\"\r\n\t}\r\n};","supplementalCode":""}},"pointConfigElement":{"name":"pointConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n    type: \"showHideLayout\",\r\n    heading: \"Point Style\",\r\n    closed: true,\r\n    formData: [\r\n        basePointConfigElement\r\n    ]\r\n};","supplementalCode":""}},"pointConfigElementWithShow":{"name":"pointConfigElementWithShow","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let element = apogeeutil.jsonCopy(pointConfigElement);\r\nelement.formData[0].formData = [showPointsElement].concat(element.formData[0].formData);\r\nreturn element;","supplementalCode":""}},"COLOR_LIST":{"name":"COLOR_LIST","type":"apogee.JsonMember","updateData":{"data":["#0000ff","#ff0000","#008000","#000080","#800000","#000000","#008080","#800080","#808000","#808080","#ff00ff","#ffff00","#00ffff"]}},"OPTION_MODIFIER":{"name":"OPTION_MODIFIER","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n    defaults: {\n        point: {\n            borderColor: \"auto\"\n        },\n        line: {\n            borderColor: \"auto\",\n            fill: false,\n        },\n        rectangle: {\n            backgroundColor: \"auto\"\n        },\n        arc: {\n            backgroundColor: \"auto\"\n        },\n        title: {\n            display: false\n        }\n        \n    },\n    associations: {\n        point: {\n            hoverRadius: {\n                source: \"radius\",\n                target: \"hoverRadius\",\n                modifier: \"addOne\"\n            },\n            hoverBorderWidth: {\n                source: \"borderWidth\",\n                target: \"hoverBorderWidth\",\n                modifier: \"addOne\"\n            },\n            hitRadius: {\n                source: \"radius\",\n                target: \"hitRadius\",\n                modifier: \"addOne\"\n            }\n        },\n        rectangle: {\n            hoverBorderWidth: {\n                source: \"borderWidth\",\n                target: \"hoverBorderWidth\",\n                modifier: \"addOne\"\n            },\n        }\n    }\n}","supplementalCode":""}},"createChartConfig":{"name":"createChartConfig","type":"apogee.FunctionMember","updateData":{"argList":["chartJson","chartType"],"functionBody":"//create output\nlet chartConfig = {};\nchartConfig.type = chartType;\n\nlet chartInfo = CHART_INFO_MAP[chartType];\nif(!chartInfo) throw new Error(\"Unknown chart type: \" + chartType);\n\n//load the general chart options\nchartConfig.options = getChartOptions(chartJson,chartInfo);\n\n//load the data series\nif(chartJson.numericDataSeries) {\n    if(!chartInfo.allowXNumeric) {\n        throw new Error(\"Unexpected X numeric data series for chart type: \" + chartInfo.type);\n    }\n    \n    chartConfig.data = getXNumericChartData(chartJson,chartInfo,chartConfig.options);\n}\nelse if(chartJson.categoryDataSeries) {\n    if(!chartInfo.allowXCategory) {\n        throw new Error(\"Unexpected X category data series for chart type: \" + chartInfo.type);\n    }\n    \n    chartConfig.data = getXCategoryChartData(chartJson,chartInfo,chartConfig.options);\n}\n\nreturn chartConfig;","supplementalCode":""}},"xAxisConfigElementWithSelector":{"name":"xAxisConfigElementWithSelector","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let configElement = apogeeutil.jsonCopy(xAxisConfigElement);\r\n\r\nconfigElement.selector = {\r\n    parentKey: \"xValuesType\",\r\n    parentValue: \"numeric\"\r\n}\r\n\r\nreturn configElement;","supplementalCode":""}},"numericDataSeriesForm":{"name":"numericDataSeriesForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"let chartType = \"line\";\nlet chartInfo = CHART_INFO_MAP[chartType];\n\nlet dataSeriesElement = getNumericDataSeriesElement(chartInfo);\n\nreturn [\n    {\n        type: \"invisible\",\n        value: \"numeric\",\n        key: \"xValuesType\"\n    },\n    dataSeriesElement\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"dataType":"structs","dataArray":"","xAccessor":"","yAccessor":""}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"categoryDataSeriesForm":{"name":"categoryDataSeriesForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"let chartType = \"line\";\nlet chartInfo = CHART_INFO_MAP[chartType];\n\nlet dataSeriesElement = getCategoryDataSeriesElement(chartInfo);\n\nreturn [\n    {\n        type: \"invisible\",\n        value: \"category\",\n        key: \"xValuesType\"\n    },\n    dataSeriesElement\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"dataType":"structs","dataArray":"","yAccessor":""}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"seriesOptionsForm":{"name":"seriesOptionsForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"let chartType = \"line\";\nlet chartInfo = CHART_INFO_MAP[chartType];\n\nlet seriesOptionsElement = getSeriesOptionsElement(chartInfo);\n\nreturn [\n    seriesOptionsElement\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"chartOptionsForm":{"name":"chartOptionsForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"let chartType = \"line\";\nlet chartInfo = CHART_INFO_MAP[chartType];\n\nlet chartOptionsElement = getChartOptionsElement(chartInfo);\n\nreturn [\n    {\n        type: \"invisible\",\n        value: \"numeric\",\n        key: \"xValuesType\"\n    },\n    chartOptionsElement\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"getAxesOptionsElement":{"name":"getAxesOptionsElement","type":"apogee.FunctionMember","updateData":{"argList":["chartInfo"],"functionBody":"let element = {\n    type: \"showHideLayout\",\n    heading: \"Axes\",\n    closed: true,\n    formData: []\n}\n\n//construct x element, if needed\nlet xElement;\nif(chartInfo.allowXNumeric) {\n    if(chartInfo.allowXCategory) {\n        xElement = xAxisConfigElementWithSelector;\n    }\n    else {\n        xElement = xAxisConfigElement;\n    }\n}\n\n//add the axes elements\nif(chartInfo.allowXNumeric) {\n    if(xElement) element.formData.push(xElement);\n}\nelement.formData.push(yAxisConfigElement);\n\nreturn element;\n","supplementalCode":""}},"getChartOptionsElement":{"name":"getChartOptionsElement","type":"apogee.FunctionMember","updateData":{"argList":["chartInfo"],"functionBody":"//construct the options panel\nlet panel = {\n    type: \"panel\",\n    formData: [\n        {\n            type: \"showHideLayout\",\n            heading: \"Chart Options\",\n            closed: true,\n            formData: []\n        }\n    ],\n    key: \"options\",\n    meta: {\n        expression: \"object\",\n    }\n}\n\n//populate the inside layout\nlet insideLayout = panel.formData[0].formData;\n\n//if we allow category and numeric axes, we need to include a switch (in axes)\nif((chartInfo.allowXCategory)&&(chartInfo.allowXNumeric)) {\n    panel.inherit = [{\n      parentKey: \"xValuesType\",\n      childKey: \"xValuesType\"\n    }];\n    insideLayout.push(invisibleXValuesTypeElement);\n}\n\n//universal element\ninsideLayout.push(titleConfigElement);\ninsideLayout.push(legendConfigElement);\n\nif(chartInfo.useLine) insideLayout.push(lineConfigElement);\nif(chartInfo.usePoint) {\n    if(chartInfo.useLine) {\n        //also include he \"show\" option for pionts if line also used\n        insideLayout.push(pointConfigElementWithShow);\n    }\n    else {\n        insideLayout.push(pointConfigElement);\n    }\n}\nif(chartInfo.useRectangle) insideLayout.push(rectConfigElement);\nif(chartInfo.useArc) insideLayout.push(arcConfigElement);\n\nlet axesElement = getAxesOptionsElement(chartInfo);\nif(axesElement) insideLayout.push(axesElement);\n\nreturn panel;","supplementalCode":""}},"getSeriesOptionsElement":{"name":"getSeriesOptionsElement","type":"apogee.FunctionMember","updateData":{"argList":["chartInfo"],"functionBody":"let panel = {\n    type: \"showHideLayout\",\n    heading: \"Series Options\",\n    closed: true,\n    formData: [\n        {\n            type: \"panel\",\n            formData: [],\n            key: \"options\",\n            meta: {\n                expression: \"object\"\n            }\n        }\n    ]\n};\n\nlet insideLayout = panel.formData[0].formData;\n\ninsideLayout.push(seriesLabelElement);\nif(chartInfo.useLine) insideLayout.push(lineConfigElement);\nif(chartInfo.usePoint) {\n    if(chartInfo.useLine) {\n        //also include he \"show\" option for pionts if line also used\n        insideLayout.push(pointConfigElementWithShow);\n    }\n    else {\n        insideLayout.push(pointConfigElement);\n    }\n}\nif(chartInfo.useRectangle) {\n    insideLayout.push(rectConfigElement);\n}\nif(chartInfo.useArc) {\n    insideLayout.push(arcConfigElement);\n}\n\nreturn panel;","supplementalCode":""}},"getNumericDataSeriesElement":{"name":"getNumericDataSeriesElement","type":"apogee.FunctionMember","updateData":{"argList":["chartInfo"],"functionBody":"let numericDataSeriesLayout = baseNumericDataSeriesDataLayout.concat([getSeriesOptionsElement(chartInfo)]);\n\nlet element = {\n    type: \"list\",\n    label: \"Plot Series Data\",\n    entryType: {\n        \"label\": \"Data Series\",\n        \"layout\": {\n            type: \"panel\",\n            formData: numericDataSeriesLayout,\n            key: \"numericFormDataSeries\",\n            meta: {\n                expression: \"object\"\n            }\n        }    \n    },\n    key: \"numericDataSeries\",\n    meta: {\n\t    \"expression\": \"array\"\n    }\n    \n}\n\n//add a selector for this series if we allow both category and numeric\nif((chartInfo.allowXNumeric)&&(chartInfo.allowXCategory)) {\n    element.selector = {\n        parentKey: \"xValuesType\",\n        parentValue: \"numeric\"\n    };\n}\n\nreturn element;","supplementalCode":""}},"getCategoryDataSeriesElement":{"name":"getCategoryDataSeriesElement","type":"apogee.FunctionMember","updateData":{"argList":["chartInfo"],"functionBody":"let categoryDataSeriesDataLayout = baseCategoryDataSeriesDataLayout.concat([getSeriesOptionsElement(chartInfo)]);\n\nlet element = {\n    type: \"list\",\n    label: \"Plot Series Data\",\n    entryType: {\n        \"label\": \"Data Series\",\n        \"layout\": {\n            type: \"panel\",\n            formData: categoryDataSeriesDataLayout,\n            key: \"categoryFormDataSeries\",\n            meta: {\n                expression: \"object\"\n            }\n        }    \n    },\n    key: \"categoryDataSeries\",\n    meta: {\n\t    \"expression\": \"array\"\n    }\n}\n\n//add a selector for this series if we allow both category and numeric\nif((chartInfo.allowXNumeric)&&(chartInfo.allowXCategory)) {\n    element.selector = {\n        parentKey: \"xValuesType\",\n        parentValue: \"category\"\n    };\n}\n\nreturn element;","supplementalCode":""}},"categoryElement":{"name":"categoryElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {   \n    type: \"textField\",\n    label: \"X Category Array: \",\n    hint: \"expression\",\n    help: categoryElementHelp,\n    key: \"xCategories\",\n    meta: {\n        \"expression\": \"simple\"\n    }\n};","supplementalCode":""}},"xValuesTypeElement":{"name":"xValuesTypeElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {   \n    type: \"radioButtonGroup\",\n    label: \"X Values Type: \",\n    entries: [[\"Category\",\"category\"],[\"Numeric\",\"numeric\"]],\n    value: \"category\", //initial default\n    horizontal: true,\n    help: xValuesTypeHelp,\n    key: \"xValuesType\"\n}","supplementalCode":""}},"invisibleXValuesTypeElement":{"name":"invisibleXValuesTypeElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n    type: \"invisible\",\n    value: null,\n    key: \"xValuesType\"\n}","supplementalCode":""}},"categoryElementWithSelector":{"name":"categoryElementWithSelector","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let configElement = apogeeutil.jsonCopy(categoryElement);\n\nconfigElement.selector = {\n    parentKey: \"xValuesType\",\n    parentValue: \"category\"\n}\n\nreturn configElement;","supplementalCode":""}},"processOptions":{"name":"processOptions","type":"apogee.FunctionMember","updateData":{"argList":["inJsonObject","optionsType","optionsOrigin"],"functionBody":"let outOptions = {};\n    \nif(inJsonObject !== undefined) Object.assign(outOptions,inJsonObject);\n\n//set any defaults, but only if this is chart options\nif(optionsOrigin == \"chart\") {\n    let defaultsMap = OPTION_MODIFIER.defaults[optionsType];\n    if(defaultsMap) {\n        _setDefaults(outOptions,defaultsMap);\n    }\n}\n\n//add any associations - this is when one value should equal (or be a function of) ONE other field.\nlet associationsMap = OPTION_MODIFIER.associations[optionsType];\nif(associationsMap) {\n    _addAssociations(outOptions,associationsMap);\n}\n\nreturn outOptions;","supplementalCode":"/** This explicitly sets the defaults that we want to override from chart.js */\nfunction _setDefaults(optionsObject,defaultsMap) {\n    for(let key in defaultsMap) {\n        if(optionsObject[key] === undefined) {\n            optionsObject[key] = defaultsMap[key];\n        }\n    }\n}\n\n/** This function makes an association between options values. */\nfunction _addAssociations(optionsObject,associationsMap) {\n    for(let key in associationsMap) {\n        let association = associationsMap[key];\n        let sourceField = association.source;\n        let targetField = association.target;\n        let modifierString = association.modifier;\n        \n        //allow for lookup of modifier function\n        if((optionsObject[sourceField] !== undefined)&&(optionsObject[targetField] === undefined)) {\n            if(modifierString !== undefined) {\n                //right now we have a lookup function for modifier functions. But we only have one modifier.\n                let modifierFunction;\n                switch(modifierString) {\n                    case(\"addOne\"):\n                        modifierFunction = _addOne;\n                        break;\n                        \n                    default:\n                        modifierFunction = null;\n                        break;\n                }\n                \n                if(modifierFunction) {\n                    optionsObject[targetField] = modifierFunction(optionsObject[targetField], optionsObject[sourceField]);\n                }\n            }\n            else {\n                //if there is no modifier function listed, just set the target value equal the source value\n                optionsObject[targetField] = optionsObject[sourceField];\n            }\n        }\n    }\n}\n\n/** This is a options modifier function. It adds one to the value. */\nfunction _addOne(initialTarget,initialSource) {\n    if( (typeof initialSource) == \"string\" ) {\n        initialSource = parseInt(initialSource);\n    }\n    return initialSource+1;\n}\n\nfunction _doShowHidePoint(initialTarget,initialSource) {\n    if(initialSource === false) {\n        //set radius to 0 if we are not showing the point \n        return 0;\n    }\n    else {\n        //otherwise don't change\n        return initialTarget;\n    }\n}"}},"arcConfigElement":{"name":"arcConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n    type: \"showHideLayout\",\r\n    heading: \"Arc Style\",\r\n    closed: true,\r\n    formData: [\r\n        {\r\n        \ttype: \"panel\",\r\n        \tformData: [\r\n        \t\t{\r\n        \t\t    type: \"horizontalLayout\",\r\n        \t\t    formData: [\r\n        \t\t\t\t{\r\n                    \t    type: \"radioButtonGroup\",\r\n                    \t    label: \"Fill Color: \",\r\n                    \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n                    \t    horizontal: true,\r\n                    \t    value: false,\r\n                    \t    key: \"selectAreaColor\"\r\n                    \t},\r\n                    \t{\r\n                    \t\ttype: \"colorPicker\",\r\n                    \t\tkey: \"backgroundColor\",\r\n                    \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n                    \t\tselector: {\r\n                    \t\t    parentKey: \"selectAreaColor\",\r\n                    \t\t    parentValue: true\r\n                    \t\t}\r\n                    \t}\r\n        \t\t\t]\r\n        \t\t},\r\n        \t\t{\r\n        \t\t    type: \"horizontalLayout\",\r\n        \t\t    formData: [\r\n        \t\t\t\t{\r\n                    \t    type: \"radioButtonGroup\",\r\n                    \t    label: \"Border Color: \",\r\n                    \t    entries: [[\"Use Default\",false],[\"Select\",true]],\r\n                    \t    horizontal: true,\r\n                    \t    value: false,\r\n                    \t    key: \"selectBorderColor\"\r\n                    \t},\r\n                    \t{\r\n                    \t\ttype: \"colorPicker\",\r\n                    \t\tkey: \"borderColor\",\r\n                    \t\tvalue: \"#0000ff\", //this is a dummy default value, otherwise we get black\r\n                    \t\tselector: {\r\n                    \t\t    parentKey: \"selectBorderColor\",\r\n                    \t\t    parentValue: true\r\n                    \t\t}\r\n                    \t}\r\n        \t\t\t]\r\n        \t\t},\r\n        \t\t{\r\n            \t\ttype: \"dropdown\",\r\n            \t\tlabel: \"Border Width: \",\r\n            \t\tentries: [[\"Use Default\",\"default\"],[\"1px\",1],[\"2px\",2],[\"3px\",3],[\"5px\",5],[\"7px\",7],[\"10px\",10]],\r\n            \t\tkey: \"borderWidth\",\r\n            \t\tmeta: {\r\n            \t\t\t\"excludeValue\": \"default\"\r\n            \t\t}\r\n            \t},\r\n        \t],\r\n        \tkey: \"rectangle\",\r\n        \tmeta: {\r\n        \t\t\"expression\": \"object\"\r\n        \t}\r\n        }\r\n    ]\r\n}","supplementalCode":""}},"arcForm":{"name":"arcForm","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [arcConfigElement];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"rectangle":{"selectAreaColor":true,"backgroundColor":"#0000ff","selectBorderColor":true,"borderColor":"#34cbc7","borderWidth":"default"}}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"CHART_INFO_MAP":{"name":"CHART_INFO_MAP","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n    line: {\n        type: \"line\",\n        usePoint: true,\n        useLine: true,\n        allowXCategory: true,\n        allowXNumeric: true\n    },\n    bar: {\n        type: \"bar\",\n        useRectangle: true,\n        allowXCategory: true,\n    },\n    scatter: {\n        type: \"scatter\",\n        usePoint: true,\n        allowXNumeric: true\n    }\n}","supplementalCode":""}},"seriesLabelElement":{"name":"seriesLabelElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n    type: \"textField\",\n    label: \"Label: \",\n    key: \"label\",\n    meta: {\n        \"excludeValue\": \"\"\n    }\n}","supplementalCode":""}},"yAxisConfigElement":{"name":"yAxisConfigElement","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\r\n\t\t\ttype: \"panel\",\r\n\t\t\tformData: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\t\tlabel: \"Y Axis Scale: \",\r\n\t\t\t\t\tentries: [\"linear\",\"logarithmic\"],\r\n\t\t\t\t\tvalue: \"linear\",\r\n\t\t\t\t\tkey: \"type\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: \"radioButtonGroup\",\r\n\t\t\t\t\tlabel: \"Data Series Stacking: \",\r\n\t\t\t\t\tentries: [[\"Normal\",false],[\"Stacked\",true]],\r\n\t\t\t\t\tvalue: false,\r\n\t\t\t\t\thorizontal: true,\r\n\t\t\t\t\tkey: \"stacked\",\r\n\t\t\t\t\tmeta: {\r\n\t\t\t\t\t\t\"excludeValue\": \"default\"\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tkey: \"yAxes\",\r\n\t\t\tmeta: {\r\n\t\t\t\t\"expression\": \"object\"\r\n\t\t\t}\r\n\t\t}","supplementalCode":""}},"mergeOpacity":{"name":"mergeOpacity","type":"apogee.FunctionMember","updateData":{"argList":["color","opacity"],"functionBody":"let colorStruct = _parseColorString(color);\nif(colorStruct) {\n    let rgbaVector = colorStruct.rgba;\n    rgbaVector[3] = opacity;\n    let colorArgs = rgbaVector.join(\",\");\n    return `rgba(${colorArgs})`;\n}\nelse {\n    //we could not parse this for now\n    return color;\n}\n","supplementalCode":"/** This parses just rgb, rgba and hex colors. Otherwise it returns false. \r\n* This is from the code from jscolor.js */\r\nfunction _parseColorString(str) {\r\n\tvar ret = {\r\n\t\trgba: null,\r\n\t\tformat: null // 'hex' | 'rgb' | 'rgba'\r\n\t};\r\n\r\n\tvar m;\r\n\tif (m = str.match(/^\\W*([0-9A-F]{3}([0-9A-F]{3})?)\\W*$/i)) {\r\n\t\t// HEX notation\r\n\r\n\t\tret.format = 'hex';\r\n\r\n\t\tif (m[1].length === 6) {\r\n\t\t\t// 6-char notation\r\n\t\t\tret.rgba = [\r\n\t\t\t\tparseInt(m[1].substr(0,2),16),\r\n\t\t\t\tparseInt(m[1].substr(2,2),16),\r\n\t\t\t\tparseInt(m[1].substr(4,2),16),\r\n\t\t\t\tnull\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\t// 3-char notation\r\n\t\t\tret.rgba = [\r\n\t\t\t\tparseInt(m[1].charAt(0) + m[1].charAt(0),16),\r\n\t\t\t\tparseInt(m[1].charAt(1) + m[1].charAt(1),16),\r\n\t\t\t\tparseInt(m[1].charAt(2) + m[1].charAt(2),16),\r\n\t\t\t\tnull\r\n\t\t\t];\r\n\t\t}\r\n\t\treturn ret;\r\n\r\n\t} else if (m = str.match(/^\\W*rgba?\\(([^)]*)\\)\\W*$/i)) {\r\n\t\t// rgb(...) or rgba(...) notation\r\n\r\n\t\tvar params = m[1].split(',');\r\n\t\tvar re = /^\\s*(\\d+|\\d*\\.\\d+|\\d+\\.\\d*)\\s*$/;\r\n\t\tvar mR, mG, mB, mA;\r\n\t\tif (\r\n\t\t\tparams.length >= 3 &&\r\n\t\t\t(mR = params[0].match(re)) &&\r\n\t\t\t(mG = params[1].match(re)) &&\r\n\t\t\t(mB = params[2].match(re))\r\n\t\t) {\r\n\t\t\tret.format = 'rgb';\r\n\t\t\tret.rgba = [\r\n\t\t\t\tparseFloat(mR[1]) || 0,\r\n\t\t\t\tparseFloat(mG[1]) || 0,\r\n\t\t\t\tparseFloat(mB[1]) || 0,\r\n\t\t\t\tnull\r\n\t\t\t];\r\n\r\n\t\t\tif (\r\n\t\t\t\tparams.length >= 4 &&\r\n\t\t\t\t(mA = params[3].match(re))\r\n\t\t\t) {\r\n\t\t\t\tret.format = 'rgba';\r\n\t\t\t\tret.rgba[3] = parseFloat(mA[1]) || 0;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n}"}},"getFormLayout":{"name":"getFormLayout","type":"apogee.FunctionMember","updateData":{"argList":["chartType"],"functionBody":"return [\r\n    {\r\n        type: \"radioButtonGroup\",\r\n        label: \"Input Type: \",\r\n        entries: [[\"Form\",\"form\"],[\"Config JSON\",\"config\"]],\r\n        horizontal: true,\r\n        help: inputTypeHelp,\r\n        value: \"form\", //initial default\r\n        key: \"inputType\"\r\n    },    \r\n    {\r\n        type: \"radioButtonGroup\",\r\n        label: \"Config Format: \",\r\n        entries: [[\"Apogee Format\",\"apogee\"],[\"ChartJS Format\",\"chartjs\"]],\r\n        horizontal: true,\r\n        help: configFormatHelp,\r\n        value: \"apogee\", //initial default\r\n        key: \"configFormat\",\r\n        selector: {\r\n            parentKey: \"inputType\",\r\n            parentValue: \"config\"\r\n        },\r\n    },\r\n    {\r\n        type: \"textField\",\r\n        label: \"Config JSON: \",\r\n        hint: \"expression\",\r\n        help: configJsonHelp,\r\n        key: \"configJson\",\r\n        selector: {\r\n            parentKey: \"inputType\",\r\n            parentValue: \"config\"\r\n        },\r\n        meta: {\r\n            \"expression\": \"simple\"\r\n        }\r\n    },\r\n    {\r\n        type: \"panel\",\r\n        selector: {\r\n            parentKey: \"inputType\",\r\n            parentValue: \"form\"\r\n        },\r\n        formData: getChartFormLayout(chartType),\r\n        key: \"formData\",\r\n        meta: {\r\n            \"expression\": \"object\"\r\n        }\r\n    }\r\n];","supplementalCode":""}},"getChartFormLayout":{"name":"getChartFormLayout","type":"apogee.FunctionMember","updateData":{"argList":["chartType"],"functionBody":"let chartInfo = CHART_INFO_MAP[chartType];\n\nif(!chartInfo) throw new Error(\"Unrecognized chart type: \" + chartType);\n\nlet layout = [];\n\nif((chartInfo.allowXNumeric)&&(chartInfo.allowXCategory)) {\n    layout.push(xValuesTypeElement);\n    layout.push(categoryElementWithSelector);\n}\nelse if(chartInfo.allowXCategory) {\n    layout.push(categoryElement);\n}\n\nif(chartInfo.allowXNumeric) layout.push(getNumericDataSeriesElement(chartInfo));\nif(chartInfo.allowXCategory) layout.push(getCategoryDataSeriesElement(chartInfo));\n\nlayout.push(getChartOptionsElement(chartInfo));\n\n\nreturn layout;\n","supplementalCode":""}},"inputTypeHelp":{"name":"inputTypeHelp","type":"apogee.JsonMember","updateData":{"data":"Indicates the way you will enter data:\n- <b>Form</b> gives you several fields to guide input for the chart data and style.\n- <b>Config JSON</b> lets you specify a single config JSON to specify the form data and style. See documentation for the required format for the config JSON."}},"configFormatHelp":{"name":"configFormatHelp","type":"apogee.JsonMember","updateData":{"data":"Two config formats are available. See the documentation for more information on each.\n- <b>Apogee Format</b> is the format that mirrors that data entered with the form input type.\n- <b>ChartJS Format</b> is the format of ChartJS. Using this allows more flexibility. "}},"configJsonHelp":{"name":"configJsonHelp","type":"apogee.JsonMember","updateData":{"data":"Enter the name of the cell containing the config json, or any other javascript expression returning the desired config json value. "}},"numericDataFormatHelp":{"name":"numericDataFormatHelp","type":"apogee.JsonMember","updateData":{"data":"Select the desired data format to enter the X and Y Values for the chart. "}},"numericXValuesHelp":{"name":"numericXValuesHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression, such as the name of a cell, giving the array of X values. "}},"numericYValuesHelp":{"name":"numericYValuesHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression, such as the name of a cell, giving the array of Y values.  "}},"numericXYPointsHelp":{"name":"numericXYPointsHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression, such as the name of a cell, giving the array of values of objects containing the values x and y."}},"numericDataArrayHelp":{"name":"numericDataArrayHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression, such as the name of a cell, giving the array of arbitrary objects. The X and Y values will be read from it using the function specified below."}},"numericXAccessorHelp":{"name":"numericXAccessorHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression giving a function f to read the X value from the above data array: xValueArray = dataArray.map( f ); "}},"numericYAccessorHelp":{"name":"numericYAccessorHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression giving a function f to read the Y value from the above data array: yValueArray = dataArray.map( f ); "}},"categoryDataFormatHelp":{"name":"categoryDataFormatHelp","type":"apogee.JsonMember","updateData":{"data":"Select the desired data format to enter the Y Values for the chart. "}},"categoryYValuesHelp":{"name":"categoryYValuesHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression, such as the name of a cell, giving the array of Y values.  "}},"categoryDataArrayHelp":{"name":"categoryDataArrayHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression, such as the name of a cell, giving the array of arbitrary objects. The Y values will be read from it using the function specified below."}},"categoryYAccessorHelp":{"name":"categoryYAccessorHelp","type":"apogee.JsonMember","updateData":{"data":"Enter a javascript expression giving a function f to read the Y value from the above data array: yValueArray = dataArray.map( f ); "}},"categoryElementHelp":{"name":"categoryElementHelp","type":"apogee.JsonMember","updateData":{"data":"This is a javascript expression, such as the name of a cell, giving the array of category values."}},"xValuesTypeHelp":{"name":"xValuesTypeHelp","type":"apogee.JsonMember","updateData":{"data":"The x values can be (1) categories, such as days of the week or other discrete values, or (2) numeric values. "}}}},"testData":{"name":"testData","type":"apogee.Folder","children":{"xDataStrings":{"name":"xDataStrings","type":"apogee.JsonMember","updateData":{"data":["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]}},"xDataNumbers":{"name":"xDataNumbers","type":"apogee.JsonMember","updateData":{"data":[1,2,3,4,5,6,7]}},"yData1":{"name":"yData1","type":"apogee.JsonMember","updateData":{"data":[4,2,7,3,7,2,7]}},"yData2":{"name":"yData2","type":"apogee.JsonMember","updateData":{"data":[3,1,9,12,4,1,0]}},"chartConfig":{"name":"chartConfig","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n    type: \"line\",\n    data: {\n        labels: xData,\n        datasets: [\n            {\n                //data\n                data: yData1,\n                //[prop name] [type] [scriptable] [default] [options - where applicable] {desc}\n                //backgroundColor\tColor\tYes\t-\t'rgba(0, 0, 0, 0.1)'\n                backgroundColor: \"rgba(0,0,255,.1)\",\n                //borderCapStyle\tstring\tYes\t-\t'butt'  ['butt','round','sqaure']\n                //borderColor\tColor\tYes\t-\t'rgba(0, 0, 0, 0.1)'\n                //borderDash\tnumber[]\tYes\t-\t[]      {an array of alternating distances to draw for dashes}\n                //borderDashOffset\tnumber\tYes\t-\t0.0\n                //borderJoinStyle\tstring\tYes\t-\t'miter' [\"bevel, \"round\", \"miter\"]\n                //borderWidth\tnumber\tYes\t-\t3\n                //cubicInterpolationMode\tstring\tYes\t-\t'default' [\"default\", \"monotone\"] (monoton prevents bumps in the interpolation not seen in data)\n                //clip\tnumber|object\t-\t-\tborderWidth / 2\n                //fill\tboolean|string\tYes\t-\ttrue [true,false];[\"origin\" - from origin,\"end\" - to top,\"start\" - to bottom];[1,2,3 - to dateset number];[1,-1 - relative data set number]\n                fill: \"top\",\n                //hoverBackgroundColor\tColor\tYes\t-\tundefined\n                //hoverBorderCapStyle\tstring\tYes\t-\tundefined\n                //hoverBorderColor\tColor\tYes\t-\tundefined\n                //hoverBorderDash\tnumber[]\tYes\t-\tundefined\n                //hoverBorderDashOffset\tnumber\tYes\t-\tundefined\n                //hoverBorderJoinStyle\tstring\tYes\t-\tundefined\n                //hoverBorderWidth\tnumber\tYes\t-\n                //label\tstring\t-\t-\t''\n                label: \"yData1\",\n                //lineTension\tnumber\t-\t-\t0.4\n                //order\tnumber\t-\t-\t0 {draw order for points, also affects stacking, tooltip, legend}\n                //pointBackgroundColor\tColor\tYes\tYes\t'rgba(0, 0, 0, 0.1)'\n                //pointBorderColor\tColor\tYes\tYes\t'rgba(0, 0, 0, 0.1)'\n                //pointBorderWidth\tnumber\tYes\tYes\t1\n                //pointHitRadius\tnumber\tYes\tYes\t1\n                //pointHoverBackgroundColor\tColor\tYes\tYes\tundefined\n                //pointHoverBorderColor\tColor\tYes\tYes\tundefined\n                //pointHoverBorderWidth\tnumber\tYes\tYes\t1\n                //pointHoverRadius\tnumber\tYes\tYes\t4\n                //pointRadius\tnumber\tYes\tYes\t3\n                //pointRotation\tnumber\tYes\tYes\t0\n                //pointStyle\tstring|Image\tYes\tYes\t'circle' ['circle', 'cross', 'dash', 'line', 'rect', 'rectRounded', 'rectRot', 'star', 'triangle']\n                pointStyle: \"triangle\",\n                //showLine\tboolean\t-\t-\tundefined\n                //spanGaps\tboolean\t-\t-\tundefined       {false - show a gap if there is non-numeric y value for a x value, true - just connect points}\n                //steppedLine\tboolean|string\t-\t-\tfalse [false, true (same as \"before\")];[\"before\",\"after\",\"middle\"]\n                steppedLine: \"middle\",\n                //xAxisID\tstring\t-\t-\tfirst x axis        {x axis to use}\n                //yAxisID\tstring\t-\t-\tfirst y axis        {y axis to use}\n            },\n            {\n                data: yData2,\n                fill: \"top\",\n                borderColor: \"green\",\n                borderWidth: 1,\n                backgroundColor: \"rgba(0,255,0,.1)\",\n                borderDash: [3,3],\n                pointStyle: \"rect\",\n                radius: 10,\n                pointBorderColor: \"cyan\",\n                pointBackgroundColor: \"black\",\n                pointBorderWidth: 3,\n                pointHoverBackgroundColor: \"red\",\n                pointHoverRadius: 20,\n                pointHoverBorderWidth: 5,\n                pointHoverBorderColor: \"yellow\",\n                label: \"yData2\"\n            }\n        ]\n    },\n    options: {\n        elements: {\n            line: {\n                tension: 0,\n                borderWidth: 5,\n                borderColor: \"rgba(255,0,0,.4)\",\n            },\n            point: {\n                radius: 10,\n                borderColor: \"orange\"\n            }\n        },\n\t\tscales: {\n\t\t\txAxes: [\n\t\t\t\t{\n\t\t\t\t    type: \"category\",\n\t\t\t\t\tdisplay: true\n\t\t\t\t}\n\t\t\t],\n\t\t\tyAxes: [\n\t\t\t\t{\n\t\t\t\t\t\"display\": true,\n\t\t\t\t\t\"stacked\": true\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\ttitle: {\n\t\t    text: \"Test Chart\",\n\t\t    display: true,\n\t\t    position: \"bottom\",\n\t\t    padding: 0,\n\t\t    fontSize: 100\n\t\t}\n\t}\n}","supplementalCode":""}},"points1":{"name":"points1","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return xDataNumbers.map( (xValue,index) => {\n    return {\n        x: xValue,\n        y: yData1[index]\n    };\n})","supplementalCode":""}},"points2":{"name":"points2","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return xDataNumbers.map( (xValue,index) => {\n    return {\n        x: xValue,\n        y: yData2[index]\n    };\n})","supplementalCode":""}}}},"barGraph":{"name":"barGraph","type":"apogee.Folder","children":{"lineGraphForm":{"name":"lineGraphForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    let formMeta = formObject.getMeta();\n    let functionBody = apogeeui.getFormResultFunctionBody(formValue,formMeta);\n    admin.getCommandMessenger().dataCommand(\"functionBodyTest\",functionBody);\n}\n\nlet chartLayout = general.getFormLayout(\"bar\");\n\nlet testLayout = chartLayout.concat([{\n    type: \"submit\",\n    onSubmit: onSubmit,\n    submitLabel: \"Submit\"\n}]);\n\n\nreturn testLayout;","supplementalCode":""}},"functionBodyTest":{"name":"functionBodyTest","type":"apogee.JsonMember","updateData":{"data":"let output = {};\noutput[\"inputType\"] = \"form\"\noutput[\"formData\"]= {};\noutput[\"formData\"][\"xCategories\"] = testData.xDataStrings\noutput[\"formData\"][\"categoryDataSeries\"]= []\noutput[\"formData\"][\"categoryDataSeries\"][0]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"dataType\"] = \"values\"\noutput[\"formData\"][\"categoryDataSeries\"][0][\"yValues\"] = testData.yData1\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"rectangle\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"rectangle\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"rectangle\"][\"selectBorderColor\"] = false\noutput[\"formData\"][\"options\"]= {};\noutput[\"formData\"][\"options\"][\"title\"]= {};\noutput[\"formData\"][\"options\"][\"title\"][\"display\"] = false\noutput[\"formData\"][\"options\"][\"title\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"legend\"]= {};\noutput[\"formData\"][\"options\"][\"legend\"][\"display\"] = true\noutput[\"formData\"][\"options\"][\"rectangle\"]= {};\noutput[\"formData\"][\"options\"][\"rectangle\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"options\"][\"rectangle\"][\"selectBorderColor\"] = false\noutput[\"formData\"][\"options\"][\"yAxes\"]= {};\noutput[\"formData\"][\"options\"][\"yAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"][\"stacked\"] = false\noutput[\"storedFormValue\"] = {\"inputType\":\"form\",\"formData\":{\"xCategories\":\"testData.xDataStrings\",\"categoryDataSeries\":[{\"dataType\":\"values\",\"yValues\":\"testData.yData1\",\"options\":{\"label\":\"\",\"rectangle\":{\"selectAreaColor\":false,\"selectBorderColor\":false,\"borderWidth\":\"default\"}}}],\"options\":{\"title\":{\"display\":false,\"text\":\"\",\"fontSize\":\"default\",\"selectColor\":false},\"legend\":{\"display\":true,\"position\":\"default\"},\"rectangle\":{\"selectAreaColor\":false,\"selectBorderColor\":false,\"borderWidth\":\"default\"},\"yAxes\":{\"type\":\"linear\",\"stacked\":false}}}}\nreturn output;"}},"functionBodyEval":{"name":"functionBodyEval","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"inputType\"] = \"form\"\noutput[\"formData\"]= {};\noutput[\"formData\"][\"xCategories\"] = testData.xDataStrings\noutput[\"formData\"][\"categoryDataSeries\"]= []\noutput[\"formData\"][\"categoryDataSeries\"][0]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"dataType\"] = \"values\"\noutput[\"formData\"][\"categoryDataSeries\"][0][\"yValues\"] = testData.yData1\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"rectangle\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"rectangle\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"rectangle\"][\"selectBorderColor\"] = false\noutput[\"formData\"][\"options\"]= {};\noutput[\"formData\"][\"options\"][\"title\"]= {};\noutput[\"formData\"][\"options\"][\"title\"][\"display\"] = false\noutput[\"formData\"][\"options\"][\"title\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"legend\"]= {};\noutput[\"formData\"][\"options\"][\"legend\"][\"display\"] = true\noutput[\"formData\"][\"options\"][\"rectangle\"]= {};\noutput[\"formData\"][\"options\"][\"rectangle\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"options\"][\"rectangle\"][\"selectBorderColor\"] = false\noutput[\"formData\"][\"options\"][\"yAxes\"]= {};\noutput[\"formData\"][\"options\"][\"yAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"][\"stacked\"] = false\noutput[\"storedFormValue\"] = {\"inputType\":\"form\",\"formData\":{\"xCategories\":\"testData.xDataStrings\",\"categoryDataSeries\":[{\"dataType\":\"values\",\"yValues\":\"testData.yData1\",\"options\":{\"label\":\"\",\"rectangle\":{\"selectAreaColor\":false,\"selectBorderColor\":false,\"borderWidth\":\"default\"}}}],\"options\":{\"title\":{\"display\":false,\"text\":\"\",\"fontSize\":\"default\",\"selectColor\":false},\"legend\":{\"display\":true,\"position\":\"default\"},\"rectangle\":{\"selectAreaColor\":false,\"selectBorderColor\":false,\"borderWidth\":\"default\"},\"yAxes\":{\"type\":\"linear\",\"stacked\":false}}}}\nreturn output;","supplementalCode":""}},"chartInput":{"name":"chartInput","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let formValue = functionBodyEval;\nlet chartData;\nif(formValue.inputType != \"form\") throw new Error(\"This page only works on form data\");\nelse chartData = formValue.formData;\n\nreturn general.createChartConfig(chartData,\"bar\");"}},"testChart":{"name":"testChart","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"inputType\"] = \"rawConfig\"\noutput[\"configData\"] = chartInput\noutput[\"storedFormValue\"] = {\"inputType\":\"rawConfig\",\"configData\":\"chartInput\"}\nreturn output;","supplementalCode":""}}}},"scatterGraph":{"name":"scatterGraph","type":"apogee.Folder","children":{"lineGraphForm":{"name":"lineGraphForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    let formMeta = formObject.getMeta();\n    let functionBody = apogeeui.getFormResultFunctionBody(formValue,formMeta);\n    admin.getCommandMessenger().dataCommand(\"functionBodyTest\",functionBody);\n}\n\nlet chartLayout = general.getFormLayout(\"scatter\");\n\nlet testLayout = chartLayout.concat([{\n    type: \"submit\",\n    onSubmit: onSubmit,\n    submitLabel: \"Submit\"\n}]);\n\n\nreturn testLayout;\n","supplementalCode":""}},"functionBodyTest":{"name":"functionBodyTest","type":"apogee.JsonMember","updateData":{"data":"let output = {};\noutput[\"inputType\"] = \"form\"\noutput[\"formData\"]= {};\noutput[\"formData\"][\"numericDataSeries\"]= []\noutput[\"formData\"][\"numericDataSeries\"][0]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"dataFormat\"] = \"points\"\noutput[\"formData\"][\"numericDataSeries\"][0][\"xyPoints\"] = testData.points1\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"]= {};\noutput[\"formData\"][\"options\"][\"title\"]= {};\noutput[\"formData\"][\"options\"][\"title\"][\"display\"] = false\noutput[\"formData\"][\"options\"][\"title\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"legend\"]= {};\noutput[\"formData\"][\"options\"][\"legend\"][\"display\"] = true\noutput[\"formData\"][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"xAxes\"]= {};\noutput[\"formData\"][\"options\"][\"xAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"]= {};\noutput[\"formData\"][\"options\"][\"yAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"][\"stacked\"] = false\noutput[\"storedFormValue\"] = {\"inputType\":\"form\",\"formData\":{\"numericDataSeries\":[{\"dataFormat\":\"points\",\"xyPoints\":\"testData.points1\",\"options\":{\"label\":\"\",\"point\":{\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"}}}],\"options\":{\"title\":{\"display\":false,\"text\":\"\",\"fontSize\":\"default\",\"selectColor\":false},\"legend\":{\"display\":true,\"position\":\"default\"},\"point\":{\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"},\"xAxes\":{\"type\":\"linear\"},\"yAxes\":{\"type\":\"linear\",\"stacked\":false}}}}\nreturn output;"}},"functionBodyEval":{"name":"functionBodyEval","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"inputType\"] = \"form\"\noutput[\"formData\"]= {};\noutput[\"formData\"][\"numericDataSeries\"]= []\noutput[\"formData\"][\"numericDataSeries\"][0]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"dataFormat\"] = \"points\"\noutput[\"formData\"][\"numericDataSeries\"][0][\"xyPoints\"] = testData.points1\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"numericDataSeries\"][0][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"]= {};\noutput[\"formData\"][\"options\"][\"title\"]= {};\noutput[\"formData\"][\"options\"][\"title\"][\"display\"] = false\noutput[\"formData\"][\"options\"][\"title\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"legend\"]= {};\noutput[\"formData\"][\"options\"][\"legend\"][\"display\"] = true\noutput[\"formData\"][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"xAxes\"]= {};\noutput[\"formData\"][\"options\"][\"xAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"]= {};\noutput[\"formData\"][\"options\"][\"yAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"][\"stacked\"] = false\noutput[\"storedFormValue\"] = {\"inputType\":\"form\",\"formData\":{\"numericDataSeries\":[{\"dataFormat\":\"points\",\"xyPoints\":\"testData.points1\",\"options\":{\"label\":\"\",\"point\":{\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"}}}],\"options\":{\"title\":{\"display\":false,\"text\":\"\",\"fontSize\":\"default\",\"selectColor\":false},\"legend\":{\"display\":true,\"position\":\"default\"},\"point\":{\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"},\"xAxes\":{\"type\":\"linear\"},\"yAxes\":{\"type\":\"linear\",\"stacked\":false}}}}\nreturn output;","supplementalCode":""}},"chartInput":{"name":"chartInput","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let formValue = functionBodyEval;\nlet chartData;\nif(formValue.inputType != \"form\") throw new Error(\"This page only works on form data\");\nelse chartData = formValue.formData;\n\nreturn general.createChartConfig(chartData,\"scatter\");"}},"testChart":{"name":"testChart","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"inputType\"] = \"rawConfig\"\noutput[\"configData\"] = chartInput\noutput[\"storedFormValue\"] = {\"inputType\":\"rawConfig\",\"configData\":\"chartInput\"}\nreturn output;","supplementalCode":""}}}},"charts":{"name":"charts","type":"apogee.Folder","children":{"chart":{"name":"chart","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"inputType\"] = \"form\"\noutput[\"formData\"]= {};\noutput[\"formData\"][\"xValuesType\"] = \"category\"\noutput[\"formData\"][\"categoryDataSeries\"]= []\noutput[\"formData\"][\"categoryDataSeries\"][0]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"dataType\"] = \"values\"\noutput[\"formData\"][\"categoryDataSeries\"][0][\"yValues\"] = testData.yData1\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"label\"] = \"Dataset 1\"\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"line\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"line\"][\"selectColor\"] = false\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"line\"][\"fill\"] = true\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"line\"][\"selectAreaColor\"] = true\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"line\"][\"backgroundColor\"] = \"#ff00ee\"\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][0][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"categoryDataSeries\"][1]= {};\noutput[\"formData\"][\"categoryDataSeries\"][1][\"dataType\"] = \"values\"\noutput[\"formData\"][\"categoryDataSeries\"][1][\"yValues\"] = testData.yData2\noutput[\"formData\"][\"categoryDataSeries\"][1][\"options\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][1][\"options\"][\"line\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][1][\"options\"][\"line\"][\"selectColor\"] = false\noutput[\"formData\"][\"categoryDataSeries\"][1][\"options\"][\"line\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"categoryDataSeries\"][1][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"categoryDataSeries\"][1][\"options\"][\"point\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"]= {};\noutput[\"formData\"][\"options\"][\"xValuesType\"] = \"category\"\noutput[\"formData\"][\"options\"][\"title\"]= {};\noutput[\"formData\"][\"options\"][\"title\"][\"display\"] = true\noutput[\"formData\"][\"options\"][\"title\"][\"text\"] = \"Test!\"\noutput[\"formData\"][\"options\"][\"title\"][\"fontSize\"] = 12\noutput[\"formData\"][\"options\"][\"title\"][\"selectColor\"] = true\noutput[\"formData\"][\"options\"][\"title\"][\"fontColor\"] = \"#ff00a2\"\noutput[\"formData\"][\"options\"][\"legend\"]= {};\noutput[\"formData\"][\"options\"][\"legend\"][\"display\"] = false\noutput[\"formData\"][\"options\"][\"line\"]= {};\noutput[\"formData\"][\"options\"][\"line\"][\"selectColor\"] = false\noutput[\"formData\"][\"options\"][\"line\"][\"fill\"] = true\noutput[\"formData\"][\"options\"][\"line\"][\"selectAreaColor\"] = false\noutput[\"formData\"][\"options\"][\"point\"]= {};\noutput[\"formData\"][\"options\"][\"point\"][\"selectColor\"] = true\noutput[\"formData\"][\"options\"][\"point\"][\"borderColor\"] = \"#0d0d0d\"\noutput[\"formData\"][\"options\"][\"yAxes\"]= {};\noutput[\"formData\"][\"options\"][\"yAxes\"][\"type\"] = \"linear\"\noutput[\"formData\"][\"options\"][\"yAxes\"][\"stacked\"] = false\noutput[\"storedFormValue\"] = {\"inputType\":\"form\",\"formData\":{\"xValuesType\":\"category\",\"xCategories\":\"\",\"categoryDataSeries\":[{\"dataType\":\"values\",\"yValues\":\"testData.yData1\",\"options\":{\"label\":\"Dataset 1\",\"line\":{\"selectColor\":false,\"borderWidth\":\"default\",\"fill\":true,\"selectAreaColor\":true,\"backgroundColor\":\"#ff00ee\",\"doLineTension\":\"default\",\"spanGaps\":\"default\",\"stepped\":\"default\"},\"point\":{\"showPoints\":\"default\",\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"}}},{\"dataType\":\"values\",\"yValues\":\"testData.yData2\",\"options\":{\"label\":\"\",\"line\":{\"selectColor\":false,\"borderWidth\":\"default\",\"fill\":\"default\",\"selectAreaColor\":false,\"doLineTension\":\"default\",\"spanGaps\":\"default\",\"stepped\":\"default\"},\"point\":{\"showPoints\":\"default\",\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":false,\"borderWidth\":\"default\"}}}],\"options\":{\"xValuesType\":\"category\",\"title\":{\"display\":true,\"text\":\"Test!\",\"fontSize\":12,\"selectColor\":true,\"fontColor\":\"#ff00a2\"},\"legend\":{\"display\":false},\"line\":{\"selectColor\":false,\"borderWidth\":\"default\",\"fill\":true,\"selectAreaColor\":false,\"doLineTension\":\"default\",\"spanGaps\":\"default\",\"stepped\":\"default\"},\"point\":{\"showPoints\":\"default\",\"pointStyle\":\"default\",\"radius\":\"default\",\"selectColor\":true,\"borderColor\":\"#0d0d0d\",\"borderWidth\":\"default\"},\"yAxes\":{\"type\":\"linear\",\"stacked\":false}}}}\nreturn output;","supplementalCode":""}}}}}},"components":{"lineGraph":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Line Graph"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we develop the forms for the line graph input."}]},{"type":"heading2","content":[{"type":"text","text":"Chart Config"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the form from the chart layout."}]},{"type":"apogeeComponent","attrs":{"name":"lineGraphForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following table receives the translated output from the lineGraphForm."}]},{"type":"apogeeComponent","attrs":{"name":"functionBodyTest","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we must manually paste the \"code\" from above into the formula for the cell below. This function body should execute to return the config json for the chart."}]},{"type":"apogeeComponent","attrs":{"name":"functionBodyEval","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Below we process the above configuration into the proper input for the chart."}]},{"type":"apogeeComponent","attrs":{"name":"chartInput","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"And here is the resulting chart."}]},{"type":"apogeeComponent","attrs":{"name":"testChart","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"test","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"lineGraphForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"functionBodyTest":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"functionBodyEval":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":true},"Formula":{"isViewActive":true,"height":238},"Private":{"isViewActive":false}}}}},"chartInput":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"testChart":{"type":"apogeeapp.ChartJSCell","chartType":"line","debugOutputType":"JSON","viewState":{"childDisplayState":{"views":{"Chart":{"isViewActive":true},"Input":{"isViewActive":true},"Config (Debug)":{"isViewActive":false}}}}},"test":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"general":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"General Config"}]},{"type":"paragraph","content":[{"type":"text","text":"This section has general config options."}]},{"type":"heading2","content":[{"type":"text","text":"Chart Config Generation Settings"}]},{"type":"paragraph","content":[{"type":"text","text":"This struct gives the information needed to construct the forms for each chart type."}]},{"type":"apogeeComponent","attrs":{"name":"CHART_INFO_MAP","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Help Text"}]},{"type":"apogeeComponent","attrs":{"name":"inputTypeHelp","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"configFormatHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"configJsonHelp","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"xValuesTypeHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"categoryElementHelp","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"numericDataFormatHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"numericXValuesHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"numericYValuesHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"numericXYPointsHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"numericDataArrayHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"numericXAccessorHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"numericYAccessorHelp","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"categoryDataFormatHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"categoryYValuesHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"categoryDataArrayHelp","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"categoryYAccessorHelp","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Construction"}]},{"type":"paragraph","content":[{"type":"text","text":"This function constructs the overall form layout for the chart input."}]},{"type":"apogeeComponent","attrs":{"name":"getFormLayout","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The constructs the body of the layout for the \"form\" option of input. Or, in other words, this is the actual chart entry form. "}]},{"type":"apogeeComponent","attrs":{"name":"getChartFormLayout","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Data Series"}]},{"type":"paragraph","content":[{"type":"text","text":"The user can enter a number of data series. Each has the following layout."}]},{"type":"heading4","content":[{"type":"text","text":"Numeric Data"}]},{"type":"apogeeComponent","attrs":{"name":"getNumericDataSeriesElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"numericDataSeriesForm","id":0,"state":""}},{"type":"heading4","content":[{"type":"text","text":"Category Data"}]},{"type":"apogeeComponent","attrs":{"name":"getCategoryDataSeriesElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"categoryDataSeriesForm","id":0,"state":""}},{"type":"heading4","content":[{"type":"text","text":"Series Options"}]},{"type":"paragraph","content":[{"type":"text","text":"These are the options for the series."}]},{"type":"apogeeComponent","attrs":{"name":"getSeriesOptionsElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"seriesOptionsForm","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Chart Options"}]},{"type":"paragraph","content":[{"type":"text","text":"These are the general options for the chart."}]},{"type":"apogeeComponent","attrs":{"name":"getChartOptionsElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"chartOptionsForm","id":0,"state":""}},{"type":"heading4","content":[{"type":"text","text":"AxesConfig"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the axes config section."}]},{"type":"apogeeComponent","attrs":{"name":"getAxesOptionsElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Data Series Data Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"The following are the elements used in the data series for entering the data. Series options should be appended, whcih will depend on the chart type."}]},{"type":"heading3","content":[{"type":"text","text":"Numeric Data"}]},{"type":"apogeeComponent","attrs":{"name":"baseNumericDataSeriesDataLayout","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"numericDataSeriesDataForm","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Category Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the data series input for category data. Category data must be input as a common x category array for all the data series."}]},{"type":"apogeeComponent","attrs":{"name":"baseCategoryDataSeriesDataLayout","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"categoryDataSeriesDataForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Title"}]},{"type":"paragraph","content":[{"type":"text","text":"The layout configures the title of the chart."}]},{"type":"apogeeComponent","attrs":{"name":"titleConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"titleForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Legend"}]},{"type":"paragraph","content":[{"type":"text","text":"This layout configures the layout of the chart."}]},{"type":"apogeeComponent","attrs":{"name":"legendConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"legendForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Chart Element Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"These layouts configure the different elements of the chart. They are used as needed depending on the tyep of chart."}]},{"type":"paragraph","content":[{"type":"text","text":"For these, the layouts are typically repeated for the series, so you can customize the series individually or provide common configurations."}]},{"type":"heading3","content":[{"type":"text","text":"Point"}]},{"type":"apogeeComponent","attrs":{"name":"basePointConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"pointConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"pointForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we are adding an option to show or hide the points."}]},{"type":"apogeeComponent","attrs":{"name":"showPointsElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"pointConfigElementWithShow","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"pointFormWithNoneOption","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Line"}]},{"type":"apogeeComponent","attrs":{"name":"lineConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"lineForm","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Rectangle"}]},{"type":"apogeeComponent","attrs":{"name":"rectConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"rectForm","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Arc"}]},{"type":"apogeeComponent","attrs":{"name":"arcConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"arcForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Axes"}]},{"type":"paragraph","content":[{"type":"text","text":"In the future we should add multiple axes for x or y. For now there is just one for each."}]},{"type":"heading3","content":[{"type":"text","text":"X Axis"}]},{"type":"paragraph","content":[{"type":"text","text":"This entry is only needed when the the data is numeric. There is currently no config for type category."}]},{"type":"apogeeComponent","attrs":{"name":"xAxisConfigElement","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here is the form with the element"}]},{"type":"apogeeComponent","attrs":{"name":"xAxisNumericForm","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"xAxisConfigElementWithSelector","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Y Axis"}]},{"type":"paragraph","content":[{"type":"text","text":"Currently Y axis is always numeric."}]},{"type":"apogeeComponent","attrs":{"name":"yAxisConfigElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"yAxisForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Additional Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"This element is to enter category data."}]},{"type":"apogeeComponent","attrs":{"name":"categoryElement","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"categoryElementWithSelector","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following element is used when we can switch between x data types."}]},{"type":"apogeeComponent","attrs":{"name":"xValuesTypeElement","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This element is used to pass the x value (using inherit) to child panel elements."}]},{"type":"apogeeComponent","attrs":{"name":"invisibleXValuesTypeElement","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This element should be included in the data series options."}]},{"type":"apogeeComponent","attrs":{"name":"seriesLabelElement","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Processing Functions"}]},{"type":"paragraph","content":[{"type":"text","text":"This function creates a raw chart config from a chart input json, either from the form or from a chart json input."}]},{"type":"apogeeComponent","attrs":{"name":"createChartConfig","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function loads the data series where the x values are numeric"}]},{"type":"apogeeComponent","attrs":{"name":"getXNumericChartData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function loads the data series where the x values are categories"}]},{"type":"apogeeComponent","attrs":{"name":"getXCategoryChartData","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function creates the chartConfig options from the apogee format chart input json."}]},{"type":"apogeeComponent","attrs":{"name":"getChartOptions","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function loads the data series options into the target options object from the apogee format input json."}]},{"type":"apogeeComponent","attrs":{"name":"loadSeriesOptions","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This struct tells gives defaults we want to explicitly set and it shows what field associations we want to make (ie assign hoverBorderWidth the same as borderWidth, if borderWidth is assigned and hoverBorderWidth is not."}]},{"type":"paragraph","content":[{"type":"text","text":"For the associations, there is an added field \"modifier\" which is the string name for a function to modify the source value. Right now the only option is addOne."}]},{"type":"apogeeComponent","attrs":{"name":"OPTION_MODIFIER","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"These are the list of colors for \"auto\" color assignment. (We might want to let the users set these globally since the palette will be very important in many cases.) "}]},{"type":"apogeeComponent","attrs":{"name":"COLOR_LIST","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following does standard mapping of options from the input json config to create the raw config. In some cases, additional processing may be needed, which will be done externally."}]},{"type":"apogeeComponent","attrs":{"name":"processOptions","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"mergeOpacity","id":0,"state":""}}]}},"children":{"legendForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"titleForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"lineForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"pointForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"rectForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"xAxisNumericForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"isViewActive":false,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"yAxisForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"titleConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"legendConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"lineConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"rectConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"loadSeriesOptions":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":true,"height":7000}}}}},"getChartOptions":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"getXNumericChartData":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"getXCategoryChartData":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"categoryDataSeriesDataForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"numericDataSeriesDataForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false,"height":280}}}}},"baseNumericDataSeriesDataLayout":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"baseCategoryDataSeriesDataLayout":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"xAxisConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"showPointsElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"pointFormWithNoneOption":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"isViewActive":false,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"basePointConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":false,"height":280},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"pointConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"pointConfigElementWithShow":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":false,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"COLOR_LIST":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"OPTION_MODIFIER":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"createChartConfig":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"xAxisConfigElementWithSelector":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"numericDataSeriesForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"categoryDataSeriesForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"seriesOptionsForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"isViewActive":false,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"chartOptionsForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"isViewActive":false,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"getAxesOptionsElement":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"getChartOptionsElement":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"getSeriesOptionsElement":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"getNumericDataSeriesElement":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"getCategoryDataSeriesElement":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"categoryElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"xValuesTypeElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false}}}}},"invisibleXValuesTypeElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"categoryElementWithSelector":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"processOptions":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":true,"height":7000}}}}},"arcConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"arcForm":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":false},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"CHART_INFO_MAP":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":true},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"seriesLabelElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"yAxisConfigElement":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"mergeOpacity":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":true,"height":7000}}}}},"getFormLayout":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"getChartFormLayout":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"inputTypeHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"configFormatHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"configJsonHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"numericDataFormatHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"numericXValuesHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"numericYValuesHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"numericXYPointsHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"numericDataArrayHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"numericXAccessorHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"numericYAccessorHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"categoryDataFormatHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"categoryYValuesHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"categoryDataArrayHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"categoryYAccessorHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"categoryElementHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"xValuesTypeHelp":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"testData":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Input Data"}]},{"type":"paragraph","content":[{"type":"text","text":"The following cells give input data to populate the charts."}]},{"type":"apogeeComponent","attrs":{"name":"xDataStrings","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"xDataNumbers","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"yData1","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"yData2","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"points1","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"points2","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"chartConfig","id":0,"state":""}},{"type":"heading2"},{"type":"paragraph"}]}},"children":{"xDataStrings":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"xDataNumbers":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":true},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"yData1":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"yData2":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"chartConfig":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":true,"height":560},"Private":{"isViewActive":false}}}}},"points1":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"points2":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"barGraph":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Bar Graph"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we develop the forms for the bar graph input."}]},{"type":"heading2","content":[{"type":"text","text":"Chart Config"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the form from the chart layout."}]},{"type":"apogeeComponent","attrs":{"name":"lineGraphForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following table receives the translated output from the lineGraphForm."}]},{"type":"apogeeComponent","attrs":{"name":"functionBodyTest","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we must manually paste the \"code\" from above into the formula for the cell below. This function body should execute to return the config json for the chart."}]},{"type":"apogeeComponent","attrs":{"name":"functionBodyEval","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Below we process the above configuration into the proper input for the chart."}]},{"type":"apogeeComponent","attrs":{"name":"chartInput","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"And here is the resulting chart."}]},{"type":"apogeeComponent","attrs":{"name":"testChart","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2"}]}},"children":{"lineGraphForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"functionBodyTest":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"functionBodyEval":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"chartInput":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"testChart":{"type":"apogeeapp.ChartJSCell","chartType":"line","debugOutputType":"JSON","viewState":{"childDisplayState":{"views":{"Chart":{"isViewActive":true},"Input":{"isViewActive":true},"Config (Debug)":{"isViewActive":false,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"scatterGraph":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Scatter Graph"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we develop the forms for the scatter graph input."}]},{"type":"heading2","content":[{"type":"text","text":"Chart Config"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the form from the chart layout."}]},{"type":"apogeeComponent","attrs":{"name":"lineGraphForm","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The following table receives the translated output from the lineGraphForm."}]},{"type":"apogeeComponent","attrs":{"name":"functionBodyTest","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we must manually paste the \"code\" from above into the formula for the cell below. This function body should execute to return the config json for the chart."}]},{"type":"apogeeComponent","attrs":{"name":"functionBodyEval","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Below we process the above configuration into the proper input for the chart."}]},{"type":"apogeeComponent","attrs":{"name":"chartInput","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"And here is the resulting chart."}]},{"type":"apogeeComponent","attrs":{"name":"testChart","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"lineGraphForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"functionBodyTest":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"functionBodyEval":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"chartInput":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"testChart":{"type":"apogeeapp.ChartJSCell","chartType":"line","debugOutputType":"JSON","viewState":{"childDisplayState":{"views":{"Chart":{"isViewActive":true},"Input":{"isViewActive":true},"Config (Debug)":{"isViewActive":false,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"charts":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Charts Page"}]},{"type":"paragraph","content":[{"type":"text","text":"This is a page for testing the plain charts."}]},{"type":"apogeeComponent","attrs":{"name":"chart","id":0,"state":""}}]}},"children":{"chart":{"type":"apogeeapp.ChartJSCell","chartType":"line","debugOutputType":"Chart Config","viewState":{"childDisplayState":{"views":{"Chart":{"isViewActive":true},"Input":{"isViewActive":true},"Config (Debug)":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}