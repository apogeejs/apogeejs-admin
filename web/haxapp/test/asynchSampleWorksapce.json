{"name":"workspace","fileType":"hax workspace","jsLinks":[],"cssLinks":[],"workspace":{"name":"workspace","fileType":"hax workspace","version":0.2,"data":{"name":"workspace","type":"hax.Folder","children":{"a":{"name":"a","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\n//BASIC ASYNCHROUNOUS FORMULA\r\n//Proper error handling is shown in table b.\r\n\r\n//If a formula is asynchronous, the return value should be a \"Promise\"\r\n//A promise can often returned from asynchronous requests, or it can be manually\r\n//constructed. A manuall constructed example is given below. Simply pass\r\n//an appropriate function in to the Promise constructor.\r\n\r\nvar promiseFunction = function(resolve,reject) {\r\n    var result = 7 + seed;\r\n    var callback = function() {\r\n        resolve(result);\r\n    }\r\n    setTimeout(callback,3000);\r\n}\r\n\r\nvalue = new Promise(promiseFunction);\nreturn value;\n\n","supplementalCode":"","description":""}},"b":{"name":"b","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\n//ASYNCHRONOUS FORMULA WITH ERROR HANDLING\r\n\r\n//We do this similar to table \"a\" except here we handle a \r\n//error case. Our error case here is just a sample. It can be\r\n//triggered by setting the \"seed\" table to anything less than 6.\r\n\r\nvar promiseFunction = function(resolve,reject) {\r\n    var result = 4 + seed;\r\n    var error = (result < 10);\r\n    var callback = function() {\r\n        if(!error) {\r\n            resolve(result);\r\n        }\r\n        else {\r\n            reject(\"Error in asynchronous processing! Result to small\");\r\n        }\r\n    }\r\n    setTimeout(callback,5000);\r\n}\r\n\r\nvalue = new Promise(promiseFunction);\nreturn value;\n\n","supplementalCode":"","description":""}},"c":{"name":"c","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\n//This is a table that depends on tables\n//a and b, for demonstration purposes\n\nvalue = a + b;\nreturn value;\n\n","supplementalCode":"","description":""}},"seed":{"name":"seed","type":"hax.JsonTable","updateData":{"data":8,"description":""}}}}},"components":{"a":{"type":"haxapp.app.JsonTableComponent","coordInfo":{"x":53,"y":166,"width":610,"height":393},"windowState":0,"viewType":"Text"},"b":{"type":"haxapp.app.JsonTableComponent","coordInfo":{"x":696,"y":164,"width":613,"height":396},"windowState":0,"viewType":"Text"},"c":{"type":"haxapp.app.JsonTableComponent","coordInfo":{"x":645,"y":574,"width":335,"height":174},"windowState":0,"viewType":"Text"},"seed":{"type":"haxapp.app.JsonTableComponent","coordInfo":{"x":162,"y":8,"width":224,"height":78},"windowState":0,"viewType":"Text"}}}