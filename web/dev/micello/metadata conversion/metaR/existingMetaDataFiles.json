{"fileType":"apogee workspace","jsLinks":[],"cssLinks":[],"workspace":{"fileType":"apogee workspace","version":0.2,"data":{"name":"fileReconstruct","type":"apogee.Folder","children":{"taskResults":{"name":"taskResults","type":"apogee.Folder","children":{"loadMetaFileRecords":{"name":"loadMetaFileRecords","type":"apogee.JsonTable","updateData":{"data":{"state":"SUCCESS","data":{"existingMetaFileEntry":{"edit_perm":15,"Type":"meta_file","Fields":{"name":"Standard","file_type_id":1,"file_context":"public"},"edit_ok":true,"read_perm":2,"Id":1},"existingRecipeEntries":[{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":0,"meta_file_id":1,"file_entry_id":1,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":1},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":1,"meta_file_id":1,"file_entry_id":2,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":2},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":2,"meta_file_id":1,"file_entry_id":3,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":3},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":3,"meta_file_id":1,"file_entry_id":4,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":4},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":4,"meta_file_id":1,"file_entry_id":5,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":5},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":5,"meta_file_id":1,"file_entry_id":6,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":6},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":6,"meta_file_id":1,"file_entry_id":7,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":7},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":7,"meta_file_id":1,"file_entry_id":8,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":8},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":8,"meta_file_id":1,"file_entry_id":9,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":9},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":9,"meta_file_id":1,"file_entry_id":10,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":10},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":10,"meta_file_id":1,"file_entry_id":11,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":11},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":11,"meta_file_id":1,"file_entry_id":12,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":12},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":12,"meta_file_id":1,"file_entry_id":13,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":13},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":13,"meta_file_id":1,"file_entry_id":14,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":14},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":14,"meta_file_id":1,"file_entry_id":15,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":15},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":15,"meta_file_id":1,"file_entry_id":16,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":16},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":16,"meta_file_id":1,"file_entry_id":17,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":17},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":17,"meta_file_id":1,"file_entry_id":18,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":18},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":18,"meta_file_id":1,"file_entry_id":19,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":19},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":19,"meta_file_id":1,"file_entry_id":20,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":20},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":20,"meta_file_id":1,"file_entry_id":21,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":21},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":21,"meta_file_id":1,"file_entry_id":22,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":22},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":22,"meta_file_id":1,"file_entry_id":23,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":23},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":23,"meta_file_id":1,"file_entry_id":24,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":24},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":24,"meta_file_id":1,"file_entry_id":25,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":25},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":25,"meta_file_id":1,"file_entry_id":26,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":26},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":26,"meta_file_id":1,"file_entry_id":27,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":27},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":27,"meta_file_id":1,"file_entry_id":28,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":28},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":28,"meta_file_id":1,"file_entry_id":29,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":29},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":29,"meta_file_id":1,"file_entry_id":30,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":30},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":30,"meta_file_id":1,"file_entry_id":31,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":31},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":31,"meta_file_id":1,"file_entry_id":32,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":32},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":32,"meta_file_id":1,"file_entry_id":33,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":33},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":33,"meta_file_id":1,"file_entry_id":34,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":34},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":34,"meta_file_id":1,"file_entry_id":35,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":35},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":35,"meta_file_id":1,"file_entry_id":36,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":36},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":36,"meta_file_id":1,"file_entry_id":37,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":37},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":37,"meta_file_id":1,"file_entry_id":38,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":38},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":38,"meta_file_id":1,"file_entry_id":39,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":39},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":39,"meta_file_id":1,"file_entry_id":40,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":40},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":40,"meta_file_id":1,"file_entry_id":41,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":41},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":41,"meta_file_id":1,"file_entry_id":42,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":42},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":42,"meta_file_id":1,"file_entry_id":43,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":43},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":43,"meta_file_id":1,"file_entry_id":44,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":44},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":44,"meta_file_id":1,"file_entry_id":45,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":45},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":45,"meta_file_id":1,"file_entry_id":46,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":46},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":46,"meta_file_id":1,"file_entry_id":47,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":47},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":47,"meta_file_id":1,"file_entry_id":48,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":48},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":48,"meta_file_id":1,"file_entry_id":49,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":49},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":49,"meta_file_id":1,"file_entry_id":50,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":50},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":50,"meta_file_id":1,"file_entry_id":51,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":51},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":51,"meta_file_id":1,"file_entry_id":52,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":52},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":52,"meta_file_id":1,"file_entry_id":53,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":53},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":53,"meta_file_id":1,"file_entry_id":54,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":54},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":54,"meta_file_id":1,"file_entry_id":55,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":55},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":55,"meta_file_id":1,"file_entry_id":56,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":56},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":56,"meta_file_id":1,"file_entry_id":57,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":57},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":57,"meta_file_id":1,"file_entry_id":58,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":58},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":58,"meta_file_id":1,"file_entry_id":59,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":59},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":59,"meta_file_id":1,"file_entry_id":60,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":60},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":60,"meta_file_id":1,"file_entry_id":61,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":61},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":61,"meta_file_id":1,"file_entry_id":62,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":62},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":62,"meta_file_id":1,"file_entry_id":63,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":63},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":63,"meta_file_id":1,"file_entry_id":64,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":64},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":64,"meta_file_id":1,"file_entry_id":65,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":65},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":65,"meta_file_id":1,"file_entry_id":66,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":66},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":66,"meta_file_id":1,"file_entry_id":67,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":67},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":67,"meta_file_id":1,"file_entry_id":68,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":68},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":68,"meta_file_id":1,"file_entry_id":69,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":69},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":69,"meta_file_id":1,"file_entry_id":70,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":70},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":70,"meta_file_id":1,"file_entry_id":71,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":71},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":71,"meta_file_id":1,"file_entry_id":72,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":72},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":72,"meta_file_id":1,"file_entry_id":73,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":73},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":73,"meta_file_id":1,"file_entry_id":74,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":74},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":74,"meta_file_id":1,"file_entry_id":75,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":75},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":75,"meta_file_id":1,"file_entry_id":76,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":76},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":76,"meta_file_id":1,"file_entry_id":77,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":77},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":77,"meta_file_id":1,"file_entry_id":78,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":78},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":78,"meta_file_id":1,"file_entry_id":79,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":79},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":79,"meta_file_id":1,"file_entry_id":80,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":80},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":80,"meta_file_id":1,"file_entry_id":81,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":81},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":81,"meta_file_id":1,"file_entry_id":82,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":82},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":82,"meta_file_id":1,"file_entry_id":83,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":83},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":83,"meta_file_id":1,"file_entry_id":84,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":84},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":84,"meta_file_id":1,"file_entry_id":85,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":85},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":85,"meta_file_id":1,"file_entry_id":86,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":86},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":86,"meta_file_id":1,"file_entry_id":87,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":87},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":87,"meta_file_id":1,"file_entry_id":88,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":88},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":88,"meta_file_id":1,"file_entry_id":89,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":89},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":89,"meta_file_id":1,"file_entry_id":90,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":90},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":90,"meta_file_id":1,"file_entry_id":91,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":91},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":91,"meta_file_id":1,"file_entry_id":92,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":92},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":92,"meta_file_id":1,"file_entry_id":93,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":93},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":93,"meta_file_id":1,"file_entry_id":94,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":94},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":94,"meta_file_id":1,"file_entry_id":95,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":95},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":95,"meta_file_id":1,"file_entry_id":96,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":96},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":96,"meta_file_id":1,"file_entry_id":97,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":97},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":97,"meta_file_id":1,"file_entry_id":98,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":98},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":98,"meta_file_id":1,"file_entry_id":99,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":99},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":99,"meta_file_id":1,"file_entry_id":100,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":100},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":100,"meta_file_id":1,"file_entry_id":101,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":101},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":101,"meta_file_id":1,"file_entry_id":102,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":102},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":102,"meta_file_id":1,"file_entry_id":103,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":103},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":103,"meta_file_id":1,"file_entry_id":104,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":104},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":104,"meta_file_id":1,"file_entry_id":105,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":105},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":105,"meta_file_id":1,"file_entry_id":106,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":106},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":106,"meta_file_id":1,"file_entry_id":107,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":107},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":107,"meta_file_id":1,"file_entry_id":108,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":108},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":108,"meta_file_id":1,"file_entry_id":109,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":109},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":109,"meta_file_id":1,"file_entry_id":110,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":110},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":110,"meta_file_id":1,"file_entry_id":111,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":111},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":111,"meta_file_id":1,"file_entry_id":112,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":112},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":112,"meta_file_id":1,"file_entry_id":113,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":113},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":113,"meta_file_id":1,"file_entry_id":114,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":114},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":114,"meta_file_id":1,"file_entry_id":115,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":115},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":115,"meta_file_id":1,"file_entry_id":116,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":116},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":116,"meta_file_id":1,"file_entry_id":117,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":117},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":117,"meta_file_id":1,"file_entry_id":118,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":118},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":118,"meta_file_id":1,"file_entry_id":119,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":119},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":119,"meta_file_id":1,"file_entry_id":120,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":120},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":120,"meta_file_id":1,"file_entry_id":121,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":121},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":121,"meta_file_id":1,"file_entry_id":122,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":122},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":122,"meta_file_id":1,"file_entry_id":123,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":123},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":123,"meta_file_id":1,"file_entry_id":124,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":124},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":124,"meta_file_id":1,"file_entry_id":125,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":125},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":125,"meta_file_id":1,"file_entry_id":126,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":126},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":126,"meta_file_id":1,"file_entry_id":127,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":127},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":127,"meta_file_id":1,"file_entry_id":128,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":128},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":128,"meta_file_id":1,"file_entry_id":129,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":129},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":129,"meta_file_id":1,"file_entry_id":130,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":130},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":130,"meta_file_id":1,"file_entry_id":131,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":131},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":131,"meta_file_id":1,"file_entry_id":132,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":132},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":132,"meta_file_id":1,"file_entry_id":133,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":133},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":133,"meta_file_id":1,"file_entry_id":134,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":134},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":134,"meta_file_id":1,"file_entry_id":135,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":135},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":135,"meta_file_id":1,"file_entry_id":136,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":136},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":136,"meta_file_id":1,"file_entry_id":137,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":137},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":137,"meta_file_id":1,"file_entry_id":138,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":138},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":138,"meta_file_id":1,"file_entry_id":139,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":139},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":139,"meta_file_id":1,"file_entry_id":140,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":140},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":140,"meta_file_id":1,"file_entry_id":141,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":141},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":141,"meta_file_id":1,"file_entry_id":142,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":142},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":142,"meta_file_id":1,"file_entry_id":143,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":143},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":143,"meta_file_id":1,"file_entry_id":144,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":144},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":144,"meta_file_id":1,"file_entry_id":145,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":145},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":145,"meta_file_id":1,"file_entry_id":146,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":146},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":146,"meta_file_id":1,"file_entry_id":147,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":147},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":147,"meta_file_id":1,"file_entry_id":148,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":148},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":148,"meta_file_id":1,"file_entry_id":149,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":149},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":149,"meta_file_id":1,"file_entry_id":150,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":150},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":150,"meta_file_id":1,"file_entry_id":151,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":151},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":151,"meta_file_id":1,"file_entry_id":152,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":152},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":152,"meta_file_id":1,"file_entry_id":153,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":153},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":153,"meta_file_id":1,"file_entry_id":154,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":154},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":154,"meta_file_id":1,"file_entry_id":155,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":155},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":155,"meta_file_id":1,"file_entry_id":156,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":156},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":156,"meta_file_id":1,"file_entry_id":157,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":157},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":157,"meta_file_id":1,"file_entry_id":158,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":158},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":158,"meta_file_id":1,"file_entry_id":159,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":159},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":159,"meta_file_id":1,"file_entry_id":160,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":160},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":160,"meta_file_id":1,"file_entry_id":161,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":161},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":161,"meta_file_id":1,"file_entry_id":162,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":162},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":162,"meta_file_id":1,"file_entry_id":163,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":163},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":163,"meta_file_id":1,"file_entry_id":164,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":164},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":164,"meta_file_id":1,"file_entry_id":165,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":165},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":165,"meta_file_id":1,"file_entry_id":166,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":166},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":166,"meta_file_id":1,"file_entry_id":167,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":167},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":167,"meta_file_id":1,"file_entry_id":168,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":168},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":168,"meta_file_id":1,"file_entry_id":169,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":169},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":169,"meta_file_id":1,"file_entry_id":170,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":170},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":170,"meta_file_id":1,"file_entry_id":171,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":171},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":171,"meta_file_id":1,"file_entry_id":172,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":172},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":172,"meta_file_id":1,"file_entry_id":173,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":173},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":173,"meta_file_id":1,"file_entry_id":174,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":174},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":174,"meta_file_id":1,"file_entry_id":175,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":175},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":175,"meta_file_id":1,"file_entry_id":176,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":176},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":176,"meta_file_id":1,"file_entry_id":177,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":177},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":177,"meta_file_id":1,"file_entry_id":178,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":178},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":178,"meta_file_id":1,"file_entry_id":179,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":179},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":179,"meta_file_id":1,"file_entry_id":180,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":180}],"fileType":"propertyRules"}},"description":""}},"login":{"name":"login","type":"apogee.JsonTable","updateData":{"data":{"state":"SUCCESS","data":{"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=pfsnq14uslkhnvqbnjfjli1rb1"}},"description":""}},"loadContext":{"name":"loadContext","type":"apogee.JsonTable","updateData":{"data":{"state":"SUCCESS","data":{"context":"public"}},"description":""}}}},"tasks":{"name":"tasks","type":"apogee.Folder","children":{"login":{"name":"login","type":"apogee.Folder","children":{"loginUrl":{"name":"loginUrl","type":"apogee.JsonTable","updateData":{"data":"http://localhost:8080/TestAuthorization/loginjson","description":""}},"loginControl":{"name":"loginControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return loginUrl;","supplementalCode":"","description":""}},"sessionResponse":{"name":"sessionResponse","type":"apogee.JsonTable","updateData":{"data":{"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=pfsnq14uslkhnvqbnjfjli1rb1","responseCode":1},"description":""}},"taskResult":{"name":"taskResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\nvar sessionKey;\nif(!sessionResponse) {\n    output.state = \"INCOMPLETE\";\n}\nelse if(sessionResponse.responseCode === 1) {\n    output.state = \"SUCCESS\";\n    data = {};\n    data.sessionKey = sessionResponse.sessionKey;\n    output.data = data;\n}\nelse {\n    output.status = \"ERROR\";\n    output.msg = sessionResponse.message;\n\n}\n\napogeeMessenger.dataUpdate(\"taskResults.login\",output);\n    \nreturn output;","supplementalCode":"","description":""}}}},"loadMetaFileRecords":{"name":"loadMetaFileRecords","type":"apogee.Folder","children":{"fileTypeList":{"name":"fileTypeList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\n\nvar fileTypeSearch = {};\nfileTypeSearch.search = \"file_type_list\";\n\nreturn micemetarDataAccess.getRequestPromise(fileTypeSearch,sessionKey);\n\n","supplementalCode":"","description":""}},"fileTypeEntryList":{"name":"fileTypeEntryList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!existingMetaFileEntry) return null;\n\nvar fileTypeId = existingMetaFileEntry.Fields.file_type_id;\n\nvar searchDef = {};\nsearchDef.search = \"file_type_entries\";\nsearchDef.id = fileTypeId;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"recordStore":{"name":"recordStore","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var map = {};\n\naddSearchResponse(fileTypeList,map);\naddSearchResponse(fileTypeEntryList,map);\naddSearchResponse(metaFileList,map);\naddSearchResponse(metaFileResponse,map);\n\nreturn map;\n\n","supplementalCode":"function addSearchResponse(searchResponse,outputMap) {\n    if(!searchResponse) {\n        return;\n    }\n    \n    if(!searchResponse.success) {\n        throw new Error(\"Error in loading record data: \" + searchResponse.msg);\n    }\n    \n    var searchResponseData = searchResponse.data;\n    \n    if(searchResponseData.Response) {\n        addRecordList(searchResponseData.Response,outputMap);\n    }\n    if(searchResponseData.Records) {\n        addRecordList(searchResponseData.Records,outputMap);\n    }\n    \n}\n\nfunction addRecordList(recordList,outputMap) {\n    for(var i = 0; i < recordList.length; i++) {\n        var record = recordList[i];\n        \n        var typeSection = outputMap[record.Type];\n        if(!typeSection) {\n            typeSection = {};\n            outputMap[record.Type] = typeSection;\n        }\n        \n        //if there is already a record, just overwrite it. They should be the same.\n        typeSection[record.Id] = record;\n    }\n}","description":""}},"metaFileResponse":{"name":"metaFileResponse","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!selectedMetaFileId) return null;\n\nvar searchDef = {};\nsearchDef.search = \"meta_file\";\nsearchDef.id = selectedMetaFileId;\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n\n\n\n\n\n","supplementalCode":"","description":""}},"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!context) return null;\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"getRecord":{"name":"getRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordType","recordId"],"functionBody":"typeSection = recordStore[recordType];\nif(!typeSection) {\n    throw new Error(\"Type not found!\");\n}\n\nreturn typeSection[recordId];\n","supplementalCode":"","description":""}},"metaFileSelector":{"name":"metaFileSelector","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif((metaFileList)&&(metaFileList.success)) {\n    var metaFiles = {};\n    output.metaFiles = metaFiles;\n    \n    var metaFileRecords = metaFileList.data.Response;\n    for(var i = 0; i < metaFileRecords.length; i++) {\n        var record = metaFileRecords[i];\n        var fileTypeRecord = getRecord(\"file_type\",record.Fields.file_type_id);\n        var fileType = fileTypeRecord.Fields.file_type_name;\n        var metaName = record.Fields.name;\n        metaFiles[fileType + \":\" + metaName] = record.Id;\n    }\n}\n\noutput.currentMetaFileId = metaFileId;\n\nreturn output;","supplementalCode":"","description":""}},"INVALID_ID":{"name":"INVALID_ID","type":"apogee.JsonTable","updateData":{"data":0,"description":""}},"availableFileEntries":{"name":"availableFileEntries","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nvar recordStore = loadMetaFileRecords.recordStore;\nfor(var idString in recordStore.file_entry) {\n    var fileEntry = recordStore.file_entry[idString];\n    var fileTypeEntry = loadMetaFileRecords.getRecord(\"file_entry_type\",fileEntry.Fields.file_entry_type_id);\n    var entry = {};\n    entry.fileEntry = fileEntry;\n    entry.fileTypeEntry = fileTypeEntry;\n    entry.recipeEntry = existingRecipeEntries[idString];\n    output[idString] = entry;\n}\n\nreturn output;","supplementalCode":"","description":""}},"existingMetaFileEntry":{"name":"existingMetaFileEntry","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!loadMetaFileRecords.metaFileResponse) {\n    return false;\n}\n\nif(!loadMetaFileRecords.metaFileResponse.success) {\n    throw new Error(\"Meta File request error\");\n}\n\nif(loadMetaFileRecords.metaFileResponse.data.Response.length === 0) {\n    throw new Error(\"Meta file not found\");\n}\n\nreturn loadMetaFileRecords.metaFileResponse.data.Response[0];","supplementalCode":"","description":""}},"existingRecipeEntries":{"name":"existingRecipeEntries","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif(!metaFileResponse) {\n    return output;\n}\n\nif(!metaFileResponse.success) {\n    throw new Error(\"Error loading meta file records: \" + loadMetaFileRecords.meatFileResponse.msg);\n}\n\nreturn metaFileResponse.data.Records;\n\n// var metaFileRecords = metaFileResponse.data.Records;\n\n// for(var i = 0; i < metaFileRecords.length; i++) {\n//     var record = metaFileRecords[i];\n//     if(record.Type == \"recipe_entry\") {\n//         output[record.Fields.file_entry_id] = record;\n//     }\n// }\n\n// return output;","supplementalCode":"","description":""}},"storeDataFlag":{"name":"storeDataFlag","type":"apogee.JsonTable","updateData":{"data":false,"description":""}},"taskResult":{"name":"taskResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif(!dataLoadSuccess) {\n    output.state = \"INCOMPLETE\";\n}\nelse if(dataLoadSuccess.success === true) {\n    output.state = \"SUCCESS\";\n    data = {};\n    data.existingMetaFileEntry = existingMetaFileEntry;\n    data.existingRecipeEntries = existingRecipeEntries;\n    data.fileType = fileType;\n    output.data = data;\n}\nelse if(dataLoadErrors.success === false) {\n    output.state = \"ERROR\";\n    output.msg = dataLoadErrors.msg;\n}\n\nif(storeDataFlag) {\n    var updateInfo = [];\n    updateInfo.push([\"taskResults.loadMetaFileRecords\",output]);\n    updateInfo.push([\"storeDataFlag\",false]);\n    apogeeMessenger.compoundDataUpdate(updateInfo);\n}\n\nreturn output;\n\n","supplementalCode":"","description":""}},"dataLoadSuccess":{"name":"dataLoadSuccess","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if((!fileTypeList)&&(!metaFileList)) {\n    return null;\n}\n\nvar output = {};\n\nerrors = [];\nif(fileTypeEntryList.success !== true) {\n    errors.push(fileTypeEntryList.msg);\n}\nif(metaFileList.success !== true) {\n    errors.push(metaFileResponse.msg);\n}\n\nif(errors.length > 0) {\n    output.success = false;\n    output.msg = errors.join(\"; \");\n}\nelse {\n    output.success = true;\n}\n\nreturn output;","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(taskResults.loadContext.state == \"SUCCESS\") {\n    return taskResults.loadContext.data.context;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(taskResults.login.state == \"SUCCESS\") {\n    return taskResults.login.data.sessionKey;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"selectedMetaFileId":{"name":"selectedMetaFileId","type":"apogee.JsonTable","updateData":{"data":1,"description":""}},"fileType":{"name":"fileType","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var fileTypeRecord;\n\nif(existingMetaFileEntry) {\n    fileTypeRecord = getRecord(\"file_type\",existingMetaFileEntry.Fields.file_type_id);\n}\n\nif(fileTypeRecord) {\n    return fileTypeRecord.Fields.file_type_name;\n}\nelse {\n    return INVALID_ID;\n}","supplementalCode":"","description":""}}}},"loadContext":{"name":"loadContext","type":"apogee.Folder","children":{"contextControl":{"name":"contextControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return null;","supplementalCode":"","description":""}}}},"fileReconstruct":{"name":"fileReconstruct","type":"apogee.Folder","children":{"createRecordStructure":{"name":"createRecordStructure","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if((!taskResults.loadMetaFileRecords)||(taskResults.loadMetaFileRecords.state != \"SUCCESS\")) return null;\n\nvar output = {};\noutput.metaFile = taskResults.loadMetaFileRecords.data.existingMetaFileEntry;\n\nvar entryList = [];\noutput.entryList = entryList;\n\nvar recipeList = taskResults.loadMetaFileRecords.data.existingRecipeEntries;\nfor(var i = 0; i < recipeList.length; i++) {\n    var recipeRecord = recipeList[i];\n    \n    var fileEntryId = recipeRecord.Fields.file_entry_id;\n    var fileEntryRecord = tasks.loadMetaFileRecords.getRecord(\"file_entry\",fileEntryId);\n    \n    var fileEntryTypeId = fileEntryRecord.Fields.file_entry_type_id;\n    var fileEntryTypeRecord = tasks.loadMetaFileRecords.getRecord(\"file_entry_type\",fileEntryTypeId);\n\n    var combinedEntry = {};\n    combinedEntry.fileEntryType = fileEntryTypeRecord;\n    combinedEntry.fileEntry = fileEntryRecord;\n    combinedEntry.recipeEntry = recipeRecord;\n    entryList.push(combinedEntry);\n}\n\nreturn output;\n\n\n","supplementalCode":"","description":""}},"newFile":{"name":"newFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return reconstructFile(fileType,createRecordStructure);","supplementalCode":"","description":""}},"reconstruct":{"name":"reconstruct","type":"apogee.Folder","children":{"themeMap":{"name":"themeMap","type":"apogee.Folder","children":{"initialize":{"name":"initialize","type":"apogee.FunctionTable","updateData":{"argList":["output"],"functionBody":"var workingData = {};\nworkingData.storedEntries = {};\nworkingData.sectionMap = {};\n\nreturn workingData;","supplementalCode":"","description":""}},"processEntry":{"name":"processEntry","type":"apogee.FunctionTable","updateData":{"argList":["output","metaFile","recipeEntry","fileEntry","fileEntryType","workingData"],"functionBody":"//----------------\n//load the section\n//----------------\nvar priority = recipeEntry.Fields.insertion_info.priority;\nvar sectionName = fileEntryType.Fields.section[0];\n\nvar workingSection = workingData.sectionMap[sectionName];\nif(!workingSection) {\n    workingSection = {};\n    workingData.sectionMap[sectionName] = workingSection;\n}\n\nvar prioritySection = workingSection[priority];\nif(!prioritySection) {\n    prioritySection = {};\n    prioritySection.priority = priority;\n    prioritySection.ks = [];\n    workingSection[priority] = prioritySection;\n}\n\n//------------------------\n//create this themeMap entry\n//------------------------\n\nvar entryData = fileEntry.Fields.entry_data;\n\nif(fileEntryType.Fields.entry_type == \"default\") {\n    //non theme entry - default entry\n    addPayload(entryData,prioritySection);\n}\nelse {\n    //normal key or value entry\n    var themeMapEntry = {};\n    \n    var parentThemeMapEntry = null;\n    var parentFileEntryTypeId = fileEntryType.Fields.entry_parent_id;\n    if(parentFileEntryTypeId) {\n        var parentThemeMapEntry = getThemeMapEntry(workingData,sectionName,priority,parentFileEntryTypeId);\n        if(!parentThemeMapEntry) {\n            //throw new Error(\"parent entry not found!: \" + sectionName + \":\" + priority + \":\" + parentFileEntryTypeId);\n            console.log(\"parent entry not found!: \" + sectionName + \":\" + priority + \":\" + parentFileEntryTypeId);\n            return;\n        }\n    }\n    \n    if(fileEntryType.Fields.entry_type == \"value\") {\n        //value entry\n        var value = fileEntryType.Fields.entry_value;\n        addValueToParentThemeMapEntry(parentThemeMapEntry,themeMapEntry,value);\n    }\n    else {\n        //key entry\n        \n        //add the key\n        themeMapEntry[fileEntryType.Fields.entry_type] = fileEntryType.Fields.entry_value;\n\n        //add the entry to the parent or the base of the section\n        if(parentThemeMapEntry) {\n            addKeyToParentThemeMapEntry(parentThemeMapEntry,themeMapEntry);\n        }\n        else {\n            prioritySection.ks.push(themeMapEntry);\n        }\n    }\n    \n    addPayload(entryData,themeMapEntry);\n    \n    storeThemeMapEntry(workingData,sectionName,priority,fileEntryType.Id,themeMapEntry);\n}\n","supplementalCode":"function getThemeMapEntry(workingData,sectionName,priority,fileEntryTypeId) {\r\n    var lookupKey = getLookupKey(sectionName,priority,fileEntryTypeId);\r\n    return workingData.storedEntries[lookupKey];\r\n}\r\n\r\nfunction storeThemeMapEntry(workingData,sectionName,priority,fileEntryTypeId,entry) {\r\n    var lookupKey = getLookupKey(sectionName,priority,fileEntryTypeId);\r\n    workingData.storedEntries[lookupKey] = entry;\r\n}\r\n\r\nfunction getLookupKey(sectionName,priority,fileEntryTypeId) {\r\n    return sectionName + \"|\" + priority + \"|\" + fileEntryTypeId;\r\n}\r\n\r\nfunction addKeyToParentThemeMapEntry(parentThemeMapEntry,themeMapEntry) {\r\n    var keyList = parentThemeMapEntry.ks;\r\n    if(!keyList) {\r\n        keyList = [];\r\n        parentThemeMapEntry.ks = keyList;\r\n    }\r\n    keyList.push(themeMapEntry);\r\n}\r\n\r\nfunction addValueToParentThemeMapEntry(parentThemeMapEntry,themeMapEntry,value) {\r\n    var valueSet = parentThemeMapEntry.v;\r\n    if(!valueSet) {\r\n        valueSet = {};\r\n        parentThemeMapEntry.v = valueSet;\r\n    }\r\n    valueSet[value] = themeMapEntry;\r\n}\r\n\r\nfunction addPayload(entryData,themeMapEntry) {\r\n    for(var key in entryData) {\r\n        themeMapEntry[key] = entryData[key];\r\n    }\r\n}","description":""}},"postProcessFile":{"name":"postProcessFile","type":"apogee.FunctionTable","updateData":{"argList":["outFile","workingData"],"functionBody":"outFile.ft = \"ThemeMap\";\n\nfor(var sectionName in workingData.sectionMap) {\n    var sectionArray = [];\n    outFile[sectionName] = sectionArray;\n    \n    var priorityMap = workingData.sectionMap[sectionName];\n    for(var priorityString in priorityMap) {\n        sectionArray.push(priorityMap[priorityString]);\n    }\n}\n","supplementalCode":"","description":""}}}},"theme":{"name":"theme","type":"apogee.Folder","children":{"initialize":{"name":"initialize","type":"apogee.FunctionTable","updateData":{"argList":["outFile"],"functionBody":"return {\"iurl\":null};","supplementalCode":"","description":""}},"processEntry":{"name":"processEntry","type":"apogee.FunctionTable","updateData":{"argList":["output","metaFile","recipeEntry","fileEntry","fileEntryType","workingData"],"functionBody":" \r\n//load the theme section\r\nvar themeSectionName = fileEntryType.Fields.section[0];\r\nvar themeSectionLabel = sectionMap[themeSectionName];\r\n\r\nvar themeSection = output[themeSectionLabel];\r\nif(themeSection === undefined) {\r\n    themeSection = {};\r\n    output[themeSectionLabel] = themeSection;\r\n}\r\n\r\nvar entryData = fileEntry.Fields.entry_data;\r\n\r\n//update the iurl field\r\nif(themeSectionLabel == \"i\") {\r\n    //we need to pull out the relative url\r\n    var entryIUrl = getUrlBaseFromIconUrl(entryData.url);\r\n    var entryRUrl = getRelativeUrlfromIconUrl(entryData.url);\r\n    if(workingData.iurl === null) {\r\n        workingData.iurl = entryIUrl;\r\n    }\r\n    else {\r\n        if(workingData.iurl != entryIUrl) {\r\n            throw new Error(\"This implementation does not support different base urls for icons. Fix this.\");\r\n        }\r\n    }\r\n    \r\n    entryData = apogee.util.deepJsonCopy(entryData);\r\n    delete entryData.url;\r\n    entryData.rurl = entryRUrl;\r\n}\r\n\r\n//add the entry\r\nvar key = fileEntryType.Fields.entry_value;\r\nif(themeSection[key] !== undefined) {\r\n    throw new Error(\"Multiple entries with the given key: \" + key + \", section: \" + themeSectionLabel);\r\n}\r\n\r\nthemeSection[key] = entryData;\r\n","supplementalCode":"function getUrlBaseFromIconUrl(url) {\n    var index = url.lastIndexOf(\"/\");\n    return url.substr(0,index+1);\n}\n\nfunction getRelativeUrlfromIconUrl(url) {\n    var index = url.lastIndexOf(\"/\");\n    return url.substr(index+1);\n}","description":""}},"sectionMap":{"name":"sectionMap","type":"apogee.JsonTable","updateData":{"data":{"icon":"i","style":"s","labelStyle":"l","marker":"m"},"description":""}},"postProcessFile":{"name":"postProcessFile","type":"apogee.FunctionTable","updateData":{"argList":["outFile","workingData"],"functionBody":"if(workingData.iurl !== null) {\r\n    outFile.iurl = workingData.iurl;\r\n}","supplementalCode":"","description":""}}}},"strings":{"name":"strings","type":"apogee.Folder","children":{"processEntry":{"name":"processEntry","type":"apogee.FunctionTable","updateData":{"argList":["output","metaFile","recipeEntry","fileEntry","fileEntryType","workingData"],"functionBody":" \r\nvar outputSection = output.translations;\r\n\r\nvar lang = fileEntryType.Fields.section[0];\r\nvar key = fileEntryType.Fields.entry_value;\r\nvar displayString = fileEntry.Fields.entry_data.trans;\r\n\r\nvar entry = outputSection[key];\r\nif(entry === undefined) {\r\n    entry = {};\r\n    outputSection[key] = entry\r\n}\r\n\r\nentry[lang] = displayString;\r\n","supplementalCode":"","description":""}},"initialize":{"name":"initialize","type":"apogee.FunctionTable","updateData":{"argList":["output"],"functionBody":"output.translations = {};","supplementalCode":"","description":""}}}},"inputColors":{"name":"inputColors","type":"apogee.Folder","children":{"processEntry":{"name":"processEntry","type":"apogee.FunctionTable","updateData":{"argList":["output","metaFile","recipeEntry","fileEntry","fileEntryType","workingData"],"functionBody":"\nvar color = fileEntryType.Fields.entry_value;\nvar entryData = fileEntry.Fields.entry_data;\n\noutput[color] = entryData;","supplementalCode":"","description":""}}}},"propertyRules":{"name":"propertyRules","type":"apogee.Folder","children":{"processEntry":{"name":"processEntry","type":"apogee.FunctionTable","updateData":{"argList":["output","metaFile","recipeEntry","fileEntry","fileEntryType","workingData"],"functionBody":"var entryData = fileEntry.Fields.entry_data;\nvar newProperties = convertProperties(entryData.properties,workingData);\n\n//----------------\n//load the section\n//----------------\n\nvar sectionName = fileEntryType.Fields.section;\nif(sectionName == \"named_entries\") {\n    //handle named entries\n    var parentSectionName;\n    var isGroup;\n    var entryValue = fileEntryType.Fields.entry_value;\n    if((entryValue == \"address keys\")||(entryValue == \"lang\")) {\n        parentSectionName = \"named_keys\";\n        isGroup = false;\n    }\n    else {\n        parentSectionName = \"named_groups\";\n        isGroup = true;\n    }\n    \n    var parentSection = output[parentSectionName];\n    if(!parentSection) {\n        parentSection = {};\n        output[parentSectionName] = parentSection;\n    }\n    \n    if(isGroup) {\n        parentSection[entryValue] = newProperties;\n    }\n    else {\n        parentSection[entryValue] = newProperties[0];\n    }\n    \n    \n}\nelse {\n    //handle generic entries\n    if(output[sectionName] === undefined) {\n        output[sectionName] = newProperties;\n    }\n    else {\n        //throw new Error(\"Wasn't expecting another entry!\");\n    }\n}\n\n","supplementalCode":"function convertProperties(oldProperties,workingData) {\n    var newProperties = [];\n    \n    for(var i = 0; i < oldProperties.length; i++) {\n        var oldProperty = oldProperties[i];\n        \n        var newProperty = convertProperty(oldProperty);\n        \n        if(newProperty) {\n            newProperties.push(newProperty);\n        }\n    }\n    \n    return newProperties;\n}\n\nfunction convertProperty(oldProperty,workingData) {\n    if(oldProperty.input != \"type\") {\n        //striaght conversion\n        var newProperty = {};\n        for(var oldTag in oldProperty) {\n            if(oldTag != \"named_entry\") {\n                //change tag if in the property tag map\n                var newTag = propertyTagMap[oldTag];\n                if(newTag === undefined) newTag = oldTag;\n                \n                newProperty[newTag] = oldProperty[oldTag];\n            }\n            else {\n                //change named entry to named group or key\n                var namedEntry = oldProperty.named_entry;\n                var dest = namedEntryMap[namedEntry];\n                if(dest === undefined) dest = \"named_group\";\n                \n                newProperty[dest] = namedEntry;\n            }\n        }\n        \n        return newProperty;\n    }\n    else {\n        return null;\n    }\n}\n    \n    \n//     if(sectionName == \"geometry\") {\n//         //hndle geom - map to multikey\n//         if(output[sectionName] === undefined) {\n//             var newProperties = apogee.util.deepJsonCopy(properties);\n//             newProperties.shift();\n//             var geomTypeEntry = {\n//                 \"k\": \"geom_type\",\n//     \t\t\t\"input\": \"multikey\",\n//     \t\t\t\"required\": true,\n//     \t\t\t\"ks\":[]\n//             }\n//             newProperties.unshift(geomTypeEntry);\n//             output[sectionName] = newProperties;\n            \n//             //still need to add object = true!!!\n//             //applyGeomEntry(...);\n//         }\n//         else {\n            \n//         }\n//     }\n//     else if(sectionName == \"link\") {\n//         //handle links - map to multi key\n//         if(output[sectionName] === undefined) {\n//             var newProperties = apogee.util.deepJsonCopy(properties);\n//             newProperties.shift();\n//             var navClassEntry = {\n//                 \"k\": \"nav_class\",\n//     \t\t\t\"input\": \"multikey\",\n//     \t\t\t\"required\": true,\n//     \t\t\t\"prop\": {\n//     \t\t\t    \"linkType\": \"class\"\n//     \t\t\t},\n//     \t\t\t\"ks\":[]\n//             }\n//             newProperties.unshift(navClassEntry);\n//             output[sectionName] = newProperties;\n//         }\n//         else {\n            \n//         }\n//     }\n// }","description":""}},"initialize":{"name":"initialize","type":"apogee.FunctionTable","updateData":{"argList":["outFile"],"functionBody":"return {\"storedEntries\":{}};","supplementalCode":"","description":""}},"propertyTagMap":{"name":"propertyTagMap","type":"apogee.JsonTable","updateData":{"data":{"key":"k","value":"fixed_value","values":"v"},"description":""}},"namedEntryMap":{"name":"namedEntryMap","type":"apogee.JsonTable","updateData":{"data":{"address key":"named_key","lang":"named_key"},"description":""}}}}}},"fileType":{"name":"fileType","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if((!taskResults.loadMetaFileRecords)||(taskResults.loadMetaFileRecords.state != \"SUCCESS\")) return null;\n\nreturn taskResults.loadMetaFileRecords.data.fileType;","supplementalCode":"","description":""}},"reconstructFile":{"name":"reconstructFile","type":"apogee.FunctionTable","updateData":{"argList":["fileType","createRecordStructure"],"functionBody":"var output = {};\n\nvar metaFileRecord = createRecordStructure.metaFile;\nvar metaFileEntryList = createRecordStructure.entryList;\n\nvar processor = reconstruct[fileType];\n\n//output.nm = metaFileRecord.Fields.name;\n//output.ft = \"thm5xxxxxx\";\n\n//initialize, and load working data if applicable\nvar workingData;\nif(processor.initialize) {\n    workingData = processor.initialize(output);    \n}\n\n//process each entry\nfor(var i = 0; i < metaFileEntryList.length; i++) {\n    //get an entry\n    var metaFileEntry = metaFileEntryList[i];\n    var recipeEntry = metaFileEntry.recipeEntry;\n    var fileEntry = metaFileEntry.fileEntry;\n    var fileEntryType = metaFileEntry.fileEntryType;\n    \n    processor.processEntry(output,metaFileRecord,recipeEntry,fileEntry,fileEntryType,workingData);\n}\n\n//post process, if applicable\nif(processor.postProcessFile) {\n    processor.postProcessFile(output,workingData);\n}\n\nreturn output;","supplementalCode":"","description":""}}}}}},"micemetarDataAccess":{"name":"micemetarDataAccess","type":"apogee.Folder","children":{"createRecord":{"name":"createRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordInfo","fieldMap"],"functionBody":"var record = {};\n\nrecord.Id = getId();\nrecord.Type = recordInfo.name;\nrecord.Fields = fieldMap;\nrecord.read_perm = READ_PERM;\nrecord.edit_perm = EDIT_PERM;\n\nreturn record;","supplementalCode":"var READ_PERM = 2;\nvar EDIT_PERM = 15;\n\nvar nextId = -1;\n\nfunction getId() {\n    return nextId--;\n}","description":"This method creates a record given the field values and record info \nfrom the data set info. It creates and ID and uses standard permissions."}},"recordsToCreateInstructions":{"name":"recordsToCreateInstructions","type":"apogee.FunctionTable","updateData":{"argList":["recordList"],"functionBody":"var instructions = [];\n\nfor(var i = 0; i < recordList.length; i++) {\n    var createRecord = recordList[i];\n    var instruction = createCreateInstruction(createRecord);\n    instructions.push(instruction);\n}\n\nreturn instructions;","supplementalCode":"","description":"This creates a list of create instructions to go along with a list of records to be created.\n\nThere is the option to assign the ID or to leave it as undefined, in which case\nan automatically incremented ID will be assigned. (For consistency in the data\nset, either all records should be preassigned or all records should be \nautomatically assigned."}},"createCommitBody":{"name":"createCommitBody","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage"],"functionBody":"var commit = {};\nvar actions = [];\n\nif(commitMessage.length === 0) throw new Error(\"Commit message missing!\");\n\ncommit.Name = dataSetInfo.name;\ncommit.Message = commitMessage;\ncommit.Actions = actions;\n\n//single action with commits\nvar action = {};\naction.Title = \"bulk create commit\";\naction.Instr = instructionList;\nactions.push(action);\n\nreturn commit","supplementalCode":"","description":"This creates a body for a commit request, given a list of instructions and a commit message."}},"createRequestOptions":{"name":"createRequestOptions","type":"apogee.FunctionTable","updateData":{"argList":["bodyJson","sessionKey"],"functionBody":"var header = {};\nheader[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\nheader.sessionKey = sessionKey;\nheader[\"proto-version\"] = \"4.0\";\nheader[\"db-version\"] = dataSetInfo.version;\n\nrequestInfo = {};\nrequestInfo.header = header;\nif(bodyJson) {\n    requestInfo.method = \"POST\";\n    requestInfo.body = JSON.stringify(bodyJson);\n}\n\nreturn requestInfo;\n","supplementalCode":"","description":"This creates the requestOptions, suitable for apogee.net.jsonRequest, to go with an type of request to the workingset (micemetarequest) server."}},"host":{"name":"host","type":"apogee.JsonTable","updateData":{"data":"http://localhost:8080/micemetarws","description":""}},"commitUrl":{"name":"commitUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/commit\";\nreturn value;\n\n","supplementalCode":"","description":""}},"requestUrl":{"name":"requestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/cannedsearch\";\nreturn value;\n\n","supplementalCode":"","description":""}},"dataSetInfo":{"name":"dataSetInfo","type":"apogee.JsonTable","updateData":{"data":{"records":{"file_entry_type":{"idField":"file_entry_type_id","name":"file_entry_type","foreignList":[{"remoteRecord":"file_entry","name":"file_entry_list","isUnique":false,"remoteField":"file_entry_type_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"section","nullOk":true,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_value","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileEntryType"},"file_entry_relation":{"idField":"file_entry_rel_id","name":"file_entry_relation","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"ref_entry_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntryType"},{"defaultValue":null,"name":"relation_type","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileEntryRelation"},"com_file_entry":{"idField":"com_file_entry_id","name":"com_file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"com_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.ComFile"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_group","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFileEntry"},"file_type":{"idField":"file_type_id","name":"file_type","foreignList":[{"remoteRecord":"file_entry_type","name":"file_entry_type_list","isUnique":false,"remoteField":"file_type_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_name","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileType"},"file_entry":{"idField":"file_entry_id","name":"file_entry","foreignList":[{"remoteRecord":"file_entry_relation","name":"file_entry_ref_list","isUnique":false,"remoteField":"file_entry_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"file_entry_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntryType"},{"defaultValue":null,"name":"entry_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"option_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_data","nullOk":false,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.FileEntry"},"recipe_entry":{"idField":"recipe_entry_id","name":"recipe_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"insertion_info","nullOk":true,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.RecipeEntry"},"com_file":{"idField":"com_file_id","name":"com_file","foreignList":[{"remoteRecord":"com_file_entry","name":"com_file_entry_list","isUnique":false,"remoteField":"com_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"ref","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFile"},"meta_file":{"idField":"meta_file_id","name":"meta_file","foreignList":[{"remoteRecord":"recipe_entry","name":"recipe_entry_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"},{"remoteRecord":"meta_ref_entry","name":"base_file_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.MetaFile"},"meta_ref_entry":{"idField":"meta_ref_entry_id","name":"meta_ref_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"base_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"}],"recordClass":"com.micello.micemetar.data.MetaRefEntry"}},"name":"Micemetar","version":"5.0"},"description":""}},"version":{"name":"version","type":"apogee.JsonTable","updateData":{"data":"1.6","description":""}},"createUpdateInstruction":{"name":"createUpdateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["initialRecord","targetRecord"],"functionBody":"if(initialRecord.Id != targetRecord.Id) {\n    throw new Error(\"Record ID mismatch in create update instruction for target record: \" + getRecordErrString(targetRecord));\n}\n\nif(initialRecord.Type != targetRecord.Type) {\n    throw new Error(\"Inital and target record types do not match. Target record: \" + getRecordErrString(targetRecord));\n}\n\nvar recordsDifferent = false;\n\nvar recordInfo = getRecordInfo(initialRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Update\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = initialRecord.Id;\n\ninstruction.initialReadPerm = initialRecord.read_perm;\ninstruction.initialEditPerm = initialRecord.edit_perm;\n\nif(initialRecord.readPerm != targetRecord.readPerm) {\n    instruction.targetReadPerm = targetRecord.read_perm;\n    recordsDifferent = true;\n}\n\nif(initialRecord.editPerm != targetRecord.editPerm) {\n    instruction.targetEditPerm = targetRecord.edit_perm;\n    recordsDifferent = true;\n}\n\nvar initialData = {};\ninstruction.Initial = initialData;\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    \n    var initialValue;\n    var targetValue;\n    \n    var initialValue = initialRecord.Fields[field.name];\n    var targetValue = targetRecord.Fields[field.name];\n    \n    //validate target values\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n        }\n    }\n    \n    if(!fieldsMatch(initialValue,targetValue,field)) {\n        initialData[field.name] = initialValue;\n        targetData[field.name] = targetValue;\n        recordsDifferent = true;\n    }\n}\n\nif(recordsDifferent) {\n    return instruction;\n}\nelse {\n    return null;\n}\n","supplementalCode":"function fieldsMatch(initialValue,targetValue,fieldInfo) {\n    if(fieldInfo.fieldClass === \"java.lang.String\") {\n        //compare strings with \"==\"\n        return (initialValue == targetValue);\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"java.lang\")) {\n        //compare other basic values with \"===\"\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"com.micello\")) {\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONObject\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONArray\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else {\n        throw new Error(\"unrecognized field type: \" + fieldInfo.fieldClass);\n    }\n}\n\nfunction compareJsonData(a,b) {\n    var an = apogee.util.getNormalizedObjectCopy(a);\n    var bn = apogee.util.getNormalizedObjectCopy(b);\n    var aString = JSON.stringify(an);\n    var bString = JSON.stringify(bn);\n    return aString == bString;\n}\n    ","description":"This function creates an update instruction given an initial and target record. If the records are the same then NULL is returned. (No update is needed.)"}},"createCreateInstruction":{"name":"createCreateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["createRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(createRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Create\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = createRecord.Id;\n\ninstruction.targetReadPerm = createRecord.read_perm;\ninstruction.targetEditPerm = createRecord.edit_perm;\n\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var targetValue;\n    var targetValue = createRecord.Fields[field.name];\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecord,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecord,field));\n        }\n    }\n    \n    targetData[field.name] = targetValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getFieldErrString":{"name":"getFieldErrString","type":"apogee.FunctionTable","updateData":{"argList":["record","fieldInfo"],"functionBody":"return getRecordErrString(record) + \" - \" + fieldInfo.name;","supplementalCode":"","description":""}},"getRecordErrString":{"name":"getRecordErrString","type":"apogee.FunctionTable","updateData":{"argList":["record"],"functionBody":"return record.Type + \" \" + record.Id;","supplementalCode":"","description":""}},"createDeleteInstruction":{"name":"createDeleteInstruction","type":"apogee.FunctionTable","updateData":{"argList":["deleteRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(deleteRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Delete\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = deleteRecord.Id;\n\ninstruction.initialReadPerm = deleteRecord.read_perm;\ninstruction.initialEditPerm = deleteRecord.edit_perm;\n\nvar initialData = {};\ninstruction.Initial = initialData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var initialValue = deleteRecord.Fields[field.name];\n    \n    initialData[field.name] = initialValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getRecordInfo":{"name":"getRecordInfo","type":"apogee.FunctionTable","updateData":{"argList":["recordType"],"functionBody":"var recordInfo = dataSetInfo.records[recordType];\n\nif(!recordInfo) {\n    throw new Error(\"Record type not found in getRecordInfo: \" + recordType);\n}\n\nreturn recordInfo;","supplementalCode":"","description":""}},"combinedEntriesToInstructionList":{"name":"combinedEntriesToInstructionList","type":"apogee.FunctionTable","updateData":{"argList":["combinedEntries"],"functionBody":"var output = [];\nfor(var key in combinedEntries) {\n    var entry = combinedEntries[key];\n    var instruction = getInstructionForCombinedEntry(entry);\n    if(instruction) {\n        output.push(instruction);\n    }\n}\n\nreturn output;","supplementalCode":"function getInstructionForCombinedEntry(combinedEntry) {\n    var newEntry = combinedEntry.newEntry;\n    var oldEntry = combinedEntry.oldEntry;\n    \n    if(newEntry) {\n        if(!oldEntry) {\n            console.log(\"Create: \" + newEntry.Id);\n            return createCreateInstruction(newEntry);\n        }\n        else {\n            //this will return null for matching records\n            console.log(\"Update(maybe): \" + newEntry.Id);\n            return createUpdateInstruction(oldEntry,newEntry);\n        }\n    }\n    else if(oldEntry) {\n        console.log(\"Delete: \" + oldEntry.Id);\n        return createDeleteInstruction(oldEntry);\n    }\n    \n    return null;\n}\n\nfunction entriesDifferent(entry1,entry2) {\n    var string1 = JSON.stringify(apogee.util.getNormalizedCopy(entry1));\n    var string2 = JSON.stringify(apogee.util.getNormalizedCopy(entry2));\n    return (string1 == string2);\n}","description":"This function takes a combined entry map of the format:\n\n{\n  \"some-identifier\":{\n    \"oldEntry\":{original record entry, if applicable},\n    \"newEntry\":{new record entry, if applicable}\n  },\n  ...\n}\n\nIt returns an instruction list.\n\n"}},"getCommitPromise":{"name":"getCommitPromise","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage","sessionKey"],"functionBody":"var commitBody = createCommitBody(instructionList,commitMessage);\nvar requestOptions = createRequestOptions(commitBody,sessionKey);\nvalue = apogee.net.jsonRequest(commitUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}},"getRequestPromise":{"name":"getRequestPromise","type":"apogee.FunctionTable","updateData":{"argList":["requestBody","sessionKey"],"functionBody":"var requestOptions = createRequestOptions(requestBody,sessionKey);\nvalue = apogee.net.jsonRequest(requestUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}}}}}}},"components":{"taskResults":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":34,"y":95}},"children":{"loadMetaFileRecords":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":421,"height":601},"posInfo":{"x":68,"y":37},"state":0,"viewType":"JSON"}},"login":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":743,"height":276},"posInfo":{"x":599,"y":199},"state":0,"viewType":"Text"}},"loadContext":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":335,"height":125},"posInfo":{"x":62,"y":110},"state":0,"viewType":"Text"}}}},"tasks":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":37,"y":37}},"children":{"login":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":79,"y":21}},"children":{"loginUrl":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":463,"height":86},"posInfo":{"x":26,"y":27},"state":0,"viewType":"Text"}},"loginControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":404,"height":129},"posInfo":{"x":28,"y":148},"state":0,"viewType":"Output"},"resource":{"html":"","css":"","setData":"this.loginUrl = data;","constructorAddition":"\n\n//this uses the updated version of test authorization that takes and returns a JSON\nthis.onClick = function() {\n    \n    //on click\n    var bodyJson = {};\n    bodyJson.userName = resource.userInput.value;\n    bodyJson.password = resource.passwordInput.value;\n    \n    //cleaer password field\n    resource.passwordInput.value = \"\";\n    \n    var options = {};\n    options.body = JSON.stringify(bodyJson);\n    options.method = \"POST\";\n    \n    var requestPromise = apogee.net.jsonRequest(this.loginUrl,options);\n    \n    //set the response\n    mode.getMessenger().asynchDataUpdate(\"sessionResponse\",requestPromise);\n}","init":"\nvar label1 = document.createElement(\"label\");\nlabel1.for = \"userInput\";\nlabel1.innerHTML = \"User:\"\nelement.appendChild(label1);\n\nvar input1 = document.createElement(\"input\");\ninput1.id = \"userInput\";\nresource.userInput = input1;\nelement.appendChild(input1);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar label2 = document.createElement(\"label\");\nlabel2.for = \"passwordInput\";\nlabel2.innerHTML = \"Password:\"\nelement.appendChild(label2);\n\nvar input2 = document.createElement(\"input\");\ninput2.id = \"passwordInput\";\ninput2.type = \"password\";\nresource.passwordInput = input2;\nelement.appendChild(input2);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar button = document.createElement(\"button\");\nbutton.innerHTML = \"Login\";\nelement.appendChild(button);\n\nvar instance = this;\nbutton.onclick = function() {\n    instance.onClick();\n}\n\n\n"}},"sessionResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":697,"height":121},"posInfo":{"x":26,"y":306},"state":0,"viewType":"Text"}},"taskResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":711,"height":146},"posInfo":{"x":21,"y":452},"state":0,"viewType":"Text"}}}},"loadMetaFileRecords":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":76,"y":136}},"children":{"fileTypeList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":555,"height":325},"posInfo":{"x":296,"y":149},"state":-1,"viewType":"Text"}},"fileTypeEntryList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":742,"height":473},"posInfo":{"x":552,"y":196},"state":-1,"viewType":"Formula"}},"recordStore":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":1284,"height":549},"posInfo":{"x":390,"y":466},"state":-1,"viewType":"Formula"}},"metaFileResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":799,"height":449},"posInfo":{"x":551,"y":144},"state":-1,"viewType":"Formula"}},"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":560,"height":289},"posInfo":{"x":43,"y":170},"state":-1,"viewType":"Text"}},"getRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":488,"height":179},"posInfo":{"x":372,"y":396},"state":-1,"viewType":"Private"}},"metaFileSelector":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":341,"height":107},"posInfo":{"x":37,"y":283},"state":0,"viewType":"Output"},"resource":{"html":"<select id=\"load_metaFileSelect\"></select>\n<br><br>\n<input type=\"button\" value=\"Submit\" id=\"load_submitButton\"></input>\n<input type=\"button\" value=\"Cancel\" id=\"load_cancelButton\"></input>","onLoad":"this.selectMetaFileElement = document.getElementById(\"load_metaFileSelect\");\nthis.submitButton = document.getElementById(\"load_submitButton\");\nthis.cancelButton = document.getElementById(\"load_cancelButton\");\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmitClick();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancelClick();\n}\n\nthis.initialized = true;","setData":"if(!data) return;\nif(!this.initialized) return;\n\nvar INVALID_ID = 0;\n\napogeeapp.ui.removeAllChildren(this.selectMetaFileElement);\n\n//add a dummy entry\nvar option = document.createElement(\"option\");\noption.text = \"<none selected>\";\n\noption.value = INVALID_ID;\nif(INVALID_ID == data.currentMetaFileId) option.selected = true;\nthis.selectMetaFileElement.add(option);\n\nfor(var fileDesc in data.metaFiles) {\n    var id = data.metaFiles[fileDesc];\n    var option = document.createElement(\"option\");\n    option.text = fileDesc;\n    option.value = id;\n    if(id == data.currentMetaFileId) option.selected = true;\n    this.selectMetaFileElement.add(option);\n}\n","constructorAddition":"\nthis.onSubmitClick = function() {\n    \n    if(!this.selectMetaFileElement) {\n        alert(\"Error; UI not initialized\");\n        return;\n    }\n    \n    if(this.selectMetaFileElement.length === 0) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var selectedIdString = this.selectMetaFileElement.value;\n    if(!isFinite(selectedIdString)) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var metaFileId = Number(selectedIdString);\n    \n    //create the compound update\n    var updateInfo = [];\n    updateInfo.push([\"selectedMetaFileId\",metaFileId]);\n    updateInfo.push([\"storeDataFlag\",true]);\n    mode.getMessenger().compoundDataUpdate(updateInfo);\n}\n\nthis.onCancelClick = function() {\n    mode.getMessenger().dataUpdate(\"taskResults.loadContext\",\"\");\n}\n\n"}},"INVALID_ID":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":220,"height":70},"posInfo":{"x":29,"y":644},"state":0,"viewType":"Text"}},"availableFileEntries":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":690,"height":694},"posInfo":{"x":654,"y":40},"state":0,"viewType":"JSON"}},"existingMetaFileEntry":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":646,"height":259},"posInfo":{"x":877,"y":149},"state":-1,"viewType":"Text"}},"existingRecipeEntries":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":592,"height":452},"posInfo":{"x":904,"y":206},"state":-1,"viewType":"Formula"}},"storeDataFlag":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":233,"height":35},"posInfo":{"x":844,"y":455},"state":0,"viewType":"Text"}},"taskResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":944,"height":639},"posInfo":{"x":842,"y":537},"state":-1,"viewType":"Formula"}},"dataLoadSuccess":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":750,"height":448},"posInfo":{"x":550,"y":290},"state":-1,"viewType":"Text"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":268,"height":55},"posInfo":{"x":309,"y":8},"state":0,"viewType":"Text"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":259,"height":102},"posInfo":{"x":23,"y":14},"state":0,"viewType":"Text"}},"selectedMetaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":270,"height":102},"posInfo":{"x":18,"y":464},"state":0,"viewType":"Text"}},"fileType":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":541,"height":217},"posInfo":{"x":861,"y":266},"state":-1,"viewType":"Formula"}}}},"loadContext":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":82,"y":74}},"children":{"contextControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":394,"height":141},"posInfo":{"x":67,"y":55},"state":0,"viewType":"Output"},"resource":{"html":"Context: <input type=\"text\" id=\"context_text\"></input>\n<br><br>\n<input type=\"button\" id=\"context_submit\" value=\"Submit\"></input>\n<input type=\"button\" id=\"context_newlogin\" value=\"New Login\"></input>","onLoad":"this.textInput = document.getElementById(\"context_text\");\nthis.submitButton = document.getElementById(\"context_submit\");\nthis.newLoginButton = document.getElementById(\"context_newlogin\");\nthis.initialized = true;\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmit();\n}\nthis.newLoginButton.onclick = function() {\n    instance.onNewLogin();\n}","constructorAddition":"this.textInput = null;\nthis.submitButton = null;\nthis.newLogingButton = null;\nthis.initialized = false;\n\nthis.onSubmit = function() {\n    if(!this.initialized) return;\n    \n    var context = this.textInput.value.trim();\n    if(context.length === 0) {\n        alert(\"Invalid context value.\");\n        return;\n    }\n    \n    var output = {};\n    output.state = \"SUCCESS\";\n    output.data = {}\n    output.data.context = context;\n    \n    var messenger = mode.getMessenger();\n    messenger.dataUpdate(\"taskResults.loadContext\",output);\n}\n\nthis.onNewLogin = function() {\n    mode.getMessenger().dataUpdate(\"taskResults.login\",\"\");\n}"}}}},"fileReconstruct":{"type":"apogeeapp.app.FolderComponent","children":{"createRecordStructure":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":1044,"height":508},"posInfo":{"x":59,"y":216},"state":0,"viewType":"JSON"}},"newFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":597,"height":740},"posInfo":{"x":619,"y":29},"state":0,"viewType":"JSON"}},"reconstruct":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":367,"y":19}},"children":{"themeMap":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":93,"y":197}},"children":{"initialize":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":400},"posInfo":{"x":25,"y":25},"state":0,"viewType":"Code"}},"processEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":844,"height":675},"posInfo":{"x":55,"y":177},"state":0,"viewType":"Code"}},"postProcessFile":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":576,"height":400},"posInfo":{"x":687,"y":88},"state":0,"viewType":"Code"}}}},"theme":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":103,"y":150}},"children":{"initialize":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":400},"posInfo":{"x":25,"y":25},"state":0,"viewType":"Code"}},"processEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":834,"height":665},"posInfo":{"x":452,"y":74},"state":0,"viewType":"Code"}},"sectionMap":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":282,"height":137},"posInfo":{"x":1074,"y":25},"state":0,"viewType":"Text"}},"postProcessFile":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":580,"height":400},"posInfo":{"x":170,"y":281},"state":0,"viewType":"Code"}}}},"strings":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":92,"y":245}},"children":{"processEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":614,"height":239},"posInfo":{"x":27,"y":42},"state":0,"viewType":"Code"}},"initialize":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":76},"posInfo":{"x":34,"y":344},"state":0,"viewType":"Code"}}}},"inputColors":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":84,"y":303}},"children":{"processEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":790,"height":716},"posInfo":{"x":50,"y":50},"state":0,"viewType":"Code"}}}},"propertyRules":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":106,"y":97}},"children":{"processEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":915,"height":642},"posInfo":{"x":133,"y":121},"state":0,"viewType":"Private"}},"initialize":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":385,"height":59},"posInfo":{"x":25,"y":25},"state":0,"viewType":"Code"}},"propertyTagMap":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":1099,"y":10},"state":0,"viewType":"Form"}},"namedEntryMap":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":1102,"y":378},"state":0,"viewType":"Form"}}}}}},"fileType":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":367,"height":36},"posInfo":{"x":55,"y":118},"state":0,"viewType":"Text"}},"reconstructFile":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":805,"height":579},"posInfo":{"x":165,"y":360},"state":0,"viewType":"Code"}}}}}},"micemetarDataAccess":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":216,"y":34}},"children":{"createRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":560,"height":321},"posInfo":{"x":32,"y":389},"state":-1,"viewType":"Code"}},"recordsToCreateInstructions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":834,"height":391},"posInfo":{"x":30,"y":472},"state":-1,"viewType":"Code"}},"createCommitBody":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":568,"height":400},"posInfo":{"x":629,"y":225},"state":-1,"viewType":"Code"}},"createRequestOptions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":523,"height":254},"posInfo":{"x":822,"y":379},"state":-1,"viewType":"Code"}},"host":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":353,"height":71},"posInfo":{"x":16,"y":6},"state":-1,"viewType":"Text"}},"commitUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":433,"height":107},"posInfo":{"x":14,"y":98},"state":-1,"viewType":"Text"}},"requestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":450,"height":68},"posInfo":{"x":14,"y":57},"state":-1,"viewType":"Formula"}},"dataSetInfo":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":882,"height":611},"posInfo":{"x":64,"y":664},"state":-1,"viewType":"JSON"}},"version":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":197,"height":91},"posInfo":{"x":523,"y":367},"state":0,"viewType":"Text"}},"createUpdateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":886,"height":655},"posInfo":{"x":36,"y":248},"state":-1,"viewType":"Code"}},"createCreateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":994,"height":643},"posInfo":{"x":35,"y":209},"state":-1,"viewType":"Code"}},"getFieldErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":512,"height":68},"posInfo":{"x":761,"y":616},"state":-1,"viewType":"Code"}},"getRecordErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":81},"posInfo":{"x":762,"y":664},"state":-1,"viewType":"Code"}},"createDeleteInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":678,"height":540},"posInfo":{"x":36,"y":289},"state":-1,"viewType":"Code"}},"getRecordInfo":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":480,"height":400},"posInfo":{"x":818,"y":427},"state":-1,"viewType":"Code"}},"combinedEntriesToInstructionList":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":721,"height":524},"posInfo":{"x":31,"y":516},"state":-1,"viewType":"Private"}},"getCommitPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":741,"height":400},"posInfo":{"x":374,"y":75},"state":-1,"viewType":"Code"}},"getRequestPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":810,"height":400},"posInfo":{"x":376,"y":28},"state":-1,"viewType":"Code"}}}}}}