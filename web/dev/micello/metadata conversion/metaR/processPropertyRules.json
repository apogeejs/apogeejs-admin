{"fileType":"apogee workspace","jsLinks":["http://localhost:8383/apogee/dev/micello/metadata%20conversion/lib/taskAppModule.js"],"cssLinks":[],"workspace":{"fileType":"apogee workspace","version":0.2,"data":{"name":"processPropertyRules","type":"apogee.Folder","children":{"tasks":{"name":"tasks","type":"apogee.Folder","children":{"login":{"name":"login","type":"apogee.Folder","children":{"loginUrl":{"name":"loginUrl","type":"apogee.JsonTable","updateData":{"data":"http://eng.micello.com/TestAuthorization/loginjson","description":""}},"loginControl":{"name":"loginControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return loginUrl;","supplementalCode":"","description":""}},"sessionResponse":{"name":"sessionResponse","type":"apogee.JsonTable","updateData":{"data":{"responseCode":1,"paramTable":[{"urlPattern":"http://eng.micello.com/mfs","params":[["key","S1sshnIV1Rk9EGz32Acrl8aSYsTKYd"]]},{"urlPattern":"http://mfs.micello.com","params":[["key","nS71TmmSmgvwcXlfrGrin38AMLP48B"]]},{"urlPattern":"http://factory-mfs.micello.com","params":[["key","yfZkszbELEy6lxz1sSeUZscJlC41hL"]]},{"urlPattern":"http://mfs-hub-master.micello.com/","params":[["key","pvLuRozg2EZVrpE8nCpCrQT0FOHcLh"]]},{"urlPattern":"http://mfs-us-1.micello.com","params":[["key","nS71TmmSmgvwcXlfrGrin38AMLP48B"]]},{"urlPattern":"http://eng.micello.com/mfs-node","params":[["key","dnSkxyrgxRNtGMUYbhgV8uvdPW1V4U"]]}],"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=1ed3kdsomgk7khf65oo9juudh3"},"description":""}},"taskResult":{"name":"taskResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\nvar sessionKey;\nif(sessionResponse) {\n    if(sessionResponse.responseCode === 1) {\n        data = {};\n        data.sessionKey = sessionResponse.sessionKey;\n        output.data = data;\n        taskAppModule.taskCompleted(apogeeMessenger,[\"login\"],[\"processMeta\",\"selectBaseContext\"],data);\n        return \"SUCCESS\";\n    }\n    else {\n        alert(\"There was an error: \" + JSON.stringify(sessionResponse));\n        return \"ERROR\";\n    }\n}\nelse {\n    return \"INCOMPLETE\";\n}","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=1ed3kdsomgk7khf65oo9juudh3"}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":[]},"description":""}}}},"completed":{"name":"completed","type":"apogee.Folder","children":{"resetControl":{"name":"resetControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":false,"data":null},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":false,"previousTask":null},"description":""}}}},"getSessionKey":{"name":"getSessionKey","type":"apogee.FunctionTable","updateData":{"argList":[],"functionBody":"if(login.result.valid) {\n    return login.result.data.sessionKey;\n}\nelse {\n    return null;\n}\n","supplementalCode":"","description":""}},"currentTask":{"name":"currentTask","type":"apogee.JsonTable","updateData":{"data":["processMeta","selectOverrideFile"],"description":""}},"getFileTypeName":{"name":"getFileTypeName","type":"apogee.FunctionTable","updateData":{"argList":["fileTypeId"],"functionBody":"return commonData.fileTypeIdToName[fileTypeId];","supplementalCode":"","description":""}},"commonData":{"name":"commonData","type":"apogee.Folder","children":{"fileTypeList":{"name":"fileTypeList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var sessionKey = getSessionKey();\nif(!sessionKey) return null;\n\nvar fileTypeSearch = {};\nfileTypeSearch.search = \"file_type_list\";\n\nreturn micemetarDataAccess.getRequestPromise(fileTypeSearch,sessionKey);\n\n","supplementalCode":"","description":""}},"fileTypeIdToName":{"name":"fileTypeIdToName","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!fileTypeList) return null;\n\nvar output = {};\n\nvar addToMap = (record) => {output[record.Id] = record.Fields.file_type_name;}\n\nfileTypeList.data.Response.forEach(addToMap);\n\nreturn output;","supplementalCode":"","description":""}},"fileTypeNameToId":{"name":"fileTypeNameToId","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!fileTypeList) return null;\n\nvar output = {};\n\nvar addToMap = (record) => {output[record.Fields.file_type_name] = record.Id;}\n\nfileTypeList.data.Response.forEach(addToMap);\n\nreturn output;","supplementalCode":"","description":""}}}},"getFileTypeId":{"name":"getFileTypeId","type":"apogee.FunctionTable","updateData":{"argList":["fileTypeName"],"functionBody":"return commonData.fileTypeNameToId[fileTypeName];","supplementalCode":"","description":""}},"processMeta":{"name":"processMeta","type":"apogee.Folder","children":{"selectOverrideFile":{"name":"selectOverrideFile","type":"apogee.Folder","children":{"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!context) return null;\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"metaFileSelector":{"name":"metaFileSelector","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif((commonData.fileTypeList)&&(commonData.fileTypeList.success)) {\n    var fileTypes = {};\n    output.fileTypes = fileTypes;\n    \n    var loadFileTypeEntry = (record) => { fileTypes[record.Fields.file_type_name] = record.Id };\n\n    var fileTypeRecords = commonData.fileTypeList.data.Response;\n    fileTypeRecords.forEach(loadFileTypeEntry);\n}\n\nif((metaFileList)&&(metaFileList.success)) {\n    var metaFiles = {};\n    output.metaFiles = metaFiles;\n    \n    var loadMetaFileEntry = (record) => {\n        var fileTypeName = getFileTypeName(record.Fields.file_type_id);\n        var metaName = record.Fields.name;\n        metaFiles[fileTypeName + \":\" + metaName] = record.Id;\n        console.log(record.Id);\n    }\n    \n    var metaFileRecords = metaFileList.data.Response;\n    metaFileRecords.forEach(loadMetaFileEntry);\n}\n\noutput.currentMetaFileId = metaFileId;\noutput.currentFileTypeId = fileTypeId;\noutput.editExisting = fileSelection ? fileSelection.editExisting : false;\n\nreturn output;","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectOverrideContext.result.valid) {\n    return selectOverrideContext.result.data.context;\n}\nelse {\n    return null;\n}\n","supplementalCode":"","description":""}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getSessionKey();\n","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"editExisting":true,"metaFileId":4990}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["processMeta","selectOverrideContext"]},"description":""}}}},"selectOverrideContext":{"name":"selectOverrideContext","type":"apogee.Folder","children":{"contextControl":{"name":"contextControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"context":"~schneiderelectric"}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["processMeta","selectBaseFile"]},"description":""}}}},"selectBaseFile":{"name":"selectBaseFile","type":"apogee.Folder","children":{"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!context) return null;\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"metaFileSelector":{"name":"metaFileSelector","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif((commonData.fileTypeList)&&(commonData.fileTypeList.success)) {\n    var fileTypes = {};\n    output.fileTypes = fileTypes;\n    \n    var loadFileTypeEntry = (record) => { fileTypes[record.Fields.file_type_name] = record.Id };\n\n    var fileTypeRecords = commonData.fileTypeList.data.Response;\n    fileTypeRecords.forEach(loadFileTypeEntry);\n}\n\nif((metaFileList)&&(metaFileList.success)) {\n    var metaFiles = {};\n    output.metaFiles = metaFiles;\n    \n    var loadMetaFileEntry = (record) => {\n        var fileTypeName = getFileTypeName(record.Fields.file_type_id);\n        var metaName = record.Fields.name;\n        metaFiles[fileTypeName + \":\" + metaName] = record.Id;\n    }\n    \n    var metaFileRecords = metaFileList.data.Response;\n    metaFileRecords.forEach(loadMetaFileEntry);\n}\n\noutput.currentMetaFileId = metaFileId;\noutput.currentFileTypeId = fileTypeId;\noutput.editExisting = fileSelection ? fileSelection.editExisting : false;\n\nreturn output;","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectBaseContext.result.valid) {\n    return selectBaseContext.result.data.context;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getSessionKey();\n","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"editExisting":true,"metaFileId":1}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["processMeta","selectBaseContext"]},"description":""}}}},"selectBaseContext":{"name":"selectBaseContext","type":"apogee.Folder","children":{"contextControl":{"name":"contextControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"context":"public"}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["login"]},"description":""}}}},"working":{"name":"working","type":"apogee.Folder","children":{"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getSessionKey();","supplementalCode":"","description":""}},"baseFileRequest":{"name":"baseFileRequest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!baseMetaFileId) return null;\n\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_full\";\nsearchDef.id = baseMetaFileId;\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n","supplementalCode":"","description":""}},"overrideFileRequest":{"name":"overrideFileRequest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!overrideMetaFileId) return null;\n\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_full\";\nsearchDef.id = overrideMetaFileId;\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n","supplementalCode":"","description":""}},"overrideMetaFileId":{"name":"overrideMetaFileId","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectOverrideFile.result.valid) {\n    return selectOverrideFile.result.data.metaFileId;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"baseMetaFileId":{"name":"baseMetaFileId","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectBaseFile.result.valid) {\n    return selectBaseFile.result.data.metaFileId;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"metaResponseToTable":{"name":"metaResponseToTable","type":"apogee.FunctionTable","updateData":{"argList":["metaResponse"],"functionBody":"var metaFileRecord = metaResponse.data.Response[0];\n\n//functions\nvar isRecipeEntry = record => (record.Type == \"recipe_entry\");\nvar isFileEntry = record => (record.Type == \"file_entry\");\n\nvar fileEntryMap = {};\nvar addToFileEntryMap = record => fileEntryMap[record.Id] = record;\n\nvar metaBody = {};\nvar makeMetaBody = recipeEntry => {\n    var fileEntryId = recipeEntry.Fields.file_entry_id;\n    var fileEntry = fileEntryMap[fileEntryId];\n    \n    var sectionName = fileEntry.Fields.entry_section;\n    var entryKey = fileEntry.Fields.entry_value;\n    var entryData = fileEntry.Fields.entry_data;\n    \n    var section = metaBody[sectionName];\n    if(!section) {\n        section = {};\n        metaBody[sectionName] = section;\n    }\n    \n    section[entryKey] = entryData;\n}\n\n//process\nmetaResponse.data.Records.filter(isFileEntry).forEach(addToFileEntryMap);\nmetaResponse.data.Records.filter(isRecipeEntry).forEach(makeMetaBody);\n\nvar metaFile = {};\nmetaFile.nm = metaFileRecord.Fields.name;\nmetaFile.data = metaBody;\n\nreturn metaFile;\n","supplementalCode":"","description":""}},"processMetaFileEntry":{"name":"processMetaFileEntry","type":"apogee.FunctionTable","updateData":{"argList":["key","entry","baseEntryMap"],"functionBody":"if(entry.extends) {\n    processExtendsEntry(key,entry,baseEntryMap);\n}\nelse if(entry.modifies) {\n    processModifyEntry(key,entry,baseEntryMap);\n}\nelse if(entry.deletes) {\n    processDeletesEntry(key,entry,baseEntryMap);\n}\nelse {\n    processCreateEntry(key,entry,baseEntryMap);\n}\n\n\n","supplementalCode":"\n/** This executes a create entry */\nfunction processCreateEntry(key,createEntry,baseMap) {\n    baseMap[key] = createEntry;\n}\n\n/** This executes an extend entry */\nfunction processExtendsEntry(key,extendsEntry,baseMap) {\n    var extendedEntry = baseMap[extendsEntry.extends];\n    if(!extendedEntry) {\n        throw new Error(\"Extended entry not found: \" + extendsEntry.extends);\n    }\n    \n    //make the new entry\n    var newEntry = apogee.util.jsonCopy(extendedEntry);\n    //set name\n    newEntry.name = extendsEntry.name;\n    //set parent\n    if(newEntry.parent) {\n        newEntry.parent.push(extendedEntry.name)\n    }\n    else {\n        newEntry.parent = [extendedEntry.name];\n    }\n    \n    //insert it\n    if(baseMap[key]) throw new Error(\"Repeat entry: \" + key);\n    baseMap[key] = newEntry;\n    \n    //do any modification\n    doEntryModify(extendsEntry,newEntry);\n}\n\n/** This executes a modify entry. */\nfunction processModifyEntry(key,modifyEntry,baseMap) {\n    var originalEntry = baseMap[modifyEntry.modifies];\n    if(!originalEntry) throw new Error(\"Modified entry not found: \" + key);\n    \n    var modifiedEntry = apogee.util.jsonCopy(originalEntry);\n    baseMap[key] = modifiedEntry;\n    \n    //do any modification\n    doEntryModify(modifyEntry,modifiedEntry);\n}\n\n/** This exectues a delete entry */\nfunction processDeleteEntry(key,deleteEntry,baseMap) {\n    var deletedEntry = baseMap[deleteEntry.delete];\n    if(!deletedEntry) throw new Error(\"Deleted entry not found: \" + key);\n    \n    //do any modification\n    delete baseMap[key];\n}\n\n/** This implements a modify on the given entry - called from both modify and extend. */\nfunction doEntryModify(modifyingEntry,entryToModify) {\n    for(var field in modifyingEntry) {\n        //don't update these\n        if((field == \"name\")||(field == \"extends\")||(field == \"modifies\")) continue;\n        \n        if(field == \"properties\") {\n            //update the properties\n            modifyPropertyList(modifyingEntry.properties,entryToModify.properties);\n        }\n        else {\n            //update other fields\n            entryToModify[field] = modifyingInstructions[field];\n        }\n    }\n}\n\n\n/** This method takes a modifying list of properties and acts them on a list of base properties.*/\nfunction modifyPropertyList(modifyingList,listToModify) {\n    //act each modifying property\n    modifyingList.forEach(modifyInstruction => modifyPropertyFromList(modifyInstruction,listToModify))\n}\n\n/** This acts a single modify property on a list of properties. */\nfunction modifyPropertyFromList(modifyInstruction,propertiesToModify) {\n    \n    var matchKey = property => (modifyInstruction.key == property.key);\n    \n    var indexToModify = propertiesToModify.findIndex(matchKey);\n    \n    //create\n    if(modifyInstruction.action === undefined) {\n        //create\n        if(indexToModify >= 0) {\n            throw new Error(\"Property found when it shouldn't be: \" + modifyInstruction.key);\n        }\n        \n        propertiesToModify.push(modifyInstruction);\n        return;\n    }\n    else {\n        //modify,replace,delete\n        if(indexToModify < 0) {\n            throw new Error(\"Property not found: \" + modifyInstruction.key);\n        }\n        \n    \n        switch(modifyInstruction.action) {\n            case \"modifies\":\n                modifyProperty(modifyInstruction,propertiesToModify[indexToModify]);\n                break;\n                \n            case \"replaces\":\n                propertiesToModify[indexToModify] = modifyInstruction;\n                break;\n                \n            case \"delete\":\n                propertiesToModify.splice(indexToModify,1);\n                break;\n                \n            default:\n                throw new Error(\"UNknown instruction: \" + modifyInstruction.action);\n        }\n    }\n    \n}\n\n/** This implements modify on a single property. */\nfunction modifyProperty(instruction,property) {\n    for(var field in instruction) {\n        //don't change these\n        if((field == \"key\")||(field == \"action\")) continue;\n        \n        //special cases\n        if((instruction.type == \"enum\")&&(field == \"values\")) {\n            modifyEnum(instruction[field],property[field]);\n        }\n        else if(instruction.type == \"conditional\") {\n            if(field == \"cases\") {\n                throw new Error(\"Modifying conditional cases not supported!\");\n            }\n            else if(field == \"default\") {\n                throw new Error(\"Modifying conditional default not supported!\");\n            }\n        }\n        else if((instruction.type == \"multikey\")&&(field == \"options\")) {\n            modifyPropertyList(instruction[field],property[field]);\n        }\n        else {\n            //standard case\n            property[field] = instruction[field];\n        }\n    } \n}\n\n/** This does the modify instruction for an enm type property. */\nfunction modifyEnum(modifyingValueList,valueListToModify) {\n    //only \"add\" supported for now in enum\n    var addToBase = (valueEntry) => valueListToModify(valueEntry);\n    modifyingValueList.forEach(addToBase);\n}\n","description":""}},"processedFile":{"name":"processedFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!baseFile) return;\n\nvar output = {};\noutput.data = {};\n\nfor(var sectionName in baseFile.data) {\n    //get the sections\n    var overrideSection = baseFile.data[sectionName];\n    var outSection = output.data[sectionName];\n\n    if(!outSection) {\n        outSection = {};\n        output.data[sectionName] = outSection;\n    }\n    \n    //process the entries\n    for(var entryKey in overrideSection) {\n        var overrideEntry = overrideSection[entryKey];\n        \n        processMetaFileEntry(entryKey,overrideEntry,outSection);\n        \n    }\n}\n\nfor(var sectionName in overrideFile.data) {\n    //get the sections\n    var overrideSection = overrideFile.data[sectionName];\n    var outSection = output.data[sectionName];\n\n    if(!outSection) {\n        outSection = {};\n        output.data[sectionName] = outSection;\n    }\n    \n    //process the entries\n    for(var entryKey in overrideSection) {\n        var overrideEntry = overrideSection[entryKey];\n        \n        processMetaFileEntry(entryKey,overrideEntry,outSection);\n        \n    }\n}\n\nreturn output;","supplementalCode":"","description":""}},"baseFileDOWNLOADED":{"name":"baseFileDOWNLOADED","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!baseFileRequest) return null;\nif(!baseFileRequest.success) throw new Error(baseFileRequest.msg);\n\nreturn metaResponseToTable(baseFileRequest);","supplementalCode":"","description":""}},"baseFile":{"name":"baseFile","type":"apogee.JsonTable","updateData":{"data":{"nm":"Standard","data":{"community_map":{"community_map":{"name":"community_map","properties":[{"values":[{"value":"Academic Building"},{"value":"Airport"},{"value":"Apartment Complex"},{"value":"Bus Station"},{"value":"Business Campus"},{"value":"Campground"},{"value":"Casino"},{"value":"College Campus Building"},{"value":"Convention Center"},{"value":"Dormitory"},{"value":"Government"},{"value":"High School"},{"value":"Hospital"},{"value":"Hotel"},{"value":"Industry"},{"value":"Library"},{"value":"Metro Station"},{"value":"Museum"},{"value":"Other"},{"value":"Parking Garage"},{"value":"Religious Building"},{"value":"Retail"},{"value":"School"},{"value":"Shopping Center"},{"value":"Shopping Mall"},{"value":"Sports Center"},{"value":"Stadium"},{"value":"Theater"},{"value":"Theme Park"},{"value":"Train Station"},{"value":"Urban Park"}],"required":true,"type":"enum","key":"com_type"},{"has_lang":true,"required":true,"type":"text","key":"name"},{"named_entry":"lang","required":true,"type":"named_entry","key":"default_lang"},{"named_entry":"post address","type":"named_entry","key":"post address"},{"type":"text","key":"theme_map"}]}},"community_entity":{"community_entity":{"name":"community_entity","properties":[{"has_lang":true,"required":true,"type":"text","key":"name"},{"has_lang":true,"required":true,"type":"text","key":"alt_name"},{"named_entry":"entity1","type":"named_entry","key":"entity1"},{"named_entry":"entity2","type":"named_entry","key":"entity2"}]}},"drawing":{"drawing":{"name":"drawing","properties":[{"values":[{"value":"Airport"},{"value":"Airport Terminal"},{"value":"Casino"},{"value":"College Building"},{"value":"College Campus"},{"value":"Convention"},{"value":"Hospital"},{"value":"Retail"},{"value":"School Building"},{"value":"School Campus"},{"value":"Shopping Mall"},{"value":"Station"}],"required":true,"type":"enum","key":"map_type"},{"has_lang":true,"required":true,"type":"text","key":"name"}]}},"level":{"level":{"name":"level","properties":[{"required":true,"type":"text","key":"name"},{"type":"text","key":"short name"},{"type":"text","key":"elev_m"},{"type":"text","key":"elev_rel_m"},{"values":[{"value":"indoor"},{"value":"outdoor"}],"required":true,"type":"enum","key":"type"}]}},"geometry":{"object":{"name":"object","properties":[{"legacyKey":"object","legacyValue":"true","value":"object","required":true,"type":"type","key":"featureType"},{"has_lang":true,"type":"text","key":"name"},{"has_lang":true,"type":"text","key":"short name"},{"named_entry":"style keys","type":"named_entry","key":"style keys"},{"has_lang":true,"type":"text","key":"location"},{"has_lang":true,"type":"text","key":"info"}]},"space":{"extends":"object","name":"space","properties":[{"legacyKey":"area","legacyValue":"space","value":"space","action":"modifies","key":"featureType"}]},"aisle":{"extends":"space","name":"aisle","properties":[{"legacyKey":"area","legacyValue":"aisle","value":"aisle","action":"modifies","key":"featureType"}]},"baggage claim":{"extends":"space","name":"baggage claim","properties":[{"legacyKey":"area","legacyValue":"baggage claim","value":"baggage claim","action":"modifies","key":"featureType"}]},"copy/print":{"extends":"space","name":"copy/print","properties":[{"legacyKey":"area","legacyValue":"copy/print","value":"copy/print","action":"modifies","key":"featureType"}]},"immigration and customs":{"extends":"space","name":"immigration and customs","properties":[{"legacyKey":"area","legacyValue":"immigration and customs","value":"immigration and customs","action":"modifies","key":"featureType"}]},"meeting point":{"extends":"space","name":"meeting point","properties":[{"legacyKey":"area","legacyValue":"meeting point","value":"meeting point","action":"modifies","key":"featureType"}]},"parcel":{"extends":"space","name":"parcel","properties":[{"legacyKey":"area","legacyValue":"parcel","value":"parcel","action":"modifies","key":"featureType"}]},"passport control":{"extends":"space","name":"passport control","properties":[{"legacyKey":"area","legacyValue":"passport control","value":"passport control","action":"modifies","key":"featureType"}]},"pet relief area":{"extends":"space","name":"pet relief area","properties":[{"legacyKey":"area","legacyValue":"pet relief area","value":"pet relief area","action":"modifies","key":"featureType"}]},"rest area":{"extends":"space","name":"rest area","properties":[{"legacyKey":"area","legacyValue":"rest area","value":"rest area","action":"modifies","key":"featureType"}]},"section":{"extends":"space","name":"section","properties":[{"legacyKey":"area","legacyValue":"section","value":"section","action":"modifies","key":"featureType"}]},"security section":{"extends":"space","name":"security section","properties":[{"legacyKey":"area","legacyValue":"security section","value":"security section","action":"modifies","key":"featureType"}]},"smoke":{"extends":"space","name":"smoke","properties":[{"legacyKey":"area","legacyValue":"smoke","value":"smoke","action":"modifies","key":"featureType"}]},"area":{"extends":"space","name":"area","properties":[{"legacyKey":"area","legacyValue":"true","value":"area","action":"modifies","key":"featureType"}]},"fence":{"extends":"object","name":"fence","properties":[{"legacyKey":"barrier","legacyValue":"fence","value":"fence","action":"modifies","key":"featureType"}]},"gate":{"extends":"object","name":"gate","properties":[{"legacyKey":"barrier","legacyValue":"gate","value":"gate","action":"modifies","key":"featureType"}]},"obstruction":{"extends":"object","name":"obstruction","properties":[{"legacyKey":"barrier","legacyValue":"obstruction","value":"obstruction","action":"modifies","key":"featureType"}]},"railing":{"extends":"object","name":"railing","properties":[{"legacyKey":"barrier","legacyValue":"railing","value":"railing","action":"modifies","key":"featureType"}]},"equipment":{"extends":"object","name":"equipment","properties":[{"legacyKey":"equipment","legacyValue":"true","value":"equipment","action":"modifies","key":"featureType"}]},"cash register":{"extends":"equipment","name":"cash register","properties":[{"legacyKey":"equipment","legacyValue":"cash register","value":"cash register","action":"modifies","key":"featureType"}]},"computer":{"extends":"equipment","name":"computer","properties":[{"legacyKey":"equipment","legacyValue":"computer","value":"computer","action":"modifies","key":"featureType"}]},"printer":{"extends":"equipment","name":"printer","properties":[{"legacyKey":"equipment","legacyValue":"printer","value":"printer","action":"modifies","key":"featureType"}]},"copy machine":{"extends":"equipment","name":"copy machine","properties":[{"legacyKey":"equipment","legacyValue":"copy machine","value":"copy machine","action":"modifies","key":"featureType"}]},"water heater":{"extends":"equipment","name":"water heater","properties":[{"legacyKey":"equipment","legacyValue":"water heater","value":"water heater","action":"modifies","key":"featureType"}]},"column":{"extends":"object","name":"column","properties":[{"legacyKey":"facility","legacyValue":"column","value":"column","action":"modifies","key":"featureType"}]},"door":{"extends":"object","name":"door","properties":[{"legacyKey":"facility","legacyValue":"door","value":"door","action":"modifies","key":"featureType"}]},"doorway":{"extends":"object","name":"doorway","properties":[{"legacyKey":"facility","legacyValue":"doorway","value":"doorway","action":"modifies","key":"featureType"}]},"elevator":{"extends":"object","name":"elevator","properties":[{"legacyKey":"facility","legacyValue":"elevator","value":"elevator","action":"modifies","key":"featureType"}]},"elevator bank":{"extends":"object","name":"elevator bank","properties":[{"legacyKey":"facility","legacyValue":"elevator bank","value":"elevator bank","action":"modifies","key":"featureType"}]},"escalator":{"extends":"object","name":"escalator","properties":[{"legacyKey":"facility","legacyValue":"escalator","value":"escalator","action":"modifies","key":"featureType"},{"values":[{"value":"above"},{"value":"below"},{"value":"both"}],"type":"enum","key":"to"},{"values":[{"value":"above"},{"value":"below"},{"value":"both"}],"type":"enum","key":"from"}]},"floor opening":{"extends":"object","name":"floor opening","properties":[{"legacyKey":"facility","legacyValue":"floor opening","value":"floor opening","action":"modifies","key":"featureType"}]},"hallway":{"extends":"space","name":"hallway","properties":[{"legacyKey":"facility","legacyValue":"hallway","value":"hallway","action":"modifies","key":"featureType"},{"type":"boolean","key":"vestibule"}]},"hall area":{"extends":"space","name":"hall area","properties":[{"legacyKey":"facility","legacyValue":"hall area","value":"hall area","action":"modifies","key":"featureType"}]},"inaccessible space":{"extends":"space","name":"inaccessible space","properties":[{"legacyKey":"facility","legacyValue":"inaccessible space","value":"inaccessible space","action":"modifies","key":"featureType"}]},"landing":{"extends":"object","name":"landing","properties":[{"legacyKey":"facility","legacyValue":"landing","value":"landing","action":"modifies","key":"featureType"}]},"opening":{"extends":"object","name":"opening","properties":[{"legacyKey":"facility","legacyValue":"opening","value":"opening","action":"modifies","key":"featureType"}]},"patio":{"extends":"space","name":"patio","properties":[{"legacyKey":"facility","legacyValue":"patio","value":"patio","action":"modifies","key":"featureType"}]},"platform":{"extends":"space","name":"platform","properties":[{"legacyKey":"facility","legacyValue":"platform","value":"platform","action":"modifies","key":"featureType"}]},"porch":{"extends":"space","name":"porch","properties":[{"legacyKey":"facility","legacyValue":"porch","value":"porch","action":"modifies","key":"featureType"}]},"room":{"extends":"space","name":"room","properties":[{"legacyKey":"facility","legacyValue":"room","value":"room","action":"modifies","key":"featureType"},{"values":[{"value":"auditorium"},{"value":"cafeteria"},{"value":"classroom"},{"value":"conference room"},{"value":"foyer"},{"value":"lab"},{"value":"library"},{"value":"lobby"},{"value":"locker room"},{"value":"lost and found"},{"value":"meditation room"},{"value":"office"}],"type":"enum","key":"use"}]},"bathroom":{"extends":"room","name":"bathroom","properties":[{"legacyKey":"facility","legacyValue":"bathroom","value":"bathroom","action":"modifies","key":"featureType"},{"values":[{"value":"family"},{"value":"female"},{"value":"male"},{"value":"unisex"}],"type":"enum","key":"gender"},{"type":"boolean","key":"changing station"},{"type":"boolean","key":"disabled access"},{"type":"boolean","key":"as room"}]},"stairs":{"extends":"object","name":"stairs","properties":[{"legacyKey":"facility","legacyValue":"stairs","value":"stairs","action":"modifies","key":"featureType"}]},"stairwell":{"extends":"space","name":"stairwell","properties":[{"legacyKey":"facility","legacyValue":"stairwell","value":"stairwell","action":"modifies","key":"featureType"}]},"step":{"extends":"object","name":"step","properties":[{"legacyKey":"facility","legacyValue":"step","value":"step","action":"modifies","key":"featureType"}]},"unit":{"extends":"space","name":"unit","properties":[{"legacyKey":"facility","legacyValue":"unit","value":"unit","action":"modifies","key":"featureType"},{"values":[{"value":"car rental"},{"value":"cocktails"},{"value":"coffee"},{"value":"fitness center"},{"value":"food and drink"},{"value":"gym"},{"value":"money changer"},{"value":"movie theatre"},{"value":"restaurant"},{"value":"retail"},{"value":"shoe shine"},{"value":"ticketing, check-in"},{"value":"transit hotel"}],"type":"enum","key":"class"},{"values":[{"value":"customer service"},{"value":"information"},{"value":"medical"},{"value":"police/security"}],"type":"enum","key":"use"}]},"wall":{"extends":"object","name":"wall","properties":[{"legacyKey":"facility","legacyValue":"wall","value":"wall","action":"modifies","key":"featureType"}]},"window":{"extends":"object","name":"window","properties":[{"legacyKey":"facility","legacyValue":"window","value":"window","action":"modifies","key":"featureType"}]},"window opening":{"extends":"object","name":"window opening","properties":[{"legacyKey":"facility","legacyValue":"window opening","value":"window opening","action":"modifies","key":"featureType"}]},"moving walkway":{"extends":"object","name":"moving walkway","properties":[{"legacyKey":"facility","legacyValue":"moving walkway","value":"moving walkway","action":"modifies","key":"featureType"},{"type":"boolean","key":"to"},{"type":"boolean","key":"from"}]},"element":{"extends":"object","name":"element","properties":[{"legacyKey":"facility","legacyValue":"element","value":"element","action":"modifies","key":"featureType"}]},"detail":{"extends":"object","name":"detail","properties":[{"legacyKey":"facility","legacyValue":"detail","value":"detail","action":"modifies","key":"featureType"}]},"fixture":{"extends":"object","name":"fixture","properties":[{"legacyKey":"fixture","legacyValue":"true","value":"fixture","action":"modifies","key":"featureType"}]},"baggage carousel":{"extends":"fixture","name":"baggage carousel","properties":[{"legacyKey":"fixture","legacyValue":"baggage carousel","value":"baggage carousel","action":"modifies","key":"featureType"}]},"booth":{"extends":"fixture","name":"booth","properties":[{"legacyKey":"fixture","legacyValue":"booth","value":"booth","action":"modifies","key":"featureType"}]},"checkout":{"extends":"fixture","name":"checkout","properties":[{"legacyKey":"fixture","legacyValue":"checkout","value":"checkout","action":"modifies","key":"featureType"}]},"countertop":{"extends":"fixture","name":"countertop","properties":[{"legacyKey":"fixture","legacyValue":"countertop","value":"countertop","action":"modifies","key":"featureType"}]},"cubicle":{"extends":"fixture","name":"cubicle","properties":[{"legacyKey":"fixture","legacyValue":"cubicle","value":"cubicle","action":"modifies","key":"featureType"}]},"kiosk":{"extends":"fixture","name":"kiosk","properties":[{"legacyKey":"fixture","legacyValue":"kiosk","value":"kiosk","action":"modifies","key":"featureType"}]},"partition":{"extends":"fixture","name":"partition","properties":[{"legacyKey":"fixture","legacyValue":"partition","value":"partition","action":"modifies","key":"featureType"}]},"rack":{"extends":"fixture","name":"rack","properties":[{"legacyKey":"fixture","legacyValue":"rack","value":"rack","action":"modifies","key":"featureType"}]},"ramp":{"extends":"fixture","name":"ramp","properties":[{"legacyKey":"fixture","legacyValue":"ramp","altKey":"facility","value":"ramp","action":"modifies","key":"featureType"},{"type":"boolean","key":"disabled access"}]},"stage":{"extends":"fixture","name":"stage","properties":[{"legacyKey":"fixture","legacyValue":"stage","value":"stage","action":"modifies","key":"featureType"}]},"stall":{"extends":"fixture","name":"stall","properties":[{"legacyKey":"fixture","legacyValue":"stall","value":"stall","action":"modifies","key":"featureType"}]},"furnishing":{"extends":"object","name":"furnishing","properties":[{"legacyKey":"furnishing","legacyValue":"true","value":"furnishing","action":"modifies","key":"featureType"}]},"bin":{"extends":"furnishing","name":"bin","properties":[{"legacyKey":"furnishing","legacyValue":"bin","altKey":"fixture","value":"bin","action":"modifies","key":"featureType"}]},"desk":{"extends":"furnishing","name":"desk","properties":[{"legacyKey":"furnishing","legacyValue":"desk","value":"desk","action":"modifies","key":"featureType"}]},"seat":{"extends":"furnishing","name":"seat","properties":[{"legacyKey":"furnishing","legacyValue":"seat","value":"seat","action":"modifies","key":"featureType"},{"type":"boolean","key":"disabled access"}]},"shelf":{"extends":"furnishing","name":"shelf","properties":[{"legacyKey":"furnishing","legacyValue":"shelf","altKey":"fixture","value":"shelf","action":"modifies","key":"featureType"}]},"table":{"extends":"furnishing","name":"table","properties":[{"legacyKey":"furnishing","legacyValue":"table","value":"table","action":"modifies","key":"featureType"}]},"marker":{"extends":"object","name":"marker","properties":[{"legacyKey":"marker","legacyValue":"true","value":"marker","action":"modifies","key":"featureType"},{"type":"boolean","key":"nonphysical"}]},"disabled access":{"extends":"marker","name":"disabled access","properties":[{"legacyKey":"marker","legacyValue":"disabled access","value":"disabled access","action":"modifies","key":"featureType"},{"action":"modifies","type":"fixed","fixed_value":"true","key":"nonphysical"}]},"entrance":{"extends":"marker","name":"entrance","properties":[{"legacyKey":"marker","legacyValue":"entrance","value":"entrance","action":"modifies","key":"featureType"},{"action":"modifies","type":"fixed","fixed_value":"true","key":"nonphysical"}]},"large text":{"extends":"marker","name":"large text","properties":[{"legacyKey":"marker","legacyValue":"large text","value":"large text","action":"modifies","key":"featureType"},{"action":"modifies","type":"fixed","fixed_value":"true","key":"nonphysical"}]},"small text":{"extends":"marker","name":"small text","properties":[{"legacyKey":"marker","legacyValue":"small text","value":"small text","action":"modifies","key":"featureType"},{"action":"modifies","type":"fixed","fixed_value":"true","key":"nonphysical"}]},"traffic marker":{"extends":"marker","name":"traffic marker","properties":[{"legacyKey":"marker","legacyValue":"traffic marker","value":"traffic marker","action":"modifies","key":"featureType"},{"action":"delete","key":"nonphysical"}]},"coordinates":{"extends":"object","name":"coordinates","properties":[{"legacyKey":"meta","legacyValue":"coordinates","value":"coordinates","action":"modifies","key":"featureType"},{"named_entry":"external_ref_object","type":"named_entry","key":"external_ref_object"}]},"source":{"extends":"object","name":"source","properties":[{"legacyKey":"meta","legacyValue":"source","value":"source","action":"modifies","key":"featureType"},{"named_entry":"external_ref_object","type":"named_entry","key":"external_ref_object"}]},"guide":{"extends":"object","name":"guide","properties":[{"legacyKey":"meta","legacyValue":"guide","value":"guide","action":"modifies","key":"featureType"},{"type":"fixed","fixed_value":"false","key":"publish"}]},"level outline":{"extends":"object","name":"level outline","properties":[{"legacyKey":"meta","legacyValue":"level outline","value":"level outline","action":"modifies","key":"featureType"},{"type":"fixed","fixed_value":"false","key":"publish"}]},"ground intersect":{"extends":"object","name":"ground intersect","properties":[{"legacyKey":"meta","legacyValue":"ground intersect","value":"ground intersect","action":"modifies","key":"featureType"},{"type":"fixed","fixed_value":"false","key":"publish"}]},"invalid":{"extends":"object","name":"invalid","properties":[{"legacyKey":"object","legacyValue":"invalid","value":"invalid","action":"modifies","key":"featureType"}]},"unknown":{"extends":"object","name":"unknown","properties":[{"legacyKey":"object","legacyValue":"unknown","value":"unknown","action":"modifies","key":"featureType"}]},"athletic field":{"extends":"object","name":"athletic field","properties":[{"legacyKey":"recreation","legacyValue":"athletic field","value":"athletic field","action":"modifies","key":"featureType"},{"values":[{"value":"baseball"},{"value":"basketball"},{"value":"cricket"},{"value":"field hockey"},{"value":"football"},{"value":"hockey"},{"value":"soccer"},{"value":"tennis"}],"type":"enum","key":"sport"},{"values":[{"value":"artificial turf"},{"value":"asphalt"},{"value":"clay"},{"value":"concrete"},{"value":"dirt"},{"value":"grass"},{"value":"gravel"},{"value":"rubber"},{"value":"sand"}],"type":"enum","key":"surface"}]},"playground":{"extends":"object","name":"playground","properties":[{"legacyKey":"recreation","legacyValue":"playground","value":"playground","action":"modifies","key":"featureType"}]},"service":{"extends":"object","name":"service","properties":[{"legacyKey":"service","legacyValue":"true","value":"service","action":"modifies","key":"featureType"}]},"defibrillator":{"extends":"service","name":"defibrillator","properties":[{"legacyKey":"safety","legacyValue":"defibrillator","value":"defibrillator","action":"modifies","key":"featureType"}]},"emergency exit":{"extends":"service","name":"emergency exit","properties":[{"legacyKey":"safety","legacyValue":"emergency exit","value":"emergency exit","action":"modifies","key":"featureType"}]},"eyewash":{"extends":"service","name":"eyewash","properties":[{"legacyKey":"safety","legacyValue":"eyewash","value":"eyewash","action":"modifies","key":"featureType"}]},"fire extinguisher":{"extends":"service","name":"fire extinguisher","properties":[{"legacyKey":"safety","legacyValue":"fire extinguisher","value":"fire extinguisher","action":"modifies","key":"featureType"}]},"fire hose":{"extends":"service","name":"fire hose","properties":[{"legacyKey":"safety","legacyValue":"fire hose","value":"fire hose","action":"modifies","key":"featureType"}]},"fire pull":{"extends":"service","name":"fire pull","properties":[{"legacyKey":"safety","legacyValue":"fire pull","value":"fire pull","action":"modifies","key":"featureType"}]},"first aid":{"extends":"service","name":"first aid","properties":[{"legacyKey":"safety","legacyValue":"first aid","value":"first aid","action":"modifies","key":"featureType"}]},"safety":{"extends":"service","name":"safety","properties":[{"legacyKey":"safety","legacyValue":"true","value":"safety","action":"modifies","key":"featureType"}]},"atm":{"extends":"service","name":"atm","properties":[{"legacyKey":"service","legacyValue":"atm","value":"atm","action":"modifies","key":"featureType"},{"values":[{"value":"dollar"},{"value":"general"},{"value":"yen"}],"type":"enum","key":"currency"}]},"bike rack":{"extends":"service","name":"bike rack","properties":[{"legacyKey":"service","legacyValue":"bike rack","value":"bike rack","action":"modifies","key":"featureType"}]},"changing station":{"extends":"service","name":"changing station","properties":[{"legacyKey":"service","legacyValue":"changing station","value":"changing station","action":"modifies","key":"featureType"}]},"flight monitor":{"extends":"service","name":"flight monitor","properties":[{"legacyKey":"service","legacyValue":"flight monitor","value":"flight monitor","action":"modifies","key":"featureType"}]},"locker":{"extends":"service","name":"locker","properties":[{"legacyKey":"service","legacyValue":"locker","value":"locker","action":"modifies","key":"featureType"}]},"luggage cart":{"extends":"service","name":"luggage cart","properties":[{"legacyKey":"service","legacyValue":"luggage cart","value":"luggage cart","action":"modifies","key":"featureType"}]},"mail":{"extends":"service","name":"mail","properties":[{"legacyKey":"service","legacyValue":"mail","value":"mail","action":"modifies","key":"featureType"}]},"massage chair":{"extends":"service","name":"massage chair","properties":[{"legacyKey":"service","legacyValue":"massage chair","value":"massage chair","action":"modifies","key":"featureType"}]},"paid parking":{"extends":"service","name":"paid parking","properties":[{"legacyKey":"service","legacyValue":"paid parking","value":"paid parking","action":"modifies","key":"featureType"}]},"power":{"extends":"service","name":"power","properties":[{"legacyKey":"service","legacyValue":"power","value":"power","action":"modifies","key":"featureType"}]},"showers":{"extends":"service","name":"showers","properties":[{"legacyKey":"service","legacyValue":"showers","value":"showers","action":"modifies","key":"featureType"}]},"santa":{"extends":"service","name":"santa","properties":[{"legacyKey":"service","legacyValue":"santa","value":"santa","action":"modifies","key":"featureType"}]},"stroller":{"extends":"service","name":"stroller","properties":[{"legacyKey":"service","legacyValue":"stroller","value":"stroller","action":"modifies","key":"featureType"}]},"telephone":{"extends":"service","name":"telephone","properties":[{"legacyKey":"service","legacyValue":"telephone","value":"telephone","action":"modifies","key":"featureType"}]},"tv":{"extends":"service","name":"tv","properties":[{"legacyKey":"service","legacyValue":"tv","value":"tv","action":"modifies","key":"featureType"}]},"valet parking":{"extends":"service","name":"valet parking","properties":[{"legacyKey":"service","legacyValue":"valet parking","value":"valet parking","action":"modifies","key":"featureType"}]},"vending machine":{"extends":"service","name":"vending machine","properties":[{"legacyKey":"service","legacyValue":"vending machine","value":"vending machine","action":"modifies","key":"featureType"}]},"wifi":{"extends":"service","name":"wifi","properties":[{"legacyKey":"service","legacyValue":"wifi","value":"wifi","action":"modifies","key":"featureType"}]},"stop sign":{"extends":"object","name":"stop sign","properties":[{"legacyKey":"sign","legacyValue":"stop sign","value":"stop sign","action":"modifies","key":"featureType"}]},"yield sign":{"extends":"object","name":"yield sign","properties":[{"legacyKey":"sign","legacyValue":"yield sign","value":"yield sign","action":"modifies","key":"featureType"}]},"sign":{"extends":"object","name":"sign","properties":[{"legacyKey":"sign","legacyValue":"true","value":"sign","action":"modifies","key":"featureType"}]},"traffic light":{"extends":"object","name":"traffic light","properties":[{"legacyKey":"signal","legacyValue":"traffic light","value":"traffic light","action":"modifies","key":"featureType"}]},"signal":{"extends":"object","name":"signal","properties":[{"legacyKey":"signal","legacyValue":"true","value":"signal","action":"modifies","key":"featureType"}]},"building":{"extends":"object","name":"building","properties":[{"legacyKey":"structure","legacyValue":"building","value":"building","action":"modifies","key":"featureType"},{"type":"text","key":"levels"}]},"parking structure":{"extends":"object","name":"parking structure","properties":[{"legacyKey":"structure","legacyValue":"parking structure","value":"parking structure","action":"modifies","key":"featureType"},{"type":"text","key":"levels"}]},"subbuilding":{"extends":"object","name":"subbuilding","properties":[{"legacyKey":"structure","legacyValue":"subbuilding","value":"subbuilding","action":"modifies","key":"featureType"}]},"tent":{"extends":"object","name":"tent","properties":[{"legacyKey":"structure","legacyValue":"tent","value":"tent","action":"modifies","key":"featureType"}]},"structure":{"extends":"object","name":"structure","properties":[{"legacyKey":"structure","legacyValue":"true","value":"structure","action":"modifies","key":"featureType"}]},"crosswalk":{"extends":"object","name":"crosswalk","properties":[{"legacyKey":"traffic","legacyValue":"crosswalk","value":"crosswalk","action":"modifies","key":"featureType"}]},"parking lot":{"extends":"object","name":"parking lot","properties":[{"legacyKey":"traffic","legacyValue":"parking lot","value":"parking lot","action":"modifies","key":"featureType"}]},"parking spot":{"extends":"object","name":"parking spot","properties":[{"legacyKey":"traffic","legacyValue":"parking spot","value":"parking spot","action":"modifies","key":"featureType"},{"type":"boolean","key":"disabled access"}]},"railway":{"extends":"object","name":"railway","properties":[{"legacyKey":"traffic","legacyValue":"railway","value":"railway","action":"modifies","key":"featureType"}]},"railway rail":{"extends":"object","name":"railway rail","properties":[{"legacyKey":"traffic","legacyValue":"railway rail","value":"railway rail","action":"modifies","key":"featureType"}]},"railway tie":{"extends":"object","name":"railway tie","properties":[{"legacyKey":"traffic","legacyValue":"railway tie","value":"railway tie","action":"modifies","key":"featureType"}]},"road":{"extends":"object","name":"road","properties":[{"legacyKey":"traffic","legacyValue":"road","value":"road","action":"modifies","key":"featureType"},{"values":[{"value":"access road"},{"value":"alley"},{"value":"municipal road"},{"value":"parking access"},{"value":"service road"},{"value":"uncategorized"}],"type":"enum","key":"cat"},{"values":[{"value":"fwd"},{"value":"rev"}],"type":"enum","key":"one way"}]},"road intersection":{"extends":"object","name":"road intersection","properties":[{"legacyKey":"traffic","legacyValue":"road intersection","value":"road intersection","action":"modifies","key":"featureType"}]},"walkway":{"extends":"object","name":"walkway","properties":[{"legacyKey":"traffic","legacyValue":"walkway","value":"walkway","action":"modifies","key":"featureType"},{"type":"boolean","key":"covered"}]},"walkway intersection":{"extends":"object","name":"walkway intersection","properties":[{"legacyKey":"traffic","legacyValue":"walkway intersection","value":"walkway intersection","action":"modifies","key":"featureType"},{"type":"boolean","key":"covered"}]},"bus":{"extends":"object","name":"bus","properties":[{"legacyKey":"transit","legacyValue":"bus","value":"bus","action":"modifies","key":"featureType"}]},"ground transportation":{"extends":"object","name":"ground transportation","properties":[{"legacyKey":"transit","legacyValue":"ground transportation","value":"ground transportation","action":"modifies","key":"featureType"}]},"taxi":{"extends":"object","name":"taxi","properties":[{"legacyKey":"transit","legacyValue":"taxi","value":"taxi","action":"modifies","key":"featureType"}]},"train":{"extends":"object","name":"train","properties":[{"legacyKey":"transit","legacyValue":"train","value":"train","action":"modifies","key":"featureType"}]},"earth":{"extends":"object","name":"earth","properties":[{"legacyKey":"vegetation","legacyValue":"earth","value":"earth","action":"modifies","key":"featureType"}]},"garden":{"extends":"object","name":"garden","properties":[{"legacyKey":"vegetation","legacyValue":"garden","value":"garden","action":"modifies","key":"featureType"}]},"grass":{"extends":"object","name":"grass","properties":[{"legacyKey":"vegetation","legacyValue":"grass","value":"grass","action":"modifies","key":"featureType"}]},"greenery":{"extends":"object","name":"greenery","properties":[{"legacyKey":"vegetation","legacyValue":"greenery","value":"greenery","action":"modifies","key":"featureType"}]},"tree":{"extends":"object","name":"tree","properties":[{"legacyKey":"vegetation","legacyValue":"tree","value":"tree","action":"modifies","key":"featureType"}]},"airplane":{"extends":"object","name":"airplane","properties":[{"legacyKey":"vehicle","legacyValue":"airplane","value":"airplane","action":"modifies","key":"featureType"}]},"water":{"extends":"object","name":"water","properties":[{"legacyKey":"water","legacyValue":"true","value":"water","action":"modifies","key":"featureType"}]},"facilty area":{"extends":"space","name":"facility:area (Deprecated)","properties":[{"legacyKey":"facility","legacyValue":"area","value":"facilty area","action":"modifies","key":"featureType"}]}},"entity":{"entity":{"name":"entity","properties":[{"has_lang":true,"required":true,"type":"text","key":"name"},{"has_lang":true,"type":"text","key":"short name"},{"named_entry":"entity1","type":"named_entry","key":"entity1"},{"named_entry":"post address","type":"named_entry","key":"post address"},{"named_entry":"entity2","type":"named_entry","key":"entity2"},{"type":"text","key":"location"},{"is_array":true,"has_lang":true,"type":"text","key":"category","meta":{"detail":"true"}},{"is_array":true,"has_lang":true,"type":"text","key":"tags","meta":{"detail":"true"}},{"named_entry":"style keys","type":"named_entry","key":"style keys"}]}},"chain":{"chain":{"name":"chain","properties":[{"has_lang":true,"required":true,"type":"text","key":"name"},{"has_lang":true,"type":"text","key":"short name"},{"named_entry":"entity1","type":"named_entry","key":"entity1"}]}},"link":{"link":{"name":"link","properties":[{"value":"link","required":true,"type":"type","key":"linkType","meta":{"linkType":"class"}},{"has_lang":true,"type":"text","key":"name","meta":{"linkType":"class"}},{"type":"text","key":"group","meta":{"linkType":"class"}},{"type":"boolean","key":"intersection","meta":{"linkType":"class"}},{"type":"boolean","key":"crossing","meta":{"linkType":"class"}},{"type":"boolean","key":"diversion","meta":{"linkType":"class"}},{"type":"text","key":"flag","meta":{"linkType":"class"}},{"type":"text","key":"start_to_image","meta":{"reverse":"end_to_image","linkType":"start"}},{"type":"text","key":"start_from_image","meta":{"reverse":"end_from_image","linkType":"start"}},{"type":"text","key":"end_to_image","meta":{"reverse":"start_to_image","linkType":"end"}},{"type":"text","key":"end_from_image","meta":{"reverse":"start_from_image","linkType":"end"}},{"type":"text","key":"start_to_desc","meta":{"reverse":"end_to_desc","linkType":"start"}},{"type":"text","key":"start_from_desc","meta":{"reverse":"end_from_desc","linkType":"start"}},{"type":"text","key":"end_to_desc","meta":{"reverse":"start_to_desc","linkType":"end"}},{"type":"text","key":"end_from_desc","meta":{"reverse":"start_from_desc","linkType":"end"}}]},"aisle":{"extends":"link","name":"aisle","properties":[{"legacyKey":"aisle","legacyValue":"major","value":"aisle","action":"modifies","key":"linkType"}]},"minor aisle":{"extends":"link","name":"minor aisle","properties":[{"legacyKey":"aisle","legacyValue":"minor","value":"minor aisle","action":"modifies","key":"linkType"}]},"corridor":{"extends":"link","name":"corridor","properties":[{"legacyKey":"corridor","legacyValue":"major","value":"corridor","action":"modifies","key":"linkType"}]},"minor corridor":{"extends":"link","name":"minor corridor","properties":[{"legacyKey":"corridor","legacyValue":"minor","value":"minor corridor","action":"modifies","key":"linkType"}]},"doorway":{"extends":"link","name":"doorway","properties":[{"legacyKey":"entry","legacyValue":"doorway","value":"doorway","action":"modifies","key":"linkType"}]},"opening":{"extends":"link","name":"opening","properties":[{"legacyKey":"entry","legacyValue":"opening","value":"opening","action":"modifies","key":"linkType"}]},"area":{"extends":"link","name":"area","properties":[{"legacyKey":"entry","legacyValue":"area","value":"area","action":"modifies","key":"linkType"}]},"elevator":{"extends":"link","name":"elevator","properties":[{"legacyKey":"level change","legacyValue":"elevator","value":"elevator","action":"modifies","key":"linkType"}]},"escalator":{"extends":"link","name":"escalator","properties":[{"legacyKey":"level change","legacyValue":"escalator","value":"escalator","action":"modifies","key":"linkType"}]},"stairs":{"extends":"link","name":"stairs","properties":[{"legacyKey":"level change","legacyValue":"stairs","value":"stairs","action":"modifies","key":"linkType"}]},"ramp":{"extends":"link","name":"ramp","properties":[{"legacyKey":"level change","legacyValue":"ramp","value":"ramp","action":"modifies","key":"linkType"}]},"transition":{"extends":"link","name":"transition","properties":[{"legacyKey":"level change","legacyValue":"transition","value":"transition","action":"modifies","key":"linkType"}]},"moving walkway":{"extends":"link","name":"moving walkway","properties":[{"legacyKey":"mechanical","legacyValue":"moving walkway","value":"moving walkway","action":"modifies","key":"linkType"}]},"path":{"extends":"link","name":"path","properties":[{"legacyKey":"path","legacyValue":"major","value":"path","action":"modifies","key":"linkType"}]},"minor path":{"extends":"link","name":"minor path","properties":[{"legacyKey":"path","legacyValue":"minor","value":"minor path","action":"modifies","key":"linkType"}]},"parking lot":{"extends":"link","name":"parking lot","properties":[{"legacyKey":"traffic","legacyValue":"parking lot","value":"parking lot","action":"modifies","key":"linkType"}]},"shoulder":{"extends":"link","name":"shoulder","properties":[{"legacyKey":"traffic","legacyValue":"shoulder","value":"shoulder","action":"modifies","key":"linkType"}]},"street":{"extends":"link","name":"street","properties":[{"legacyKey":"traffic","legacyValue":"street","value":"street","action":"modifies","key":"linkType"}]},"crosswalk":{"extends":"link","name":"crosswalk","properties":[{"legacyKey":"traffic","legacyValue":"crosswalk","value":"crosswalk","action":"modifies","key":"linkType"}]},"walkway":{"extends":"link","name":"walkway","properties":[{"legacyKey":"walkway","legacyValue":"major","value":"walkway","action":"modifies","key":"linkType"}]},"minor walkway":{"extends":"link","name":"minor walkway","properties":[{"legacyKey":"walkway","legacyValue":"minor","value":"minor walkway","action":"modifies","key":"linkType"}]}},"node":{"node":{"name":"node","properties":[{"has_lang":true,"type":"text","key":"name"},{"type":"boolean","key":"intersection"}]}},"named_entries":{"post address":{"name":"post address","properties":[{"values":[{"value":"AD"},{"value":"AE"},{"value":"AF"},{"value":"AG"},{"value":"AI"},{"value":"AL"},{"value":"AM"},{"value":"AN"},{"value":"AO"},{"value":"AQ"},{"value":"AR"},{"value":"AS"},{"value":"AT"},{"value":"AU"},{"value":"AW"},{"value":"AX"},{"value":"AZ"},{"value":"BA"},{"value":"BB"},{"value":"BD"},{"value":"BE"},{"value":"BF"},{"value":"BG"},{"value":"BH"},{"value":"BI"},{"value":"BJ"},{"value":"BM"},{"value":"BN"},{"value":"BO"},{"value":"BR"},{"value":"BS"},{"value":"BT"},{"value":"BV"},{"value":"BW"},{"value":"BY"},{"value":"BZ"},{"value":"CA"},{"value":"CC"},{"value":"CD"},{"value":"CF"},{"value":"CG"},{"value":"CH"},{"value":"CI"},{"value":"CK"},{"value":"CL"},{"value":"CM"},{"value":"CN"},{"value":"CO"},{"value":"CR"},{"value":"CV"},{"value":"CX"},{"value":"CY"},{"value":"CZ"},{"value":"DE"},{"value":"DJ"},{"value":"DK"},{"value":"DM"},{"value":"DO"},{"value":"DZ"},{"value":"EC"},{"value":"EE"},{"value":"EG"},{"value":"EH"},{"value":"ER"},{"value":"ES"},{"value":"ET"},{"value":"FI"},{"value":"FJ"},{"value":"FK"},{"value":"FM"},{"value":"FO"},{"value":"FR"},{"value":"GA"},{"value":"GB"},{"value":"GD"},{"value":"GE"},{"value":"GF"},{"value":"GH"},{"value":"GI"},{"value":"GL"},{"value":"GM"},{"value":"GN"},{"value":"GP"},{"value":"GQ"},{"value":"GR"},{"value":"GT"},{"value":"GU"},{"value":"GW"},{"value":"GY"},{"value":"HK"},{"value":"HM"},{"value":"HN"},{"value":"HR"},{"value":"HT"},{"value":"HU"},{"value":"ID"},{"value":"IE"},{"value":"IL"},{"value":"IN"},{"value":"IO"},{"value":"IQ"},{"value":"IS"},{"value":"IT"},{"value":"JM"},{"value":"JO"},{"value":"JP"},{"value":"KE"},{"value":"KG"},{"value":"KH"},{"value":"KI"},{"value":"KM"},{"value":"KN"},{"value":"KR"},{"value":"KW"},{"value":"KY"},{"value":"KZ"},{"value":"LA"},{"value":"LB"},{"value":"LC"},{"value":"LI"},{"value":"LK"},{"value":"LR"},{"value":"LS"},{"value":"LT"},{"value":"LU"},{"value":"LV"},{"value":"LY"},{"value":"MA"},{"value":"MC"},{"value":"MD"},{"value":"MG"},{"value":"MH"},{"value":"MK"},{"value":"ML"},{"value":"MM"},{"value":"MN"},{"value":"MO"},{"value":"MQ"},{"value":"MR"},{"value":"MS"},{"value":"MT"},{"value":"MU"},{"value":"MV"},{"value":"MW"},{"value":"MX"},{"value":"MY"},{"value":"MZ"},{"value":"NA"},{"value":"NC"},{"value":"NE"},{"value":"NF"},{"value":"NG"},{"value":"NI"},{"value":"NL"},{"value":"NO"},{"value":"NP"},{"value":"NR"},{"value":"NU"},{"value":"NZ"},{"value":"OM"},{"value":"PA"},{"value":"PE"},{"value":"PF"},{"value":"PG"},{"value":"PH"},{"value":"PK"},{"value":"PL"},{"value":"PM"},{"value":"PN"},{"value":"PR"},{"value":"PS"},{"value":"PT"},{"value":"PW"},{"value":"PY"},{"value":"QA"},{"value":"RE"},{"value":"RO"},{"value":"RU"},{"value":"RW"},{"value":"SA"},{"value":"SB"},{"value":"SC"},{"value":"SE"},{"value":"SG"},{"value":"SH"},{"value":"SI"},{"value":"SJ"},{"value":"SK"},{"value":"SL"},{"value":"SM"},{"value":"SN"},{"value":"SO"},{"value":"SR"},{"value":"ST"},{"value":"SV"},{"value":"SZ"},{"value":"TC"},{"value":"TD"},{"value":"TF"},{"value":"TG"},{"value":"TH"},{"value":"TJ"},{"value":"TK"},{"value":"TM"},{"value":"TN"},{"value":"TO"},{"value":"TR"},{"value":"TT"},{"value":"TV"},{"value":"TW"},{"value":"TZ"},{"value":"UA"},{"value":"UG"},{"value":"UM"},{"value":"US"},{"value":"UY"},{"value":"UZ"},{"value":"VC"},{"value":"VE"},{"value":"VG"},{"value":"VI"},{"value":"VN"},{"value":"VU"},{"value":"WF"},{"value":"WS"},{"value":"YE"},{"value":"YT"},{"value":"ZA"},{"value":"ZM"},{"value":"ZW"}],"type":"enum","key":"country"},{"conditionalKey":"country","default":{"type":"multikey","key":"default admin region","options":[{"has_lang":true,"type":"text","key":"state"},{"has_lang":true,"type":"text","key":"province"},{"has_lang":true,"type":"text","key":"prefecture"},{"has_lang":true,"type":"text","key":"territory"}]},"cases":{"JP":{"values":[{"value":"Aichi"},{"value":"Akita"},{"value":"Aomori"},{"value":"Chiba"},{"value":"Ehime"},{"value":"Fukui"},{"value":"Fukuoka"},{"value":"Fukushima"},{"value":"Gifu"},{"value":"Gunma"},{"value":"Hiroshima"},{"value":"Hokkaido"},{"value":"Hyōgo"},{"value":"Ibaraki"},{"value":"Ishikawa"},{"value":"Iwate"},{"value":"Kagawa"},{"value":"Kagoshima"},{"value":"Kanagawa"},{"value":"Kōchi"},{"value":"Kumamoto"},{"value":"Kyoto"},{"value":"Mie"},{"value":"Miyagi"},{"value":"Miyazaki"},{"value":"Nagano"},{"value":"Nagasaki"},{"value":"Nara"},{"value":"Niigata"},{"value":"Ōita"},{"value":"Okayama"},{"value":"Okinawa"},{"value":"Osaka"},{"value":"Saga"},{"value":"Saitama"},{"value":"Shiga"},{"value":"Shimane"},{"value":"Shizuoka"},{"value":"Tochigi"},{"value":"Tokushima"},{"value":"Tokyo"},{"value":"Tottori"},{"value":"Toyama"},{"value":"Wakayama"},{"value":"Yamagata"},{"value":"Yamaguchi"},{"value":"Yamanashi"}],"type":"enum","key":"prefecture"},"US":{"values":[{"value":"AK"},{"value":"AL"},{"value":"AR"},{"value":"AZ"},{"value":"CA"},{"value":"CO"},{"value":"CT"},{"value":"DC"},{"value":"DE"},{"value":"FL"},{"value":"GA"},{"value":"HI"},{"value":"IA"},{"value":"ID"},{"value":"IL"},{"value":"IN"},{"value":"KS"},{"value":"KY"},{"value":"LA"},{"value":"MA"},{"value":"MD"},{"value":"ME"},{"value":"MI"},{"value":"MN"},{"value":"MO"},{"value":"MS"},{"value":"MT"},{"value":"NC"},{"value":"ND"},{"value":"NE"},{"value":"NH"},{"value":"NJ"},{"value":"NM"},{"value":"NV"},{"value":"NY"},{"value":"OH"},{"value":"OK"},{"value":"OR"},{"value":"PA"},{"value":"RI"},{"value":"SC"},{"value":"SD"},{"value":"TN"},{"value":"TX"},{"value":"UT"},{"value":"VA"},{"value":"VT"},{"value":"WA"},{"value":"WI"},{"value":"WV"},{"value":"WY"}],"type":"enum","key":"state"},"AU":{"values":[{"value":"NSW"},{"value":"QLD"},{"value":"SA"},{"value":"TAS"},{"value":"VIC"},{"value":"WA"}],"type":"enum","key":"territory"},"CA":{"values":[{"value":"AB"},{"value":"BC"},{"value":"MB"},{"value":"NB"},{"value":"NL"},{"value":"NS"},{"value":"ON"},{"value":"PE"},{"value":"QC"},{"value":"SK"}],"type":"enum","key":"province"}},"type":"conditional","key":"admin region"},{"type":"text","key":"postal code"},{"has_lang":true,"type":"text","key":"city"},{"has_lang":true,"type":"text","key":"street address"}]},"entity1":{"name":"entity1","properties":[{"type":"text","key":"phone","meta":{"detail":"true"}},{"type":"text","key":"email","meta":{"detail":"true"}},{"type":"text","key":"url","meta":{"detail":"true"}},{"type":"text","key":"fax","meta":{"detail":"true"}},{"has_lang":true,"type":"text","key":"description","meta":{"detail":"true"}},{"is_array":true,"type":"text","key":"naics","meta":{"detail":"true"}}]},"entity2":{"name":"entity2","properties":[{"has_lang":true,"type":"text","key":"hours","meta":{"detail":"true"}},{"type":"text","key":"storeid"},{"type":"text","key":"prop_owner"},{"has_lang":true,"type":"text","key":"product","meta":{"detail":"true"}}]},"style keys":{"name":"style keys","properties":[{"type":"text","key":"$icon"},{"type":"text","key":"$style"},{"type":"text","key":"$image_url"},{"type":"text","key":"$label_text"},{"type":"text","key":"$body_color"},{"type":"text","key":"$outline_color"},{"type":"text","key":"$outline_width"},{"type":"text","key":"$text_color"}]},"external_ref_object":{"name":"external_ref_object","properties":[{"type":"text","key":"ref"},{"type":"text","key":"xscale"},{"type":"text","key":"yscale"},{"values":[{"value":"cm"},{"value":"ft"},{"value":"in"},{"value":"km"},{"value":"m"},{"value":"mile"},{"value":"yd"}],"type":"enum","key":"units"},{"type":"boolean","key":"publish"}]},"address keys":{"name":"address keys","properties":[{"values":[{"value":"#"},{"value":"$id"},{"value":"Address"},{"value":"Address 2"},{"value":"Aisle"},{"value":"Apartment"},{"value":"Apt"},{"value":"Area"},{"value":"Bathroom"},{"value":"Bin"},{"value":"Booth"},{"value":"Box"},{"value":"Building"},{"value":"Chair"},{"value":"City"},{"value":"Concession"},{"value":"Concourse"},{"value":"Country"},{"value":"Cubicle"},{"value":"Department"},{"value":"Desk"},{"value":"Display"},{"value":"Door"},{"value":"Elevator"},{"value":"End Cap"},{"value":"Entrance"},{"value":"Escalator"},{"value":"Exhibit"},{"value":"Exit"},{"value":"Field"},{"value":"Gate"},{"value":"Hall"},{"value":"Hanger"},{"value":"Intersection"},{"value":"Lane"},{"value":"Level"},{"value":"Locker"},{"value":"Lot"},{"value":"Mall"},{"value":"Meeting Room"},{"value":"Moving Walkway"},{"value":"Neighborhood"},{"value":"Office"},{"value":"Painting"},{"value":"Rack"},{"value":"Ramp"},{"value":"Region"},{"value":"Rm"},{"value":"Road"},{"value":"Room"},{"value":"Row"},{"value":"Sculpture"},{"value":"Seat"},{"value":"Section"},{"value":"Shelf"},{"value":"Space"},{"value":"Stair"},{"value":"State"},{"value":"Store"},{"value":"Street"},{"value":"Suite"},{"value":"Terminal"},{"value":"Unit"},{"value":"Zip Code"},{"value":"Zone"}],"type":"enum","key":"address keys"}]},"lang":{"name":"lang","properties":[{"values":[{"value":"ar"},{"value":"cs"},{"value":"da"},{"value":"de"},{"value":"en"},{"value":"es"},{"value":"fr"},{"value":"gu"},{"value":"he"},{"value":"hi"},{"value":"id"},{"value":"it"},{"value":"ja"},{"value":"ko"},{"value":"nl"},{"value":"pl"},{"value":"pt"},{"value":"ro"},{"value":"ru"},{"value":"sk"},{"value":"sv"},{"value":"th"},{"value":"tr"},{"value":"zh"}],"type":"enum","key":"lang"}]}}}},"description":""}},"overrideFileDOWNLOADED":{"name":"overrideFileDOWNLOADED","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!overrideFileRequest) return null;\nif(!overrideFileRequest.success) throw new Error(overrideFileRequest.msg);\n\nreturn metaResponseToTable(overrideFileRequest);","supplementalCode":"","description":""}},"overrideFile":{"name":"overrideFile","type":"apogee.JsonTable","updateData":{"data":{"nm":"Standard Override","data":{"geometry":{"conference room":{"extends":"room","name":"conference room","properties":[{"legacyKey":"facility","legacyValue":"conference room","value":"conference room","action":"modifies","key":"featureType"}]},"office":{"extends":"room","name":"office","properties":[{"legacyKey":"facility","legacyValue":"office","value":"office","action":"modifies","key":"featureType"}]},"server rack":{"extends":"equipment","name":"server rack","properties":[{"legacyKey":"equipment","legacyValue":"rack","value":"rack","action":"modifies","key":"featureType"}]},"refrigerator":{"extends":"equipment","name":"refrigerator","properties":[{"legacyKey":"equipment","legacyValue":"refrigerator","value":"refrigerator","action":"modifies","key":"featureType"}]},"television":{"extends":"equipment","name":"television","properties":[{"legacyKey":"equipment","legacyValue":"tv","value":"tv","action":"modifies","key":"featureType"}]},"workstation":{"extends":"fixture","name":"workstation","properties":[{"legacyKey":"fixture","legacyValue":"workstation","value":"workstation","action":"modifies","key":"featureType"}]},"video conference":{"extends":"room","name":"video conference","properties":[{"legacyKey":"facility","legacyValue":"video conference","value":"video conference","action":"modifies","key":"featureType"}]},"meeting room":{"extends":"room","name":"meeting room","properties":[{"legacyKey":"facility","legacyValue":"meeting room","value":"meeting room","action":"modifies","key":"featureType"}]},"chat room":{"extends":"room","name":"chat room","properties":[{"legacyKey":"facility","legacyValue":"chat room","value":"chat room","action":"modifies","key":"featureType"}]},"collaborative area":{"extends":"space","name":"collaborative area","properties":[{"legacyKey":"facility","legacyValue":"collaborative area","value":"collaborative area","action":"modifies","key":"featureType"}]},"corridor":{"extends":"space","name":"corridor","properties":[{"legacyKey":"facility","legacyValue":"corridor","value":"corridor","action":"modifies","key":"featureType"}]},"break room":{"extends":"room","name":"break room","properties":[{"legacyKey":"facility","legacyValue":"break room","value":"break room","action":"modifies","key":"featureType"}]},"breakout":{"extends":"room","name":"breakout","properties":[{"legacyKey":"facility","legacyValue":"breakout","action":"modifies","value":"breakout","key":"featureType"}]},"janitor room":{"extends":"room","name":"janitor room","properties":[{"legacyKey":"facility","legacyValue":"janitor room","action":"modifies","value":"janitor room","key":"featureType"}]},"electrical room":{"extends":"room","name":"electrical room","properties":[{"legacyKey":"facility","legacyValue":"electrical room","action":"modifies","value":"electrical room","key":"featureType"}]},"mechanical room":{"extends":"room","name":"mechanical room","properties":[{"legacyKey":"facility","legacyValue":"mechanical room","action":"modifies","value":"mechanical room","key":"featureType"}]},"phone room":{"extends":"room","name":"phone room","properties":[{"legacyKey":"facility","legacyValue":"phone room","value":"phone room","action":"modifies","key":"featureType"}]},"equipment room":{"extends":"room","name":"equipment room","properties":[{"legacyKey":"facility","legacyValue":"equipment room","action":"modifies","value":"equipment room","key":"featureType"}]},"copy room":{"extends":"room","name":"copy room","properties":[{"legacyKey":"facility","legacyValue":"copy room","value":"copy room","action":"modifies","key":"featureType"}]},"server room":{"extends":"room","name":"server room","properties":[{"legacyKey":"facility","legacyValue":"server room","action":"modifies","value":"server room","key":"featureType"}]},"storage room":{"extends":"room","name":"storage room","properties":[{"legacyKey":"facility","legacyValue":"storage room","action":"modifies","value":"storage room","key":"featureType"}]},"support room":{"extends":"room","name":"support room","properties":[{"legacyKey":"facility","legacyValue":"support room","action":"modifies","value":"support room","key":"featureType"}]},"supply room":{"extends":"room","name":"supply room","properties":[{"legacyKey":"facility","legacyValue":"supply room","action":"modifies","value":"supply room","key":"featureType"}]},"balcony":{"extends":"space","name":"balcony","properties":[{"legacyKey":"facility","legacyValue":"balcony","action":"modifies","value":"balcony","key":"featureType"}]}},"named_entries":{"Address key addition: Workstation":{"name":"Address key addition: Workstation","properties":[{"values":[{"value":"Workstation"}],"action":"modifies","key":"address keys"}],"modifies":"address keys"},"Address key addition: Corridor":{"name":"Address key addition: Corridor","properties":[{"values":[{"value":"Corridor"}],"action":"modifies","key":"address keys"}],"modifies":"address keys"}}}},"description":""}}}}}}}},"micemetarDataAccess":{"name":"micemetarDataAccess","type":"apogee.Folder","children":{"createRecord":{"name":"createRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordInfo","fieldMap"],"functionBody":"var record = {};\n\nrecord.Id = getId();\nrecord.Type = recordInfo.name;\nrecord.Fields = fieldMap;\nrecord.read_perm = READ_PERM;\nrecord.edit_perm = EDIT_PERM;\n\nreturn record;","supplementalCode":"var READ_PERM = 2;\nvar EDIT_PERM = 15;\n\nvar nextId = -1;\n\nfunction getId() {\n    return nextId--;\n}","description":"This method creates a record given the field values and record info \nfrom the data set info. It creates and ID and uses standard permissions."}},"recordsToCreateInstructions":{"name":"recordsToCreateInstructions","type":"apogee.FunctionTable","updateData":{"argList":["recordList"],"functionBody":"var instructions = [];\n\nfor(var i = 0; i < recordList.length; i++) {\n    var createRecord = recordList[i];\n    var instruction = createCreateInstruction(createRecord);\n    instructions.push(instruction);\n}\n\nreturn instructions;","supplementalCode":"","description":"This creates a list of create instructions to go along with a list of records to be created.\n\nThere is the option to assign the ID or to leave it as undefined, in which case\nan automatically incremented ID will be assigned. (For consistency in the data\nset, either all records should be preassigned or all records should be \nautomatically assigned."}},"createCommitBody":{"name":"createCommitBody","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage"],"functionBody":"var commit = {};\nvar actions = [];\n\nif(commitMessage.length === 0) throw new Error(\"Commit message missing!\");\n\ncommit.Name = dataSetInfo.name;\ncommit.Message = commitMessage;\ncommit.Actions = actions;\n\n//single action with commits\nvar action = {};\naction.Title = \"bulk create commit\";\naction.Instr = instructionList;\nactions.push(action);\n\nreturn commit","supplementalCode":"","description":"This creates a body for a commit request, given a list of instructions and a commit message."}},"createRequestOptions":{"name":"createRequestOptions","type":"apogee.FunctionTable","updateData":{"argList":["bodyJson","sessionKey"],"functionBody":"var header = {};\nheader[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\nheader.sessionKey = sessionKey;\nheader[\"proto-version\"] = \"4.0\";\nheader[\"db-version\"] = dataSetInfo.version;\n\nrequestInfo = {};\nrequestInfo.header = header;\nif(bodyJson) {\n    requestInfo.method = \"POST\";\n    requestInfo.body = JSON.stringify(bodyJson);\n}\n\nreturn requestInfo;\n","supplementalCode":"","description":"This creates the requestOptions, suitable for apogee.net.jsonRequest, to go with an type of request to the workingset (micemetarequest) server."}},"host":{"name":"host","type":"apogee.JsonTable","updateData":{"data":"http://eng.micello.com/micemetarws","description":""}},"commitUrl":{"name":"commitUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/commit\";\nreturn value;\n\n","supplementalCode":"","description":""}},"requestUrl":{"name":"requestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/cannedsearch\";\nreturn value;\n\n","supplementalCode":"","description":""}},"dataSetInfo":{"name":"dataSetInfo","type":"apogee.JsonTable","updateData":{"data":{"records":{"file_entry_relation":{"idField":"file_entry_rel_id","name":"file_entry_relation","foreignList":[],"fields":[{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"ref_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"relation_type","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileEntryRelation"},"com_file_entry":{"idField":"com_file_entry_id","name":"com_file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"com_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.ComFile"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_group","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFileEntry"},"file_type":{"idField":"file_type_id","name":"file_type","foreignList":[{"remoteRecord":"file_entry","name":"file_entry_list","isUnique":false,"remoteField":"file_type_id","restrictDelete":true}],"fields":[{"defaultValue":null,"name":"file_type_name","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileType"},"file_entry":{"idField":"file_entry_id","name":"file_entry","foreignList":[{"remoteRecord":"file_entry_relation","name":"file_entry_ref_list","isUnique":false,"remoteField":"file_entry_id","restrictDelete":true}],"fields":[{"defaultValue":null,"name":"entry_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"entry_section","nullOk":true,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_value","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"option_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_data","nullOk":false,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.FileEntry"},"recipe_entry":{"idField":"recipe_entry_id","name":"recipe_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"insertion_info","nullOk":true,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.RecipeEntry"},"com_file":{"idField":"com_file_id","name":"com_file","foreignList":[{"remoteRecord":"com_file_entry","name":"com_file_entry_list","isUnique":false,"remoteField":"com_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"ref","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFile"},"meta_file":{"idField":"meta_file_id","name":"meta_file","foreignList":[{"remoteRecord":"recipe_entry","name":"recipe_entry_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"},{"remoteRecord":"meta_ref_entry","name":"base_file_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.MetaFile"},"meta_ref_entry":{"idField":"meta_ref_entry_id","name":"meta_ref_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"base_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"}],"recordClass":"com.micello.micemetar.data.MetaRefEntry"}},"name":"Micemetar","version":"5.0"},"description":""}},"createUpdateInstruction":{"name":"createUpdateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["initialRecord","targetRecord"],"functionBody":"if(initialRecord.Id != targetRecord.Id) {\n    throw new Error(\"Record ID mismatch in create update instruction for target record: \" + getRecordErrString(targetRecord));\n}\n\nif(initialRecord.Type != targetRecord.Type) {\n    throw new Error(\"Inital and target record types do not match. Target record: \" + getRecordErrString(targetRecord));\n}\n\nvar recordsDifferent = false;\n\nvar recordInfo = getRecordInfo(initialRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Update\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = initialRecord.Id;\n\ninstruction.initialReadPerm = initialRecord.read_perm;\ninstruction.initialEditPerm = initialRecord.edit_perm;\n\nif(initialRecord.readPerm != targetRecord.readPerm) {\n    instruction.targetReadPerm = targetRecord.read_perm;\n    recordsDifferent = true;\n}\n\nif(initialRecord.editPerm != targetRecord.editPerm) {\n    instruction.targetEditPerm = targetRecord.edit_perm;\n    recordsDifferent = true;\n}\n\nvar initialData = {};\ninstruction.Initial = initialData;\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    \n    var initialValue;\n    var targetValue;\n    \n    var initialValue = initialRecord.Fields[field.name];\n    var targetValue = targetRecord.Fields[field.name];\n    \n    //validate target values\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n        }\n    }\n    \n    if(!fieldsMatch(initialValue,targetValue,field)) {\n        initialData[field.name] = initialValue;\n        targetData[field.name] = targetValue;\n        recordsDifferent = true;\n    }\n}\n\nif(recordsDifferent) {\n    return instruction;\n}\nelse {\n    return null;\n}\n","supplementalCode":"function fieldsMatch(initialValue,targetValue,fieldInfo) {\n    if(fieldInfo.fieldClass === \"java.lang.String\") {\n        //compare strings with \"==\"\n        return (initialValue == targetValue);\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"java.lang\")) {\n        //compare other basic values with \"===\"\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"com.micello\")) {\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONObject\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONArray\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else {\n        throw new Error(\"unrecognized field type: \" + fieldInfo.fieldClass);\n    }\n}\n\nfunction compareJsonData(a,b) {\n    var an = apogee.util.getNormalizedObjectCopy(a);\n    var bn = apogee.util.getNormalizedObjectCopy(b);\n    var aString = JSON.stringify(an);\n    var bString = JSON.stringify(bn);\n    return aString == bString;\n}\n    ","description":"This function creates an update instruction given an initial and target record. If the records are the same then NULL is returned. (No update is needed.)"}},"createCreateInstruction":{"name":"createCreateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["createRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(createRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Create\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = createRecord.Id;\n\ninstruction.targetReadPerm = createRecord.read_perm;\ninstruction.targetEditPerm = createRecord.edit_perm;\n\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var targetValue;\n    var targetValue = createRecord.Fields[field.name];\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecord,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecord,field));\n        }\n    }\n    \n    targetData[field.name] = targetValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getFieldErrString":{"name":"getFieldErrString","type":"apogee.FunctionTable","updateData":{"argList":["record","fieldInfo"],"functionBody":"return getRecordErrString(record) + \" - \" + fieldInfo.name;","supplementalCode":"","description":""}},"getRecordErrString":{"name":"getRecordErrString","type":"apogee.FunctionTable","updateData":{"argList":["record"],"functionBody":"return record.Type + \" \" + record.Id;","supplementalCode":"","description":""}},"createDeleteInstruction":{"name":"createDeleteInstruction","type":"apogee.FunctionTable","updateData":{"argList":["deleteRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(deleteRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Delete\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = deleteRecord.Id;\n\ninstruction.initialReadPerm = deleteRecord.read_perm;\ninstruction.initialEditPerm = deleteRecord.edit_perm;\n\nvar initialData = {};\ninstruction.Initial = initialData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var initialValue = deleteRecord.Fields[field.name];\n    \n    initialData[field.name] = initialValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getRecordInfo":{"name":"getRecordInfo","type":"apogee.FunctionTable","updateData":{"argList":["recordType"],"functionBody":"var recordInfo = dataSetInfo.records[recordType];\n\nif(!recordInfo) {\n    throw new Error(\"Record type not found in getRecordInfo: \" + recordType);\n}\n\nreturn recordInfo;","supplementalCode":"","description":""}},"combinedEntriesToInstructionList":{"name":"combinedEntriesToInstructionList","type":"apogee.FunctionTable","updateData":{"argList":["combinedEntries"],"functionBody":"var output = [];\nfor(var key in combinedEntries) {\n    var entry = combinedEntries[key];\n    var instruction = getInstructionForCombinedEntry(entry);\n    if(instruction) {\n        output.push(instruction);\n    }\n}\n\nreturn output;","supplementalCode":"function getInstructionForCombinedEntry(combinedEntry) {\n    var newEntry = combinedEntry.newEntry;\n    var oldEntry = combinedEntry.oldEntry;\n    \n    if(newEntry) {\n        if(!oldEntry) {\n            console.log(\"Create: \" + newEntry.Id);\n            return createCreateInstruction(newEntry);\n        }\n        else {\n            //this will return null for matching records\n            console.log(\"Update(maybe): \" + newEntry.Id);\n            return createUpdateInstruction(oldEntry,newEntry);\n        }\n    }\n    else if(oldEntry) {\n        console.log(\"Delete: \" + oldEntry.Id);\n        return createDeleteInstruction(oldEntry);\n    }\n    \n    return null;\n}\n\nfunction entriesDifferent(entry1,entry2) {\n    var string1 = JSON.stringify(apogee.util.getNormalizedCopy(entry1));\n    var string2 = JSON.stringify(apogee.util.getNormalizedCopy(entry2));\n    return (string1 == string2);\n}","description":"This function takes a combined entry map of the format:\n\n{\n  \"some-identifier\":{\n    \"oldEntry\":{original record entry, if applicable},\n    \"newEntry\":{new record entry, if applicable}\n  },\n  ...\n}\n\nIt returns an instruction list.\n\n"}},"getCommitPromise":{"name":"getCommitPromise","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage","sessionKey"],"functionBody":"var commitBody = createCommitBody(instructionList,commitMessage);\nvar requestOptions = createRequestOptions(commitBody,sessionKey);\nvalue = apogee.net.jsonRequest(commitUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}},"getRequestPromise":{"name":"getRequestPromise","type":"apogee.FunctionTable","updateData":{"argList":["requestBody","sessionKey"],"functionBody":"var requestOptions = createRequestOptions(requestBody,sessionKey);\nvalue = apogee.net.jsonRequest(requestUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}},"customRequestUrl":{"name":"customRequestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/request\";\nreturn value;","supplementalCode":"","description":""}},"getCustomRequestPromise":{"name":"getCustomRequestPromise","type":"apogee.FunctionTable","updateData":{"argList":["requestBody","sessionKey"],"functionBody":"var requestOptions = createRequestOptions(requestBody,sessionKey);\nvalue = apogee.net.jsonRequest(customRequestUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}}}}}}},"components":{"tasks":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":37,"y":37}},"children":{"login":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":55,"y":32}},"children":{"loginUrl":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":465,"height":43},"posInfo":{"x":26,"y":27},"state":-1,"viewType":"Text"}},"loginControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":322,"height":84},"posInfo":{"x":320,"y":36},"state":0,"viewType":"Output"},"resource":{"html":"","css":"","setData":"this.loginUrl = data;","constructorAddition":"\n\n//this uses the updated version of test authorization that takes and returns a JSON\nthis.onClick = function() {\n    \n    //on click\n    var bodyJson = {};\n    bodyJson.userName = resource.userInput.value;\n    bodyJson.password = resource.passwordInput.value;\n    \n    //cleaer password field\n    resource.passwordInput.value = \"\";\n    \n    var options = {};\n    options.body = JSON.stringify(bodyJson);\n    options.method = \"POST\";\n    \n    var requestPromise = apogee.net.jsonRequest(this.loginUrl,options);\n    \n    //set the response\n    mode.getMessenger().asynchDataUpdate(\"sessionResponse\",requestPromise);\n}","init":"\nvar label1 = document.createElement(\"label\");\nlabel1.for = \"userInput\";\nlabel1.innerHTML = \"User:\"\nelement.appendChild(label1);\n\nvar input1 = document.createElement(\"input\");\ninput1.id = \"userInput\";\nresource.userInput = input1;\nelement.appendChild(input1);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar label2 = document.createElement(\"label\");\nlabel2.for = \"passwordInput\";\nlabel2.innerHTML = \"Password:\"\nelement.appendChild(label2);\n\nvar input2 = document.createElement(\"input\");\ninput2.id = \"passwordInput\";\ninput2.type = \"password\";\nresource.passwordInput = input2;\nelement.appendChild(input2);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar button = document.createElement(\"button\");\nbutton.innerHTML = \"Login\";\nelement.appendChild(button);\n\nvar instance = this;\nbutton.onclick = function() {\n    instance.onClick();\n}\n\n\n"}},"sessionResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":697,"height":93},"posInfo":{"x":24,"y":192},"state":0,"viewType":"Text"}},"taskResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":754,"height":319},"posInfo":{"x":378,"y":250},"state":0,"viewType":"Formula"}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":463,"height":119},"posInfo":{"x":34,"y":431},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":66},"posInfo":{"x":33,"y":327},"state":0,"viewType":"Text"}}}},"completed":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":384,"y":69}},"children":{"resetControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":322,"height":43},"posInfo":{"x":62,"y":17},"state":0,"viewType":"Output"},"resource":{"html":"<input type=\"button\" id=\"completed_reset\" value=\"Reset\"></input>","onLoad":"this.resetButton = document.getElementById(\"completed_reset\");\nthis.initialized = true;\n\nvar instance = this;\nthis.resetButton.onclick = function() {\n    instance.onReset();\n}","constructorAddition":"this.onReset = function() {\n\n    var clearTaskList = [\n        [\"editMeta\",\"selectMetaContext\"],\n        [\"editMeta\",\"selectMetaFile\"],\n        [\"editMeta\",\"editMetaFile\"],\n        [\"editCom\",\"selectCid\"],\n        [\"editCom\",\"editComFile\"],\n        [\"submit\"],\n        [\"completed\"]\n    ];\n    taskAppModule.clearTasksAndRestartFrom(mode.getMessenger(),clearTaskList,[\"switcher\"]);\n}","setData":""}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":253,"height":77},"posInfo":{"x":372,"y":152},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":136},"posInfo":{"x":292,"y":321},"state":0,"viewType":"Text"}}}},"getSessionKey":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":447,"height":400},"posInfo":{"x":705,"y":144},"state":0,"viewType":"Code"}},"currentTask":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":287,"height":92},"posInfo":{"x":15,"y":212},"state":0,"viewType":"Text"}},"getFileTypeName":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":593,"height":400},"posInfo":{"x":47,"y":496},"state":-1,"viewType":"Code"}},"commonData":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":482,"y":496}},"children":{"fileTypeList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":727,"height":325},"posInfo":{"x":65,"y":17},"state":-1,"viewType":"JSON"}},"fileTypeIdToName":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":722,"height":320},"posInfo":{"x":36,"y":461},"state":-1,"viewType":"JSON"}},"fileTypeNameToId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":685,"height":300},"posInfo":{"x":42,"y":404},"state":-1,"viewType":"JSON"}}}},"getFileTypeId":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":670,"height":400},"posInfo":{"x":45,"y":539},"state":-1,"viewType":"Code"}},"processMeta":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":195,"y":73}},"children":{"selectOverrideFile":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":50,"y":50}},"children":{"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":701,"height":520},"posInfo":{"x":277,"y":543},"state":0,"viewType":"JSON"}},"metaFileSelector":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":972,"height":488},"posInfo":{"x":333,"y":59},"state":0,"viewType":"Output"},"resource":{"html":"<input type=\"radio\" value=\"create\" name=\"createUpdate\" id=\"override_load_createRadio\">Create</input>\n<input type=\"radio\" value=\"update\" name=\"createUpdate\" id=\"override_load_updateRadio\">Update</input>\n<br><br>\n<select id=\"override_load_metaFileSelect\"></select>\n<select id=\"override_load_fileTypeSelect\"></select>\n<br><br>\n<div id=\"override_load_metaFilePanel\">\nMeta File Name: <input type=\"text\" id=\"override_load_metaFileNameInput\"></input>\n<br><br>\n</div>\n<input type=\"button\" value=\"Submit\" id=\"override_load_submitButton\"></input>\n<input type=\"button\" value=\"Cancel\" id=\"override_load_cancelButton\"></input>","onLoad":"this.createRadio = document.getElementById(\"override_load_createRadio\");\nthis.updateRadio = document.getElementById(\"override_load_updateRadio\");\nthis.selectMetaFileElement = document.getElementById(\"override_load_metaFileSelect\");\nthis.selectFileTypeElement = document.getElementById(\"override_load_fileTypeSelect\");\nthis.metaFilePanel = document.getElementById(\"override_load_metaFilePanel\");\nthis.metaFileNameInput = document.getElementById(\"override_load_metaFileNameInput\");\nthis.submitButton = document.getElementById(\"override_load_submitButton\");\nthis.cancelButton = document.getElementById(\"override_load_cancelButton\");\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmitClick();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancelClick();\n}\n\nvar onRadioClick = function() {\n    instance.onRadioClick();\n}\n\nthis.createRadio.onclick = onRadioClick;\nthis.updateRadio.onclick = onRadioClick;\n\nthis.initialized = true;\n\nif(this.cachedData !== null) {\n    this.setData(this.cachedData);\n    this.cachedData = null;\n}","setData":"if(!data) return;\n\nif(!this.initialized) {\n    this.cachedData = data;\n    return;\n}\n\nthis.editExisting = data.editExisting;\n\nvar INVALID_ID = 0;\n\nif(this.selectMetaFileElement) {\n\n    apogeeapp.ui.removeAllChildren(this.selectMetaFileElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    \n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentMetaFileId) option.selected = true;\n    this.selectMetaFileElement.add(option);\n    \n    for(var fileDesc in data.metaFiles) {\n        var id = data.metaFiles[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentMetaFileId) option.selected = true;\n        this.selectMetaFileElement.add(option);\n    }\n}\n\nif(this.selectFileTypeElement) {\n    apogeeapp.ui.removeAllChildren(this.selectFileTypeElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentFileTypeId) option.selected = true;\n\n    this.selectFileTypeElement.add(option);\n    \n    for(var fileDesc in data.fileTypes) {\n        var id = data.fileTypes[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentFileTypeId) option.selected = true;\n        this.selectFileTypeElement.add(option);\n    }\n}\n\nthis.updateUiForCreateUpdate(data.editExisting);\n","constructorAddition":"this.data = null;\nthis.cachedData = null;\n\nthis.onSubmitClick = function() {\n    \n    var selectElement = this.editExisting ? this.selectMetaFileElement : this.selectFileTypeElement;\n    \n    if(!selectElement) {\n        alert(\"Error; UI not initialized\");\n        return;\n    }\n    \n    if(selectElement.length === 0) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var selectedIdString = selectElement.value;\n    if(!isFinite(selectedIdString)) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    var selectedId = Number(selectedIdString);\n\n    if(!this.editExisting) {\n        var metaFileName = this.metaFileNameInput.value.trim();\n        if((!metaFileName)||(metaFileName.length === 0)) {\n            alert(\"Invalid meta file name!\");\n            return;\n        }\n    }\n    \n    var fileSelection = {};\n    fileSelection.editExisting = this.editExisting;\n    if(this.editExisting) {\n        fileSelection.metaFileId = selectedId;\n    }\n    else {\n        fileSelection.fileTypeId = selectedId;\n        fileSelection.metaFileName = metaFileName;\n    }\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectOverrideFile\"],[\"processMeta\",\"working\"],fileSelection);\n}\n\nthis.onCancelClick = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectOverrideFile\"],[\"processMeta\",\"selectOverrideContext\"]);\n}\n\nthis.onRadioClick = function() {\n    var editExisting = this.updateRadio.checked;\n    this.updateUiForCreateUpdate(editExisting);\n}\n\nthis.updateUiForCreateUpdate = function(editExisting) {\n    this.editExisting = editExisting;\n    \n    if(this.selectFileTypeElement) {\n        this.selectFileTypeElement.style.display = editExisting ? \"none\" : \"\";\n    }\n    if(this.selectMetaFileElement) {\n        this.selectMetaFileElement.style.display = editExisting ? \"\" : \"none\";\n    }\n    if(this.metaFilePanel) {\n        this.metaFilePanel.style.display = editExisting ? \"none\" : \"\";\n    }\n    \n    var createRadioSelected = !editExisting;\n    var updateRadioSelected = editExisting;\n    \n    if((this.createRadio)&&(this.createRadio.checked != createRadioSelected)) {\n        this.createRadio.checked = createRadioSelected;\n    }\n    if((this.updateRadio)&&(this.updateRadio.checked != updateRadioSelected)) {\n        this.updateRadio.checked = updateRadioSelected;\n    }\n}\n\n"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":529,"height":319},"posInfo":{"x":257,"y":32},"state":-1,"viewType":"Formula"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":723,"height":349},"posInfo":{"x":33,"y":33},"state":-1,"viewType":"Formula"}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":614,"height":310},"posInfo":{"x":41,"y":330},"state":0,"viewType":"JSON"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":115},"posInfo":{"x":381,"y":324},"state":0,"viewType":"Text"}}}},"selectOverrideContext":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":75,"y":75}},"children":{"contextControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":336,"height":106},"posInfo":{"x":26,"y":51},"state":0,"viewType":"Output"},"resource":{"html":"Context: <input type=\"text\" id=\"override_context_text\"></input>\n<br><br>\n<input type=\"button\" id=\"override_context_submit\" value=\"Submit\"></input>\n<input type=\"button\" id=\"override_context_cancel\" value=\"Cancel\"></input>","onLoad":"this.textInput = document.getElementById(\"override_context_text\");\nthis.submitButton = document.getElementById(\"override_context_submit\");\nthis.cancelButton = document.getElementById(\"override_context_cancel\");\nthis.initialized = true;\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmit();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancel();\n}","constructorAddition":"this.textInput = null;\nthis.submitButton = null;\nthis.newLogingButton = null;\nthis.initialized = false;\n\nthis.onSubmit = function() {\n    if(!this.initialized) return;\n    \n    var context = this.textInput.value.trim();\n    if(context.length === 0) {\n        alert(\"Invalid context value.\");\n        return;\n    }\n    \n    var data = {}\n    data.context = context;\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectOverrideContext\"],[\"processMeta\",\"selectOverrideFile\"],data);\n}\n\nthis.onCancel = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectOverrideContext\"],[\"processMeta\",\"selectBaseFile\"]);\n}\n\n","setData":""}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":303,"height":116},"posInfo":{"x":749,"y":173},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":337,"height":102},"posInfo":{"x":748,"y":28},"state":0,"viewType":"Text"}}}},"selectBaseFile":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":71,"y":169}},"children":{"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":576,"height":235},"posInfo":{"x":39,"y":111},"state":-1,"viewType":"JSON"}},"metaFileSelector":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":355,"height":162},"posInfo":{"x":416,"y":97},"state":0,"viewType":"Output"},"resource":{"html":"<input type=\"radio\" value=\"create\" name=\"createUpdate\" id=\"base_load_createRadio\">Create</input>\n<input type=\"radio\" value=\"update\" name=\"createUpdate\" id=\"base_load_updateRadio\">Update</input>\n<br><br>\n<select id=\"base_load_metaFileSelect\"></select>\n<select id=\"base_load_fileTypeSelect\"></select>\n<br><br>\n<div id=\"base_load_metaFilePanel\">\nMeta File Name: <input type=\"text\" id=\"base_load_metaFileNameInput\"></input>\n<br><br>\n</div>\n<input type=\"button\" value=\"Submit\" id=\"base_load_submitButton\"></input>\n<input type=\"button\" value=\"Cancel\" id=\"base_load_cancelButton\"></input>","onLoad":"this.createRadio = document.getElementById(\"base_load_createRadio\");\nthis.updateRadio = document.getElementById(\"base_load_updateRadio\");\nthis.selectMetaFileElement = document.getElementById(\"base_load_metaFileSelect\");\nthis.selectFileTypeElement = document.getElementById(\"base_load_fileTypeSelect\");\nthis.metaFilePanel = document.getElementById(\"base_load_metaFilePanel\");\nthis.metaFileNameInput = document.getElementById(\"base_load_metaFileNameInput\");\nthis.submitButton = document.getElementById(\"base_load_submitButton\");\nthis.cancelButton = document.getElementById(\"base_load_cancelButton\");\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmitClick();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancelClick();\n}\n\nvar onRadioClick = function() {\n    instance.onRadioClick();\n}\n\nthis.createRadio.onclick = onRadioClick;\nthis.updateRadio.onclick = onRadioClick;\n\nthis.initialized = true;\n\nif(this.cachedData !== null) {\n    this.setData(this.cachedData);\n    this.cachedData = null;\n}","setData":"if(!data) return;\n\nif(!this.initialized) {\n    this.cachedData = data;\n    return;\n}\n\nthis.editExisting = data.editExisting;\n\nvar INVALID_ID = 0;\n\nif(this.selectMetaFileElement) {\n\n    apogeeapp.ui.removeAllChildren(this.selectMetaFileElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    \n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentMetaFileId) option.selected = true;\n    this.selectMetaFileElement.add(option);\n    \n    for(var fileDesc in data.metaFiles) {\n        var id = data.metaFiles[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentMetaFileId) option.selected = true;\n        this.selectMetaFileElement.add(option);\n    }\n}\n\nif(this.selectFileTypeElement) {\n    apogeeapp.ui.removeAllChildren(this.selectFileTypeElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentFileTypeId) option.selected = true;\n\n    this.selectFileTypeElement.add(option);\n    \n    for(var fileDesc in data.fileTypes) {\n        var id = data.fileTypes[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentFileTypeId) option.selected = true;\n        this.selectFileTypeElement.add(option);\n    }\n}\n\nthis.updateUiForCreateUpdate(data.editExisting);\n","constructorAddition":"this.data = null;\nthis.cachedData = null;\n\nthis.onSubmitClick = function() {\n    \n    var selectElement = this.editExisting ? this.selectMetaFileElement : this.selectFileTypeElement;\n    \n    if(!selectElement) {\n        alert(\"Error; UI not initialized\");\n        return;\n    }\n    \n    if(selectElement.length === 0) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var selectedIdString = selectElement.value;\n    if(!isFinite(selectedIdString)) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    var selectedId = Number(selectedIdString);\n\n    if(!this.editExisting) {\n        var metaFileName = this.metaFileNameInput.value.trim();\n        if((!metaFileName)||(metaFileName.length === 0)) {\n            alert(\"Invalid meta file name!\");\n            return;\n        }\n    }\n    \n    var fileSelection = {};\n    fileSelection.editExisting = this.editExisting;\n    if(this.editExisting) {\n        fileSelection.metaFileId = selectedId;\n    }\n    else {\n        fileSelection.fileTypeId = selectedId;\n        fileSelection.metaFileName = metaFileName;\n    }\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectBaseFile\"],[\"processMeta\",\"selectOverrideContext\"],fileSelection);\n}\n\nthis.onCancelClick = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectBaseFile\"],[\"processMeta\",\"selectBaseContext\"]);\n}\n\nthis.onRadioClick = function() {\n    var editExisting = this.updateRadio.checked;\n    this.updateUiForCreateUpdate(editExisting);\n}\n\nthis.updateUiForCreateUpdate = function(editExisting) {\n    this.editExisting = editExisting;\n    \n    if(this.selectFileTypeElement) {\n        this.selectFileTypeElement.style.display = editExisting ? \"none\" : \"\";\n    }\n    if(this.selectMetaFileElement) {\n        this.selectMetaFileElement.style.display = editExisting ? \"\" : \"none\";\n    }\n    if(this.metaFilePanel) {\n        this.metaFilePanel.style.display = editExisting ? \"none\" : \"\";\n    }\n    \n    var createRadioSelected = !editExisting;\n    var updateRadioSelected = editExisting;\n    \n    if((this.createRadio)&&(this.createRadio.checked != createRadioSelected)) {\n        this.createRadio.checked = createRadioSelected;\n    }\n    if((this.updateRadio)&&(this.updateRadio.checked != updateRadioSelected)) {\n        this.updateRadio.checked = updateRadioSelected;\n    }\n}\n\n"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":529,"height":319},"posInfo":{"x":259,"y":30},"state":-1,"viewType":"Formula"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":723,"height":349},"posInfo":{"x":33,"y":33},"state":-1,"viewType":"Text"}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":270,"height":125},"posInfo":{"x":41,"y":330},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":115},"posInfo":{"x":381,"y":324},"state":0,"viewType":"Text"}}}},"selectBaseContext":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":42,"y":208}},"children":{"contextControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":365,"height":81},"posInfo":{"x":25,"y":51},"state":0,"viewType":"Output"},"resource":{"html":"Context: <input type=\"text\" id=\"base_context_text\"></input>\n<br><br>\n<input type=\"button\" id=\"base_context_submit\" value=\"Submit\"></input>\n<input type=\"button\" id=\"base_context_cancel\" value=\"Cancel\"></input>","onLoad":"this.textInput = document.getElementById(\"base_context_text\");\nthis.submitButton = document.getElementById(\"base_context_submit\");\nthis.cancelButton = document.getElementById(\"base_context_cancel\");\nthis.initialized = true;\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmit();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancel();\n}","constructorAddition":"this.textInput = null;\nthis.submitButton = null;\nthis.newLogingButton = null;\nthis.initialized = false;\n\nthis.onSubmit = function() {\n    if(!this.initialized) return;\n    \n    var context = this.textInput.value.trim();\n    if(context.length === 0) {\n        alert(\"Invalid context value.\");\n        return;\n    }\n    \n    var data = {}\n    data.context = context;\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectBaseContext\"],[\"processMeta\",\"selectBaseFile\"],data);\n}\n\nthis.onCancel = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectBaseContext\"],[\"login\"]);\n}\n\n","setData":""}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":303,"height":116},"posInfo":{"x":749,"y":173},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":337,"height":102},"posInfo":{"x":748,"y":28},"state":0,"viewType":"Text"}}}},"working":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":125,"y":125}},"children":{"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":304,"height":46},"posInfo":{"x":28,"y":16},"state":0,"viewType":"Text"}},"baseFileRequest":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":648,"height":686},"posInfo":{"x":652,"y":95},"state":-1,"viewType":"JSON"}},"overrideFileRequest":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":546,"height":261},"posInfo":{"x":785,"y":94},"state":-1,"viewType":"JSON"}},"overrideMetaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":239,"height":33},"posInfo":{"x":938,"y":12},"state":0,"viewType":"Text"}},"baseMetaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":228,"height":42},"posInfo":{"x":534,"y":22},"state":0,"viewType":"Text"}},"metaResponseToTable":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":659,"height":400},"posInfo":{"x":823,"y":164},"state":-1,"viewType":"Code"}},"processMetaFileEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":941,"height":631},"posInfo":{"x":374,"y":160},"state":0,"viewType":"Private"}},"processedFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":900,"height":718},"posInfo":{"x":390,"y":298},"state":0,"viewType":"JSON"}},"baseFileDOWNLOADED":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":954,"height":624},"posInfo":{"x":38,"y":160},"state":-1,"viewType":"JSON"}},"baseFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":754,"height":669},"posInfo":{"x":14,"y":500},"state":0,"viewType":"Text"}},"overrideFileDOWNLOADED":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":689,"height":353},"posInfo":{"x":94,"y":177},"state":0,"viewType":"Text"}},"overrideFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":716,"height":553},"posInfo":{"x":18,"y":575},"state":0,"viewType":"Text"}}}}}}}},"micemetarDataAccess":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":216,"y":34}},"children":{"createRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":560,"height":321},"posInfo":{"x":32,"y":389},"state":-1,"viewType":"Code"}},"recordsToCreateInstructions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":834,"height":391},"posInfo":{"x":30,"y":472},"state":-1,"viewType":"Code"}},"createCommitBody":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":568,"height":400},"posInfo":{"x":629,"y":225},"state":-1,"viewType":"Code"}},"createRequestOptions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":523,"height":254},"posInfo":{"x":822,"y":379},"state":-1,"viewType":"Code"}},"host":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":353,"height":71},"posInfo":{"x":16,"y":6},"state":0,"viewType":"Text"}},"commitUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":433,"height":107},"posInfo":{"x":17,"y":91},"state":-1,"viewType":"Formula"}},"requestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":450,"height":68},"posInfo":{"x":16,"y":51},"state":-1,"viewType":"Formula"}},"dataSetInfo":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":882,"height":611},"posInfo":{"x":25,"y":169},"state":-1,"viewType":"JSON"}},"createUpdateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":886,"height":655},"posInfo":{"x":36,"y":248},"state":-1,"viewType":"Code"}},"createCreateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":994,"height":643},"posInfo":{"x":35,"y":209},"state":-1,"viewType":"Code"}},"getFieldErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":512,"height":68},"posInfo":{"x":761,"y":616},"state":-1,"viewType":"Code"}},"getRecordErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":81},"posInfo":{"x":762,"y":664},"state":-1,"viewType":"Code"}},"createDeleteInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":678,"height":540},"posInfo":{"x":36,"y":289},"state":-1,"viewType":"Code"}},"getRecordInfo":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":480,"height":400},"posInfo":{"x":818,"y":427},"state":-1,"viewType":"Code"}},"combinedEntriesToInstructionList":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":721,"height":524},"posInfo":{"x":31,"y":516},"state":-1,"viewType":"Private"}},"getCommitPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":741,"height":400},"posInfo":{"x":374,"y":112},"state":-1,"viewType":"Code"}},"getRequestPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":810,"height":400},"posInfo":{"x":376,"y":30},"state":-1,"viewType":"Code"}},"customRequestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":387,"height":300},"posInfo":{"x":18,"y":128},"state":-1,"viewType":"JSON"}},"getCustomRequestPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":611,"height":400},"posInfo":{"x":376,"y":69},"state":-1,"viewType":"Code"}}}}}}