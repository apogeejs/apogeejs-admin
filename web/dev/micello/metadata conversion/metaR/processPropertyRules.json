{"fileType":"apogee workspace","jsLinks":["http://localhost:8383/apogee/dev/micello/metadata%20conversion/lib/taskAppModule.js"],"cssLinks":[],"workspace":{"fileType":"apogee workspace","version":0.2,"data":{"name":"processPropertyRules","type":"apogee.Folder","children":{"tasks":{"name":"tasks","type":"apogee.Folder","children":{"login":{"name":"login","type":"apogee.Folder","children":{"loginUrl":{"name":"loginUrl","type":"apogee.JsonTable","updateData":{"data":"http://eng.micello.com/TestAuthorization/loginjson","description":""}},"loginControl":{"name":"loginControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return loginUrl;","supplementalCode":"","description":""}},"sessionResponse":{"name":"sessionResponse","type":"apogee.JsonTable","updateData":{"data":{"responseCode":1,"paramTable":[{"urlPattern":"http://eng.micello.com/mfs","params":[["key","S1sshnIV1Rk9EGz32Acrl8aSYsTKYd"]]},{"urlPattern":"http://mfs.micello.com","params":[["key","nS71TmmSmgvwcXlfrGrin38AMLP48B"]]},{"urlPattern":"http://factory-mfs.micello.com","params":[["key","yfZkszbELEy6lxz1sSeUZscJlC41hL"]]},{"urlPattern":"http://mfs-hub-master.micello.com/","params":[["key","pvLuRozg2EZVrpE8nCpCrQT0FOHcLh"]]},{"urlPattern":"http://mfs-us-1.micello.com","params":[["key","nS71TmmSmgvwcXlfrGrin38AMLP48B"]]},{"urlPattern":"http://eng.micello.com/mfs-node","params":[["key","dnSkxyrgxRNtGMUYbhgV8uvdPW1V4U"]]}],"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=65b3f3ogeagunmsqjhqvjc4s63"},"description":""}},"taskResult":{"name":"taskResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\nvar sessionKey;\nif(sessionResponse) {\n    if(sessionResponse.responseCode === 1) {\n        data = {};\n        data.sessionKey = sessionResponse.sessionKey;\n        output.data = data;\n        taskAppModule.taskCompleted(apogeeMessenger,[\"login\"],[\"processMeta\",\"selectBaseContext\"],data);\n        return \"SUCCESS\";\n    }\n    else {\n        alert(\"There was an error: \" + JSON.stringify(sessionResponse));\n        return \"ERROR\";\n    }\n}\nelse {\n    return \"INCOMPLETE\";\n}","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=65b3f3ogeagunmsqjhqvjc4s63"}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":[]},"description":""}}}},"completed":{"name":"completed","type":"apogee.Folder","children":{"resetControl":{"name":"resetControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":false,"data":null},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":false,"previousTask":null},"description":""}}}},"getSessionKey":{"name":"getSessionKey","type":"apogee.FunctionTable","updateData":{"argList":[],"functionBody":"if(login.result.valid) {\n    return login.result.data.sessionKey;\n}\nelse {\n    return null;\n}\n","supplementalCode":"","description":""}},"currentTask":{"name":"currentTask","type":"apogee.JsonTable","updateData":{"data":["processMeta","selectOverrideFile"],"description":""}},"getFileTypeName":{"name":"getFileTypeName","type":"apogee.FunctionTable","updateData":{"argList":["fileTypeId"],"functionBody":"return commonData.fileTypeIdToName[fileTypeId];","supplementalCode":"","description":""}},"commonData":{"name":"commonData","type":"apogee.Folder","children":{"fileTypeList":{"name":"fileTypeList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var sessionKey = getSessionKey();\nif(!sessionKey) return null;\n\nvar fileTypeSearch = {};\nfileTypeSearch.search = \"file_type_list\";\n\nreturn micemetarDataAccess.getRequestPromise(fileTypeSearch,sessionKey);\n\n","supplementalCode":"","description":""}},"fileTypeIdToName":{"name":"fileTypeIdToName","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!fileTypeList) return null;\n\nvar output = {};\n\nvar addToMap = (record) => {output[record.Id] = record.Fields.file_type_name;}\n\nfileTypeList.data.Response.forEach(addToMap);\n\nreturn output;","supplementalCode":"","description":""}},"fileTypeNameToId":{"name":"fileTypeNameToId","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!fileTypeList) return null;\n\nvar output = {};\n\nvar addToMap = (record) => {output[record.Fields.file_type_name] = record.Id;}\n\nfileTypeList.data.Response.forEach(addToMap);\n\nreturn output;","supplementalCode":"","description":""}}}},"getFileTypeId":{"name":"getFileTypeId","type":"apogee.FunctionTable","updateData":{"argList":["fileTypeName"],"functionBody":"return commonData.fileTypeNameToId[fileTypeName];","supplementalCode":"","description":""}},"processMeta":{"name":"processMeta","type":"apogee.Folder","children":{"selectOverrideFile":{"name":"selectOverrideFile","type":"apogee.Folder","children":{"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!context) return null;\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"metaFileSelector":{"name":"metaFileSelector","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif((commonData.fileTypeList)&&(commonData.fileTypeList.success)) {\n    var fileTypes = {};\n    output.fileTypes = fileTypes;\n    \n    var loadFileTypeEntry = (record) => { fileTypes[record.Fields.file_type_name] = record.Id };\n\n    var fileTypeRecords = commonData.fileTypeList.data.Response;\n    fileTypeRecords.forEach(loadFileTypeEntry);\n}\n\nif((metaFileList)&&(metaFileList.success)) {\n    var metaFiles = {};\n    output.metaFiles = metaFiles;\n    \n    var loadMetaFileEntry = (record) => {\n        var fileTypeName = getFileTypeName(record.Fields.file_type_id);\n        var metaName = record.Fields.name;\n        metaFiles[fileTypeName + \":\" + metaName] = record.Id;\n    }\n    \n    var metaFileRecords = metaFileList.data.Response;\n    metaFileRecords.forEach(loadMetaFileEntry);\n}\n\noutput.currentMetaFileId = metaFileId;\noutput.currentFileTypeId = fileTypeId;\noutput.editExisting = fileSelection ? fileSelection.editExisting : false;\n\nreturn output;","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectOverrideContext.result.valid) {\n    return selectOverrideContext.result.data.context;\n}\nelse {\n    return null;\n}\n","supplementalCode":"","description":""}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getSessionKey();\n","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"editExisting":true,"metaFileId":4380}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["processMeta","selectOverrideContext"]},"description":""}}}},"selectOverrideContext":{"name":"selectOverrideContext","type":"apogee.Folder","children":{"contextControl":{"name":"contextControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"context":"~anthem"}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["processMeta","selectBaseFile"]},"description":""}}}},"selectBaseFile":{"name":"selectBaseFile","type":"apogee.Folder","children":{"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!context) return null;\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"metaFileSelector":{"name":"metaFileSelector","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif((commonData.fileTypeList)&&(commonData.fileTypeList.success)) {\n    var fileTypes = {};\n    output.fileTypes = fileTypes;\n    \n    var loadFileTypeEntry = (record) => { fileTypes[record.Fields.file_type_name] = record.Id };\n\n    var fileTypeRecords = commonData.fileTypeList.data.Response;\n    fileTypeRecords.forEach(loadFileTypeEntry);\n}\n\nif((metaFileList)&&(metaFileList.success)) {\n    var metaFiles = {};\n    output.metaFiles = metaFiles;\n    \n    var loadMetaFileEntry = (record) => {\n        var fileTypeName = getFileTypeName(record.Fields.file_type_id);\n        var metaName = record.Fields.name;\n        metaFiles[fileTypeName + \":\" + metaName] = record.Id;\n    }\n    \n    var metaFileRecords = metaFileList.data.Response;\n    metaFileRecords.forEach(loadMetaFileEntry);\n}\n\noutput.currentMetaFileId = metaFileId;\noutput.currentFileTypeId = fileTypeId;\noutput.editExisting = fileSelection ? fileSelection.editExisting : false;\n\nreturn output;","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectBaseContext.result.valid) {\n    return selectBaseContext.result.data.context;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getSessionKey();\n","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"editExisting":true,"metaFileId":1}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["processMeta","selectBaseContext"]},"description":""}}}},"selectBaseContext":{"name":"selectBaseContext","type":"apogee.Folder","children":{"contextControl":{"name":"contextControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"","supplementalCode":"","description":""}},"result":{"name":"result","type":"apogee.JsonTable","updateData":{"data":{"valid":true,"data":{"context":"public"}},"description":""}},"state":{"name":"state","type":"apogee.JsonTable","updateData":{"data":{"active":true,"previousTask":["login"]},"description":""}}}},"working":{"name":"working","type":"apogee.Folder","children":{"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return getSessionKey();","supplementalCode":"","description":""}},"baseFileRequest":{"name":"baseFileRequest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!baseMetaFileId) return null;\n\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_full\";\nsearchDef.id = baseMetaFileId;\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n","supplementalCode":"","description":""}},"overrideFileRequest":{"name":"overrideFileRequest","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!overrideMetaFileId) return null;\n\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_full\";\nsearchDef.id = overrideMetaFileId;\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n","supplementalCode":"","description":""}},"overrideMetaFileId":{"name":"overrideMetaFileId","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectOverrideFile.result.valid) {\n    return selectOverrideFile.result.data.metaFileId;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"baseMetaFileId":{"name":"baseMetaFileId","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(selectBaseFile.result.valid) {\n    return selectBaseFile.result.data.metaFileId;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"metaResponseToTable":{"name":"metaResponseToTable","type":"apogee.FunctionTable","updateData":{"argList":["metaResponse"],"functionBody":"var metaFileRecord = metaResponse.data.Response[0];\n\n//functions\nvar isRecipeEntry = record => (record.Type == \"recipe_entry\");\nvar isFileEntry = record => (record.Type == \"file_entry\");\n\nvar fileEntryMap = {};\nvar addToFileEntryMap = record => fileEntryMap[record.Id] = record;\n\nvar metaBody = {};\nvar makeMetaBody = recipeEntry => {\n    var fileEntryId = recipeEntry.Fields.file_entry_id;\n    var fileEntry = fileEntryMap[fileEntryId];\n    \n    var sectionName = fileEntry.Fields.entry_section;\n    var entryKey = fileEntry.Fields.entry_value;\n    var entryData = fileEntry.Fields.entry_data;\n    \n    var section = metaBody[sectionName];\n    if(!section) {\n        section = {};\n        metaBody[sectionName] = section;\n    }\n    \n    section[entryKey] = entryData;\n}\n\n//process\nmetaResponse.data.Records.filter(isFileEntry).forEach(addToFileEntryMap);\nmetaResponse.data.Records.filter(isRecipeEntry).forEach(makeMetaBody);\n\nvar metaFile = {};\nmetaFile.nm = metaFileRecord.Fields.name;\nmetaFile.data = metaBody;\n\nreturn metaFile;\n","supplementalCode":"","description":""}},"overrideFile":{"name":"overrideFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!overrideFileRequest) return null;\nif(!overrideFileRequest.success) throw new Error(overrideFileRequest.msg);\n\nreturn metaResponseToTable(overrideFileRequest);","supplementalCode":"","description":""}},"baseFile":{"name":"baseFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!baseFileRequest) return null;\nif(!baseFileRequest.success) throw new Error(baseFileRequest.msg);\n\nreturn metaResponseToTable(baseFileRequest);","supplementalCode":"","description":""}},"processMetaFileEntry":{"name":"processMetaFileEntry","type":"apogee.FunctionTable","updateData":{"argList":["key","entry","baseEntryMap"],"functionBody":"if(entry.extends) {\n    processExtendsEntry(key,entry,baseEntryMap);\n}\nelse if(entry.modifies) {\n    processModifyEntry(key,entry,baseEntryMap);\n}\nelse if(entry.deletes) {\n    processDeletesEntry(key,entry,baseEntryMap);\n}\nelse {\n    processCreateEntry(key,entry,baseEntryMap);\n}\n\n\n","supplementalCode":"\nfunction processCreateEntry(key,createEntry,baseMap) {\n    baseMap[key] = createEntry;\n}\n\nfunction processExtendsEntry(key,extendsEntry,baseMap) {\n    var extendedEntry = baseMap[extendsEntry.extends];\n    if(!extendedEntry) {\n        throw new Error(\"Extended entry not found: \" + extendsEntry.extends);\n    }\n    \n    //make the new entry\n    var newEntry = apogee.util.jsonCopy(extendedEntry);\n    newEntry.name = extendsEntry.name;\n    newEntry.extends = extendsEntry.extends;\n    \n    //insert it\n    if(baseMap[key]) throw new Error(\"Repeat entry: \" + key);\n    baseMap[key] = newEntry;\n    \n    //do any modification\n    doModify(newEntry,extendsEntry);\n}\n\nfunction processModifyEntry(key,modifyEntry,baseMap) {\n    var modifiedEntry = baseMap[key];\n    if(!modifiedEntry) throw new Error(\"Modified entry not found: \" + key);\n    \n    //do any modification\n    doModify(modifiedEntry,modifyEntry);\n}\n\nfunction processDeleteEntry(key,deleteEntry,baseMap) {\n    var deletedEntry = baseMap[key];\n    if(!deletedEntry) throw new Error(\"Deleted entry not found: \" + key);\n    \n    //do any modification\n    delete baseMap[key];\n}\n\nfunction doModify(entryToModify,modifyInstructions) {\n    \n}\n\n","description":""}},"processedFile":{"name":"processedFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!baseFile) return;\n\nvar output = {};\noutput.data = {};\n\nfor(var sectionName in baseFile.data) {\n    //get the sections\n    var overrideSection = baseFile.data[sectionName];\n    var outSection = output.data[sectionName];\n\n    if(!outSection) {\n        outSection = {};\n        output.data[sectionName] = outSection;\n    }\n    \n    //process the entries\n    for(var entryKey in overrideSection) {\n        var overrideEntry = overrideSection[entryKey];\n        \n        processMetaFileEntry(entryKey,overrideEntry,outSection);\n        \n    }\n}\n\nreturn output;","supplementalCode":"","description":""}}}}}}}},"micemetarDataAccess":{"name":"micemetarDataAccess","type":"apogee.Folder","children":{"createRecord":{"name":"createRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordInfo","fieldMap"],"functionBody":"var record = {};\n\nrecord.Id = getId();\nrecord.Type = recordInfo.name;\nrecord.Fields = fieldMap;\nrecord.read_perm = READ_PERM;\nrecord.edit_perm = EDIT_PERM;\n\nreturn record;","supplementalCode":"var READ_PERM = 2;\nvar EDIT_PERM = 15;\n\nvar nextId = -1;\n\nfunction getId() {\n    return nextId--;\n}","description":"This method creates a record given the field values and record info \nfrom the data set info. It creates and ID and uses standard permissions."}},"recordsToCreateInstructions":{"name":"recordsToCreateInstructions","type":"apogee.FunctionTable","updateData":{"argList":["recordList"],"functionBody":"var instructions = [];\n\nfor(var i = 0; i < recordList.length; i++) {\n    var createRecord = recordList[i];\n    var instruction = createCreateInstruction(createRecord);\n    instructions.push(instruction);\n}\n\nreturn instructions;","supplementalCode":"","description":"This creates a list of create instructions to go along with a list of records to be created.\n\nThere is the option to assign the ID or to leave it as undefined, in which case\nan automatically incremented ID will be assigned. (For consistency in the data\nset, either all records should be preassigned or all records should be \nautomatically assigned."}},"createCommitBody":{"name":"createCommitBody","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage"],"functionBody":"var commit = {};\nvar actions = [];\n\nif(commitMessage.length === 0) throw new Error(\"Commit message missing!\");\n\ncommit.Name = dataSetInfo.name;\ncommit.Message = commitMessage;\ncommit.Actions = actions;\n\n//single action with commits\nvar action = {};\naction.Title = \"bulk create commit\";\naction.Instr = instructionList;\nactions.push(action);\n\nreturn commit","supplementalCode":"","description":"This creates a body for a commit request, given a list of instructions and a commit message."}},"createRequestOptions":{"name":"createRequestOptions","type":"apogee.FunctionTable","updateData":{"argList":["bodyJson","sessionKey"],"functionBody":"var header = {};\nheader[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\nheader.sessionKey = sessionKey;\nheader[\"proto-version\"] = \"4.0\";\nheader[\"db-version\"] = dataSetInfo.version;\n\nrequestInfo = {};\nrequestInfo.header = header;\nif(bodyJson) {\n    requestInfo.method = \"POST\";\n    requestInfo.body = JSON.stringify(bodyJson);\n}\n\nreturn requestInfo;\n","supplementalCode":"","description":"This creates the requestOptions, suitable for apogee.net.jsonRequest, to go with an type of request to the workingset (micemetarequest) server."}},"host":{"name":"host","type":"apogee.JsonTable","updateData":{"data":"http://localhost:8080/micemetarws","description":""}},"commitUrl":{"name":"commitUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/commit\";\nreturn value;\n\n","supplementalCode":"","description":""}},"requestUrl":{"name":"requestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/cannedsearch\";\nreturn value;\n\n","supplementalCode":"","description":""}},"dataSetInfo":{"name":"dataSetInfo","type":"apogee.JsonTable","updateData":{"data":{"records":{"file_entry_relation":{"idField":"file_entry_rel_id","name":"file_entry_relation","foreignList":[],"fields":[{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"ref_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"relation_type","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileEntryRelation"},"com_file_entry":{"idField":"com_file_entry_id","name":"com_file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"com_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.ComFile"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_group","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFileEntry"},"file_type":{"idField":"file_type_id","name":"file_type","foreignList":[{"remoteRecord":"file_entry","name":"file_entry_list","isUnique":false,"remoteField":"file_type_id","restrictDelete":true}],"fields":[{"defaultValue":null,"name":"file_type_name","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileType"},"file_entry":{"idField":"file_entry_id","name":"file_entry","foreignList":[{"remoteRecord":"file_entry_relation","name":"file_entry_ref_list","isUnique":false,"remoteField":"file_entry_id","restrictDelete":true}],"fields":[{"defaultValue":null,"name":"entry_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"entry_section","nullOk":true,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_value","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"option_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_data","nullOk":false,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.FileEntry"},"recipe_entry":{"idField":"recipe_entry_id","name":"recipe_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"insertion_info","nullOk":true,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.RecipeEntry"},"com_file":{"idField":"com_file_id","name":"com_file","foreignList":[{"remoteRecord":"com_file_entry","name":"com_file_entry_list","isUnique":false,"remoteField":"com_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"ref","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFile"},"meta_file":{"idField":"meta_file_id","name":"meta_file","foreignList":[{"remoteRecord":"recipe_entry","name":"recipe_entry_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"},{"remoteRecord":"meta_ref_entry","name":"base_file_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.MetaFile"},"meta_ref_entry":{"idField":"meta_ref_entry_id","name":"meta_ref_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"base_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"}],"recordClass":"com.micello.micemetar.data.MetaRefEntry"}},"name":"Micemetar","version":"5.0"},"description":""}},"createUpdateInstruction":{"name":"createUpdateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["initialRecord","targetRecord"],"functionBody":"if(initialRecord.Id != targetRecord.Id) {\n    throw new Error(\"Record ID mismatch in create update instruction for target record: \" + getRecordErrString(targetRecord));\n}\n\nif(initialRecord.Type != targetRecord.Type) {\n    throw new Error(\"Inital and target record types do not match. Target record: \" + getRecordErrString(targetRecord));\n}\n\nvar recordsDifferent = false;\n\nvar recordInfo = getRecordInfo(initialRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Update\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = initialRecord.Id;\n\ninstruction.initialReadPerm = initialRecord.read_perm;\ninstruction.initialEditPerm = initialRecord.edit_perm;\n\nif(initialRecord.readPerm != targetRecord.readPerm) {\n    instruction.targetReadPerm = targetRecord.read_perm;\n    recordsDifferent = true;\n}\n\nif(initialRecord.editPerm != targetRecord.editPerm) {\n    instruction.targetEditPerm = targetRecord.edit_perm;\n    recordsDifferent = true;\n}\n\nvar initialData = {};\ninstruction.Initial = initialData;\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    \n    var initialValue;\n    var targetValue;\n    \n    var initialValue = initialRecord.Fields[field.name];\n    var targetValue = targetRecord.Fields[field.name];\n    \n    //validate target values\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n        }\n    }\n    \n    if(!fieldsMatch(initialValue,targetValue,field)) {\n        initialData[field.name] = initialValue;\n        targetData[field.name] = targetValue;\n        recordsDifferent = true;\n    }\n}\n\nif(recordsDifferent) {\n    return instruction;\n}\nelse {\n    return null;\n}\n","supplementalCode":"function fieldsMatch(initialValue,targetValue,fieldInfo) {\n    if(fieldInfo.fieldClass === \"java.lang.String\") {\n        //compare strings with \"==\"\n        return (initialValue == targetValue);\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"java.lang\")) {\n        //compare other basic values with \"===\"\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"com.micello\")) {\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONObject\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONArray\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else {\n        throw new Error(\"unrecognized field type: \" + fieldInfo.fieldClass);\n    }\n}\n\nfunction compareJsonData(a,b) {\n    var an = apogee.util.getNormalizedObjectCopy(a);\n    var bn = apogee.util.getNormalizedObjectCopy(b);\n    var aString = JSON.stringify(an);\n    var bString = JSON.stringify(bn);\n    return aString == bString;\n}\n    ","description":"This function creates an update instruction given an initial and target record. If the records are the same then NULL is returned. (No update is needed.)"}},"createCreateInstruction":{"name":"createCreateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["createRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(createRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Create\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = createRecord.Id;\n\ninstruction.targetReadPerm = createRecord.read_perm;\ninstruction.targetEditPerm = createRecord.edit_perm;\n\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var targetValue;\n    var targetValue = createRecord.Fields[field.name];\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecord,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecord,field));\n        }\n    }\n    \n    targetData[field.name] = targetValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getFieldErrString":{"name":"getFieldErrString","type":"apogee.FunctionTable","updateData":{"argList":["record","fieldInfo"],"functionBody":"return getRecordErrString(record) + \" - \" + fieldInfo.name;","supplementalCode":"","description":""}},"getRecordErrString":{"name":"getRecordErrString","type":"apogee.FunctionTable","updateData":{"argList":["record"],"functionBody":"return record.Type + \" \" + record.Id;","supplementalCode":"","description":""}},"createDeleteInstruction":{"name":"createDeleteInstruction","type":"apogee.FunctionTable","updateData":{"argList":["deleteRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(deleteRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Delete\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = deleteRecord.Id;\n\ninstruction.initialReadPerm = deleteRecord.read_perm;\ninstruction.initialEditPerm = deleteRecord.edit_perm;\n\nvar initialData = {};\ninstruction.Initial = initialData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var initialValue = deleteRecord.Fields[field.name];\n    \n    initialData[field.name] = initialValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getRecordInfo":{"name":"getRecordInfo","type":"apogee.FunctionTable","updateData":{"argList":["recordType"],"functionBody":"var recordInfo = dataSetInfo.records[recordType];\n\nif(!recordInfo) {\n    throw new Error(\"Record type not found in getRecordInfo: \" + recordType);\n}\n\nreturn recordInfo;","supplementalCode":"","description":""}},"combinedEntriesToInstructionList":{"name":"combinedEntriesToInstructionList","type":"apogee.FunctionTable","updateData":{"argList":["combinedEntries"],"functionBody":"var output = [];\nfor(var key in combinedEntries) {\n    var entry = combinedEntries[key];\n    var instruction = getInstructionForCombinedEntry(entry);\n    if(instruction) {\n        output.push(instruction);\n    }\n}\n\nreturn output;","supplementalCode":"function getInstructionForCombinedEntry(combinedEntry) {\n    var newEntry = combinedEntry.newEntry;\n    var oldEntry = combinedEntry.oldEntry;\n    \n    if(newEntry) {\n        if(!oldEntry) {\n            console.log(\"Create: \" + newEntry.Id);\n            return createCreateInstruction(newEntry);\n        }\n        else {\n            //this will return null for matching records\n            console.log(\"Update(maybe): \" + newEntry.Id);\n            return createUpdateInstruction(oldEntry,newEntry);\n        }\n    }\n    else if(oldEntry) {\n        console.log(\"Delete: \" + oldEntry.Id);\n        return createDeleteInstruction(oldEntry);\n    }\n    \n    return null;\n}\n\nfunction entriesDifferent(entry1,entry2) {\n    var string1 = JSON.stringify(apogee.util.getNormalizedCopy(entry1));\n    var string2 = JSON.stringify(apogee.util.getNormalizedCopy(entry2));\n    return (string1 == string2);\n}","description":"This function takes a combined entry map of the format:\n\n{\n  \"some-identifier\":{\n    \"oldEntry\":{original record entry, if applicable},\n    \"newEntry\":{new record entry, if applicable}\n  },\n  ...\n}\n\nIt returns an instruction list.\n\n"}},"getCommitPromise":{"name":"getCommitPromise","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage","sessionKey"],"functionBody":"var commitBody = createCommitBody(instructionList,commitMessage);\nvar requestOptions = createRequestOptions(commitBody,sessionKey);\nvalue = apogee.net.jsonRequest(commitUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}},"getRequestPromise":{"name":"getRequestPromise","type":"apogee.FunctionTable","updateData":{"argList":["requestBody","sessionKey"],"functionBody":"var requestOptions = createRequestOptions(requestBody,sessionKey);\nvalue = apogee.net.jsonRequest(requestUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}},"customRequestUrl":{"name":"customRequestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/request\";\nreturn value;","supplementalCode":"","description":""}},"getCustomRequestPromise":{"name":"getCustomRequestPromise","type":"apogee.FunctionTable","updateData":{"argList":["requestBody","sessionKey"],"functionBody":"var requestOptions = createRequestOptions(requestBody,sessionKey);\nvalue = apogee.net.jsonRequest(customRequestUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}}}}}}},"components":{"tasks":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":37,"y":37}},"children":{"login":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":55,"y":32}},"children":{"loginUrl":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":465,"height":43},"posInfo":{"x":26,"y":27},"state":-1,"viewType":"Text"}},"loginControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":322,"height":84},"posInfo":{"x":320,"y":36},"state":0,"viewType":"Output"},"resource":{"html":"","css":"","setData":"this.loginUrl = data;","constructorAddition":"\n\n//this uses the updated version of test authorization that takes and returns a JSON\nthis.onClick = function() {\n    \n    //on click\n    var bodyJson = {};\n    bodyJson.userName = resource.userInput.value;\n    bodyJson.password = resource.passwordInput.value;\n    \n    //cleaer password field\n    resource.passwordInput.value = \"\";\n    \n    var options = {};\n    options.body = JSON.stringify(bodyJson);\n    options.method = \"POST\";\n    \n    var requestPromise = apogee.net.jsonRequest(this.loginUrl,options);\n    \n    //set the response\n    mode.getMessenger().asynchDataUpdate(\"sessionResponse\",requestPromise);\n}","init":"\nvar label1 = document.createElement(\"label\");\nlabel1.for = \"userInput\";\nlabel1.innerHTML = \"User:\"\nelement.appendChild(label1);\n\nvar input1 = document.createElement(\"input\");\ninput1.id = \"userInput\";\nresource.userInput = input1;\nelement.appendChild(input1);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar label2 = document.createElement(\"label\");\nlabel2.for = \"passwordInput\";\nlabel2.innerHTML = \"Password:\"\nelement.appendChild(label2);\n\nvar input2 = document.createElement(\"input\");\ninput2.id = \"passwordInput\";\ninput2.type = \"password\";\nresource.passwordInput = input2;\nelement.appendChild(input2);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar button = document.createElement(\"button\");\nbutton.innerHTML = \"Login\";\nelement.appendChild(button);\n\nvar instance = this;\nbutton.onclick = function() {\n    instance.onClick();\n}\n\n\n"}},"sessionResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":697,"height":93},"posInfo":{"x":24,"y":192},"state":0,"viewType":"Text"}},"taskResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":754,"height":319},"posInfo":{"x":378,"y":250},"state":0,"viewType":"Formula"}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":463,"height":119},"posInfo":{"x":34,"y":431},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":66},"posInfo":{"x":33,"y":327},"state":0,"viewType":"Text"}}}},"completed":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":384,"y":69}},"children":{"resetControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":322,"height":43},"posInfo":{"x":62,"y":17},"state":0,"viewType":"Output"},"resource":{"html":"<input type=\"button\" id=\"completed_reset\" value=\"Reset\"></input>","onLoad":"this.resetButton = document.getElementById(\"completed_reset\");\nthis.initialized = true;\n\nvar instance = this;\nthis.resetButton.onclick = function() {\n    instance.onReset();\n}","constructorAddition":"this.onReset = function() {\n\n    var clearTaskList = [\n        [\"editMeta\",\"selectMetaContext\"],\n        [\"editMeta\",\"selectMetaFile\"],\n        [\"editMeta\",\"editMetaFile\"],\n        [\"editCom\",\"selectCid\"],\n        [\"editCom\",\"editComFile\"],\n        [\"submit\"],\n        [\"completed\"]\n    ];\n    taskAppModule.clearTasksAndRestartFrom(mode.getMessenger(),clearTaskList,[\"switcher\"]);\n}","setData":""}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":253,"height":77},"posInfo":{"x":372,"y":152},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":136},"posInfo":{"x":292,"y":321},"state":0,"viewType":"Text"}}}},"getSessionKey":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":447,"height":400},"posInfo":{"x":47,"y":456},"state":0,"viewType":"Code"}},"currentTask":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":287,"height":92},"posInfo":{"x":15,"y":212},"state":0,"viewType":"Text"}},"getFileTypeName":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":593,"height":400},"posInfo":{"x":47,"y":496},"state":-1,"viewType":"Code"}},"commonData":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":482,"y":496}},"children":{"fileTypeList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":727,"height":325},"posInfo":{"x":65,"y":18},"state":0,"viewType":"Formula"}},"fileTypeIdToName":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":722,"height":320},"posInfo":{"x":36,"y":461},"state":-1,"viewType":"JSON"}},"fileTypeNameToId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":685,"height":300},"posInfo":{"x":42,"y":404},"state":-1,"viewType":"JSON"}}}},"getFileTypeId":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":670,"height":400},"posInfo":{"x":45,"y":539},"state":-1,"viewType":"Code"}},"processMeta":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":195,"y":73}},"children":{"selectOverrideFile":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":50,"y":50}},"children":{"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":393,"height":128},"posInfo":{"x":38,"y":111},"state":-1,"viewType":"Formula"}},"metaFileSelector":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":359,"height":116},"posInfo":{"x":445,"y":93},"state":0,"viewType":"Output"},"resource":{"html":"<input type=\"radio\" value=\"create\" name=\"createUpdate\" id=\"override_load_createRadio\">Create</input>\n<input type=\"radio\" value=\"update\" name=\"createUpdate\" id=\"override_load_updateRadio\">Update</input>\n<br><br>\n<select id=\"override_load_metaFileSelect\"></select>\n<select id=\"override_load_fileTypeSelect\"></select>\n<br><br>\n<div id=\"override_load_metaFilePanel\">\nMeta File Name: <input type=\"text\" id=\"override_load_metaFileNameInput\"></input>\n<br><br>\n</div>\n<input type=\"button\" value=\"Submit\" id=\"override_load_submitButton\"></input>\n<input type=\"button\" value=\"Cancel\" id=\"override_load_cancelButton\"></input>","onLoad":"this.createRadio = document.getElementById(\"override_load_createRadio\");\nthis.updateRadio = document.getElementById(\"override_load_updateRadio\");\nthis.selectMetaFileElement = document.getElementById(\"override_load_metaFileSelect\");\nthis.selectFileTypeElement = document.getElementById(\"override_load_fileTypeSelect\");\nthis.metaFilePanel = document.getElementById(\"override_load_metaFilePanel\");\nthis.metaFileNameInput = document.getElementById(\"override_load_metaFileNameInput\");\nthis.submitButton = document.getElementById(\"override_load_submitButton\");\nthis.cancelButton = document.getElementById(\"override_load_cancelButton\");\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmitClick();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancelClick();\n}\n\nvar onRadioClick = function() {\n    instance.onRadioClick();\n}\n\nthis.createRadio.onclick = onRadioClick;\nthis.updateRadio.onclick = onRadioClick;\n\nthis.initialized = true;\n\nif(this.cachedData !== null) {\n    this.setData(this.cachedData);\n    this.cachedData = null;\n}","setData":"if(!data) return;\n\nif(!this.initialized) {\n    this.cachedData = data;\n    return;\n}\n\nthis.editExisting = data.editExisting;\n\nvar INVALID_ID = 0;\n\nif(this.selectMetaFileElement) {\n\n    apogeeapp.ui.removeAllChildren(this.selectMetaFileElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    \n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentMetaFileId) option.selected = true;\n    this.selectMetaFileElement.add(option);\n    \n    for(var fileDesc in data.metaFiles) {\n        var id = data.metaFiles[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentMetaFileId) option.selected = true;\n        this.selectMetaFileElement.add(option);\n    }\n}\n\nif(this.selectFileTypeElement) {\n    apogeeapp.ui.removeAllChildren(this.selectFileTypeElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentFileTypeId) option.selected = true;\n\n    this.selectFileTypeElement.add(option);\n    \n    for(var fileDesc in data.fileTypes) {\n        var id = data.fileTypes[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentFileTypeId) option.selected = true;\n        this.selectFileTypeElement.add(option);\n    }\n}\n\nthis.updateUiForCreateUpdate(data.editExisting);\n","constructorAddition":"this.data = null;\nthis.cachedData = null;\n\nthis.onSubmitClick = function() {\n    \n    var selectElement = this.editExisting ? this.selectMetaFileElement : this.selectFileTypeElement;\n    \n    if(!selectElement) {\n        alert(\"Error; UI not initialized\");\n        return;\n    }\n    \n    if(selectElement.length === 0) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var selectedIdString = selectElement.value;\n    if(!isFinite(selectedIdString)) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    var selectedId = Number(selectedIdString);\n\n    if(!this.editExisting) {\n        var metaFileName = this.metaFileNameInput.value.trim();\n        if((!metaFileName)||(metaFileName.length === 0)) {\n            alert(\"Invalid meta file name!\");\n            return;\n        }\n    }\n    \n    var fileSelection = {};\n    fileSelection.editExisting = this.editExisting;\n    if(this.editExisting) {\n        fileSelection.metaFileId = selectedId;\n    }\n    else {\n        fileSelection.fileTypeId = selectedId;\n        fileSelection.metaFileName = metaFileName;\n    }\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectOverrideFile\"],[\"processMeta\",\"working\"],fileSelection);\n}\n\nthis.onCancelClick = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectOverrideFile\"],[\"processMeta\",\"selectOverrideContext\"]);\n}\n\nthis.onRadioClick = function() {\n    var editExisting = this.updateRadio.checked;\n    this.updateUiForCreateUpdate(editExisting);\n}\n\nthis.updateUiForCreateUpdate = function(editExisting) {\n    this.editExisting = editExisting;\n    \n    if(this.selectFileTypeElement) {\n        this.selectFileTypeElement.style.display = editExisting ? \"none\" : \"\";\n    }\n    if(this.selectMetaFileElement) {\n        this.selectMetaFileElement.style.display = editExisting ? \"\" : \"none\";\n    }\n    if(this.metaFilePanel) {\n        this.metaFilePanel.style.display = editExisting ? \"none\" : \"\";\n    }\n    \n    var createRadioSelected = !editExisting;\n    var updateRadioSelected = editExisting;\n    \n    if((this.createRadio)&&(this.createRadio.checked != createRadioSelected)) {\n        this.createRadio.checked = createRadioSelected;\n    }\n    if((this.updateRadio)&&(this.updateRadio.checked != updateRadioSelected)) {\n        this.updateRadio.checked = updateRadioSelected;\n    }\n}\n\n"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":529,"height":319},"posInfo":{"x":257,"y":32},"state":-1,"viewType":"Formula"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":723,"height":349},"posInfo":{"x":33,"y":33},"state":-1,"viewType":"Formula"}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":270,"height":125},"posInfo":{"x":41,"y":330},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":115},"posInfo":{"x":381,"y":324},"state":0,"viewType":"Text"}}}},"selectOverrideContext":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":75,"y":75}},"children":{"contextControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":336,"height":106},"posInfo":{"x":26,"y":51},"state":0,"viewType":"Output"},"resource":{"html":"Context: <input type=\"text\" id=\"override_context_text\"></input>\n<br><br>\n<input type=\"button\" id=\"override_context_submit\" value=\"Submit\"></input>\n<input type=\"button\" id=\"override_context_cancel\" value=\"Cancel\"></input>","onLoad":"this.textInput = document.getElementById(\"override_context_text\");\nthis.submitButton = document.getElementById(\"override_context_submit\");\nthis.cancelButton = document.getElementById(\"override_context_cancel\");\nthis.initialized = true;\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmit();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancel();\n}","constructorAddition":"this.textInput = null;\nthis.submitButton = null;\nthis.newLogingButton = null;\nthis.initialized = false;\n\nthis.onSubmit = function() {\n    if(!this.initialized) return;\n    \n    var context = this.textInput.value.trim();\n    if(context.length === 0) {\n        alert(\"Invalid context value.\");\n        return;\n    }\n    \n    var data = {}\n    data.context = context;\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectOverrideContext\"],[\"processMeta\",\"selectOverrideFile\"],data);\n}\n\nthis.onCancel = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectOverrideContext\"],[\"processMeta\",\"selectBaseFile\"]);\n}\n\n","setData":""}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":303,"height":116},"posInfo":{"x":749,"y":173},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":337,"height":102},"posInfo":{"x":748,"y":28},"state":0,"viewType":"Text"}}}},"selectBaseFile":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":71,"y":169}},"children":{"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":576,"height":235},"posInfo":{"x":39,"y":111},"state":-1,"viewType":"JSON"}},"metaFileSelector":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":355,"height":162},"posInfo":{"x":416,"y":97},"state":0,"viewType":"Output"},"resource":{"html":"<input type=\"radio\" value=\"create\" name=\"createUpdate\" id=\"base_load_createRadio\">Create</input>\n<input type=\"radio\" value=\"update\" name=\"createUpdate\" id=\"base_load_updateRadio\">Update</input>\n<br><br>\n<select id=\"base_load_metaFileSelect\"></select>\n<select id=\"base_load_fileTypeSelect\"></select>\n<br><br>\n<div id=\"base_load_metaFilePanel\">\nMeta File Name: <input type=\"text\" id=\"base_load_metaFileNameInput\"></input>\n<br><br>\n</div>\n<input type=\"button\" value=\"Submit\" id=\"base_load_submitButton\"></input>\n<input type=\"button\" value=\"Cancel\" id=\"base_load_cancelButton\"></input>","onLoad":"this.createRadio = document.getElementById(\"base_load_createRadio\");\nthis.updateRadio = document.getElementById(\"base_load_updateRadio\");\nthis.selectMetaFileElement = document.getElementById(\"base_load_metaFileSelect\");\nthis.selectFileTypeElement = document.getElementById(\"base_load_fileTypeSelect\");\nthis.metaFilePanel = document.getElementById(\"base_load_metaFilePanel\");\nthis.metaFileNameInput = document.getElementById(\"base_load_metaFileNameInput\");\nthis.submitButton = document.getElementById(\"base_load_submitButton\");\nthis.cancelButton = document.getElementById(\"base_load_cancelButton\");\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmitClick();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancelClick();\n}\n\nvar onRadioClick = function() {\n    instance.onRadioClick();\n}\n\nthis.createRadio.onclick = onRadioClick;\nthis.updateRadio.onclick = onRadioClick;\n\nthis.initialized = true;\n\nif(this.cachedData !== null) {\n    this.setData(this.cachedData);\n    this.cachedData = null;\n}","setData":"if(!data) return;\n\nif(!this.initialized) {\n    this.cachedData = data;\n    return;\n}\n\nthis.editExisting = data.editExisting;\n\nvar INVALID_ID = 0;\n\nif(this.selectMetaFileElement) {\n\n    apogeeapp.ui.removeAllChildren(this.selectMetaFileElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    \n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentMetaFileId) option.selected = true;\n    this.selectMetaFileElement.add(option);\n    \n    for(var fileDesc in data.metaFiles) {\n        var id = data.metaFiles[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentMetaFileId) option.selected = true;\n        this.selectMetaFileElement.add(option);\n    }\n}\n\nif(this.selectFileTypeElement) {\n    apogeeapp.ui.removeAllChildren(this.selectFileTypeElement);\n    \n    //add a dummy entry\n    var option = document.createElement(\"option\");\n    option.text = \"<none selected>\";\n    option.value = INVALID_ID;\n    if(INVALID_ID == data.currentFileTypeId) option.selected = true;\n\n    this.selectFileTypeElement.add(option);\n    \n    for(var fileDesc in data.fileTypes) {\n        var id = data.fileTypes[fileDesc];\n        var option = document.createElement(\"option\");\n        option.text = fileDesc;\n        option.value = id;\n        if(id == data.currentFileTypeId) option.selected = true;\n        this.selectFileTypeElement.add(option);\n    }\n}\n\nthis.updateUiForCreateUpdate(data.editExisting);\n","constructorAddition":"this.data = null;\nthis.cachedData = null;\n\nthis.onSubmitClick = function() {\n    \n    var selectElement = this.editExisting ? this.selectMetaFileElement : this.selectFileTypeElement;\n    \n    if(!selectElement) {\n        alert(\"Error; UI not initialized\");\n        return;\n    }\n    \n    if(selectElement.length === 0) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var selectedIdString = selectElement.value;\n    if(!isFinite(selectedIdString)) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    var selectedId = Number(selectedIdString);\n\n    if(!this.editExisting) {\n        var metaFileName = this.metaFileNameInput.value.trim();\n        if((!metaFileName)||(metaFileName.length === 0)) {\n            alert(\"Invalid meta file name!\");\n            return;\n        }\n    }\n    \n    var fileSelection = {};\n    fileSelection.editExisting = this.editExisting;\n    if(this.editExisting) {\n        fileSelection.metaFileId = selectedId;\n    }\n    else {\n        fileSelection.fileTypeId = selectedId;\n        fileSelection.metaFileName = metaFileName;\n    }\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectBaseFile\"],[\"processMeta\",\"selectOverrideContext\"],fileSelection);\n}\n\nthis.onCancelClick = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectBaseFile\"],[\"processMeta\",\"selectBaseContext\"]);\n}\n\nthis.onRadioClick = function() {\n    var editExisting = this.updateRadio.checked;\n    this.updateUiForCreateUpdate(editExisting);\n}\n\nthis.updateUiForCreateUpdate = function(editExisting) {\n    this.editExisting = editExisting;\n    \n    if(this.selectFileTypeElement) {\n        this.selectFileTypeElement.style.display = editExisting ? \"none\" : \"\";\n    }\n    if(this.selectMetaFileElement) {\n        this.selectMetaFileElement.style.display = editExisting ? \"\" : \"none\";\n    }\n    if(this.metaFilePanel) {\n        this.metaFilePanel.style.display = editExisting ? \"none\" : \"\";\n    }\n    \n    var createRadioSelected = !editExisting;\n    var updateRadioSelected = editExisting;\n    \n    if((this.createRadio)&&(this.createRadio.checked != createRadioSelected)) {\n        this.createRadio.checked = createRadioSelected;\n    }\n    if((this.updateRadio)&&(this.updateRadio.checked != updateRadioSelected)) {\n        this.updateRadio.checked = updateRadioSelected;\n    }\n}\n\n"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":529,"height":319},"posInfo":{"x":259,"y":30},"state":-1,"viewType":"Formula"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":723,"height":349},"posInfo":{"x":33,"y":33},"state":-1,"viewType":"Text"}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":270,"height":125},"posInfo":{"x":41,"y":330},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":290,"height":115},"posInfo":{"x":381,"y":324},"state":0,"viewType":"Text"}}}},"selectBaseContext":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":42,"y":208}},"children":{"contextControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":365,"height":81},"posInfo":{"x":25,"y":51},"state":0,"viewType":"Output"},"resource":{"html":"Context: <input type=\"text\" id=\"base_context_text\"></input>\n<br><br>\n<input type=\"button\" id=\"base_context_submit\" value=\"Submit\"></input>\n<input type=\"button\" id=\"base_context_cancel\" value=\"Cancel\"></input>","onLoad":"this.textInput = document.getElementById(\"base_context_text\");\nthis.submitButton = document.getElementById(\"base_context_submit\");\nthis.cancelButton = document.getElementById(\"base_context_cancel\");\nthis.initialized = true;\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmit();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancel();\n}","constructorAddition":"this.textInput = null;\nthis.submitButton = null;\nthis.newLogingButton = null;\nthis.initialized = false;\n\nthis.onSubmit = function() {\n    if(!this.initialized) return;\n    \n    var context = this.textInput.value.trim();\n    if(context.length === 0) {\n        alert(\"Invalid context value.\");\n        return;\n    }\n    \n    var data = {}\n    data.context = context;\n    \n    taskAppModule.taskCompleted(mode.getMessenger(),[\"processMeta\",\"selectBaseContext\"],[\"processMeta\",\"selectBaseFile\"],data);\n}\n\nthis.onCancel = function() {\n    taskAppModule.taskCanceled(mode.getMessenger(),[\"processMeta\",\"selectBaseContext\"],[\"login\"]);\n}\n\n","setData":""}},"result":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":303,"height":116},"posInfo":{"x":749,"y":173},"state":0,"viewType":"Text"}},"state":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":337,"height":102},"posInfo":{"x":748,"y":28},"state":0,"viewType":"Text"}}}},"working":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":125,"y":125}},"children":{"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":304,"height":46},"posInfo":{"x":28,"y":16},"state":-1,"viewType":"Text"}},"baseFileRequest":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":648,"height":686},"posInfo":{"x":244,"y":13},"state":-1,"viewType":"JSON"}},"overrideFileRequest":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":546,"height":368},"posInfo":{"x":806,"y":21},"state":-1,"viewType":"JSON"}},"overrideMetaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":227,"height":40},"posInfo":{"x":260,"y":23},"state":0,"viewType":"Text"}},"baseMetaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":228,"height":42},"posInfo":{"x":534,"y":22},"state":0,"viewType":"Text"}},"metaResponseToTable":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":659,"height":400},"posInfo":{"x":805,"y":119},"state":-1,"viewType":"Code"}},"overrideFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":479,"height":353},"posInfo":{"x":64,"y":134},"state":-1,"viewType":"JSON"}},"baseFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":612,"height":431},"posInfo":{"x":324,"y":162},"state":0,"viewType":"JSON"}},"processMetaFileEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":854,"height":631},"posInfo":{"x":399,"y":76},"state":0,"viewType":"Private"}},"processedFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":900,"height":728},"posInfo":{"x":148,"y":285},"state":0,"viewType":"JSON"}}}}}}}},"micemetarDataAccess":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":216,"y":34}},"children":{"createRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":560,"height":321},"posInfo":{"x":32,"y":389},"state":-1,"viewType":"Code"}},"recordsToCreateInstructions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":834,"height":391},"posInfo":{"x":30,"y":472},"state":-1,"viewType":"Code"}},"createCommitBody":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":568,"height":400},"posInfo":{"x":629,"y":225},"state":-1,"viewType":"Code"}},"createRequestOptions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":523,"height":254},"posInfo":{"x":822,"y":379},"state":-1,"viewType":"Code"}},"host":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":353,"height":71},"posInfo":{"x":16,"y":6},"state":0,"viewType":"Text"}},"commitUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":433,"height":107},"posInfo":{"x":17,"y":91},"state":-1,"viewType":"Formula"}},"requestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":450,"height":68},"posInfo":{"x":16,"y":51},"state":-1,"viewType":"Formula"}},"dataSetInfo":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":882,"height":611},"posInfo":{"x":25,"y":169},"state":-1,"viewType":"JSON"}},"createUpdateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":886,"height":655},"posInfo":{"x":36,"y":248},"state":-1,"viewType":"Code"}},"createCreateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":994,"height":643},"posInfo":{"x":35,"y":209},"state":-1,"viewType":"Code"}},"getFieldErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":512,"height":68},"posInfo":{"x":761,"y":616},"state":-1,"viewType":"Code"}},"getRecordErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":81},"posInfo":{"x":762,"y":664},"state":-1,"viewType":"Code"}},"createDeleteInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":678,"height":540},"posInfo":{"x":36,"y":289},"state":-1,"viewType":"Code"}},"getRecordInfo":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":480,"height":400},"posInfo":{"x":818,"y":427},"state":-1,"viewType":"Code"}},"combinedEntriesToInstructionList":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":721,"height":524},"posInfo":{"x":31,"y":516},"state":-1,"viewType":"Private"}},"getCommitPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":741,"height":400},"posInfo":{"x":374,"y":112},"state":-1,"viewType":"Code"}},"getRequestPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":810,"height":400},"posInfo":{"x":376,"y":30},"state":-1,"viewType":"Code"}},"customRequestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":387,"height":300},"posInfo":{"x":18,"y":128},"state":-1,"viewType":"JSON"}},"getCustomRequestPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":611,"height":400},"posInfo":{"x":376,"y":69},"state":-1,"viewType":"Code"}}}}}}