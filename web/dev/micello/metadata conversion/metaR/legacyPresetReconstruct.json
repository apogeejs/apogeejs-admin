{"fileType":"apogee workspace","jsLinks":[],"cssLinks":[],"workspace":{"fileType":"apogee workspace","version":0.2,"data":{"name":"legacyPresetReconstruct","type":"apogee.Folder","children":{"taskResults":{"name":"taskResults","type":"apogee.Folder","children":{"loadMetaFileRecords":{"name":"loadMetaFileRecords","type":"apogee.JsonTable","updateData":{"data":{"state":"SUCCESS","data":{"existingMetaFileEntry":{"edit_perm":15,"Type":"meta_file","Fields":{"name":"Standard","file_type_id":21,"file_context":"public"},"edit_ok":true,"read_perm":2,"Id":1},"existingRecipeEntries":[{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":0,"meta_file_id":1,"file_entry_id":1234,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":1},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":1,"meta_file_id":1,"file_entry_id":1235,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":2},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":2,"meta_file_id":1,"file_entry_id":1236,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":3},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":3,"meta_file_id":1,"file_entry_id":1237,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":4},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":4,"meta_file_id":1,"file_entry_id":1238,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":5},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":5,"meta_file_id":1,"file_entry_id":1239,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":6},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":6,"meta_file_id":1,"file_entry_id":1240,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":7},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":7,"meta_file_id":1,"file_entry_id":1241,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":8},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":8,"meta_file_id":1,"file_entry_id":1242,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":9},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":9,"meta_file_id":1,"file_entry_id":1243,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":10},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":10,"meta_file_id":1,"file_entry_id":1244,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":11},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":11,"meta_file_id":1,"file_entry_id":1245,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":12},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":12,"meta_file_id":1,"file_entry_id":1246,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":13},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":13,"meta_file_id":1,"file_entry_id":1247,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":14},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":14,"meta_file_id":1,"file_entry_id":1248,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":15},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":15,"meta_file_id":1,"file_entry_id":1249,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":16},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":16,"meta_file_id":1,"file_entry_id":1250,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":17},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":17,"meta_file_id":1,"file_entry_id":1251,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":18},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":18,"meta_file_id":1,"file_entry_id":1252,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":19},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":19,"meta_file_id":1,"file_entry_id":1253,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":20},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":20,"meta_file_id":1,"file_entry_id":1254,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":21},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":21,"meta_file_id":1,"file_entry_id":1255,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":22},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":22,"meta_file_id":1,"file_entry_id":1256,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":23},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":23,"meta_file_id":1,"file_entry_id":1257,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":24},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":24,"meta_file_id":1,"file_entry_id":1258,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":25},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":25,"meta_file_id":1,"file_entry_id":1259,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":26},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":26,"meta_file_id":1,"file_entry_id":1260,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":27},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":27,"meta_file_id":1,"file_entry_id":1261,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":28},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":28,"meta_file_id":1,"file_entry_id":1262,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":29},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":29,"meta_file_id":1,"file_entry_id":1263,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":30},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":30,"meta_file_id":1,"file_entry_id":1264,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":31},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":31,"meta_file_id":1,"file_entry_id":1265,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":32},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":32,"meta_file_id":1,"file_entry_id":1266,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":33},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":33,"meta_file_id":1,"file_entry_id":1267,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":34},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":34,"meta_file_id":1,"file_entry_id":1268,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":35},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":35,"meta_file_id":1,"file_entry_id":1269,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":36},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":36,"meta_file_id":1,"file_entry_id":1270,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":37},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":37,"meta_file_id":1,"file_entry_id":1271,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":38},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":38,"meta_file_id":1,"file_entry_id":1272,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":39},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":39,"meta_file_id":1,"file_entry_id":1273,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":40},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":40,"meta_file_id":1,"file_entry_id":1274,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":41},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":41,"meta_file_id":1,"file_entry_id":1275,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":42},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":42,"meta_file_id":1,"file_entry_id":1276,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":43},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":43,"meta_file_id":1,"file_entry_id":1277,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":44},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":44,"meta_file_id":1,"file_entry_id":1278,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":45},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":45,"meta_file_id":1,"file_entry_id":1279,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":46},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":46,"meta_file_id":1,"file_entry_id":1280,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":47},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":47,"meta_file_id":1,"file_entry_id":1281,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":48},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":48,"meta_file_id":1,"file_entry_id":1282,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":49},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":49,"meta_file_id":1,"file_entry_id":1283,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":50},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":50,"meta_file_id":1,"file_entry_id":1284,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":51},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":51,"meta_file_id":1,"file_entry_id":1285,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":52},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":52,"meta_file_id":1,"file_entry_id":1286,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":53},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":53,"meta_file_id":1,"file_entry_id":1287,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":54},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":54,"meta_file_id":1,"file_entry_id":1288,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":55},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":55,"meta_file_id":1,"file_entry_id":1289,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":56},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":56,"meta_file_id":1,"file_entry_id":1290,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":57},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":57,"meta_file_id":1,"file_entry_id":1291,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":58},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":58,"meta_file_id":1,"file_entry_id":1292,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":59},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":59,"meta_file_id":1,"file_entry_id":1293,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":60},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":60,"meta_file_id":1,"file_entry_id":1294,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":61},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":61,"meta_file_id":1,"file_entry_id":1295,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":62},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":62,"meta_file_id":1,"file_entry_id":1296,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":63},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":63,"meta_file_id":1,"file_entry_id":1297,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":64},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":64,"meta_file_id":1,"file_entry_id":1298,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":65},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":65,"meta_file_id":1,"file_entry_id":1299,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":66},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":66,"meta_file_id":1,"file_entry_id":1300,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":67},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":67,"meta_file_id":1,"file_entry_id":1301,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":68},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":68,"meta_file_id":1,"file_entry_id":1302,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":69},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":69,"meta_file_id":1,"file_entry_id":1303,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":70},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":70,"meta_file_id":1,"file_entry_id":1304,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":71},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":71,"meta_file_id":1,"file_entry_id":1305,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":72},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":72,"meta_file_id":1,"file_entry_id":1306,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":73},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":73,"meta_file_id":1,"file_entry_id":1307,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":74},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":74,"meta_file_id":1,"file_entry_id":1308,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":75},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":75,"meta_file_id":1,"file_entry_id":1309,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":76},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":76,"meta_file_id":1,"file_entry_id":1310,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":77},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":77,"meta_file_id":1,"file_entry_id":1311,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":78},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":78,"meta_file_id":1,"file_entry_id":1312,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":79},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":79,"meta_file_id":1,"file_entry_id":1313,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":80},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":80,"meta_file_id":1,"file_entry_id":1314,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":81},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":81,"meta_file_id":1,"file_entry_id":1315,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":82},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":82,"meta_file_id":1,"file_entry_id":1316,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":83},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":83,"meta_file_id":1,"file_entry_id":1317,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":84},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":84,"meta_file_id":1,"file_entry_id":1318,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":85},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":85,"meta_file_id":1,"file_entry_id":1319,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":86},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":86,"meta_file_id":1,"file_entry_id":1320,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":87},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":87,"meta_file_id":1,"file_entry_id":1321,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":88},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":88,"meta_file_id":1,"file_entry_id":1322,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":89},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":89,"meta_file_id":1,"file_entry_id":1323,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":90},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":90,"meta_file_id":1,"file_entry_id":1324,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":91},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":91,"meta_file_id":1,"file_entry_id":1325,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":92},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":92,"meta_file_id":1,"file_entry_id":1326,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":93},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":93,"meta_file_id":1,"file_entry_id":1327,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":94},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":94,"meta_file_id":1,"file_entry_id":1328,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":95},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":95,"meta_file_id":1,"file_entry_id":1329,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":96},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":96,"meta_file_id":1,"file_entry_id":1330,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":97},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":97,"meta_file_id":1,"file_entry_id":1331,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":98},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":98,"meta_file_id":1,"file_entry_id":1332,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":99},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":99,"meta_file_id":1,"file_entry_id":1333,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":100},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":100,"meta_file_id":1,"file_entry_id":1334,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":101},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":101,"meta_file_id":1,"file_entry_id":1335,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":102},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":102,"meta_file_id":1,"file_entry_id":1336,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":103},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":103,"meta_file_id":1,"file_entry_id":1337,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":104},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":104,"meta_file_id":1,"file_entry_id":1338,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":105},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":105,"meta_file_id":1,"file_entry_id":1339,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":106},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":106,"meta_file_id":1,"file_entry_id":1340,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":107},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":107,"meta_file_id":1,"file_entry_id":1341,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":108},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":108,"meta_file_id":1,"file_entry_id":1342,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":109},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":109,"meta_file_id":1,"file_entry_id":1343,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":110},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":110,"meta_file_id":1,"file_entry_id":1344,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":111},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":111,"meta_file_id":1,"file_entry_id":1345,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":112},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":112,"meta_file_id":1,"file_entry_id":1346,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":113},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":113,"meta_file_id":1,"file_entry_id":1347,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":114},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":114,"meta_file_id":1,"file_entry_id":1348,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":115},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":115,"meta_file_id":1,"file_entry_id":1349,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":116},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":116,"meta_file_id":1,"file_entry_id":1350,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":117},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":117,"meta_file_id":1,"file_entry_id":1351,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":118},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":118,"meta_file_id":1,"file_entry_id":1352,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":119},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":119,"meta_file_id":1,"file_entry_id":1353,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":120},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":120,"meta_file_id":1,"file_entry_id":1354,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":121},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":121,"meta_file_id":1,"file_entry_id":1355,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":122},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":122,"meta_file_id":1,"file_entry_id":1356,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":123},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":123,"meta_file_id":1,"file_entry_id":1357,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":124},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":124,"meta_file_id":1,"file_entry_id":1358,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":125},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":125,"meta_file_id":1,"file_entry_id":1359,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":126},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":126,"meta_file_id":1,"file_entry_id":1360,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":127},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":127,"meta_file_id":1,"file_entry_id":1361,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":128},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":128,"meta_file_id":1,"file_entry_id":1362,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":129},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":129,"meta_file_id":1,"file_entry_id":1363,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":130},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":130,"meta_file_id":1,"file_entry_id":1364,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":131},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":131,"meta_file_id":1,"file_entry_id":1365,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":132},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":132,"meta_file_id":1,"file_entry_id":1366,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":133},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":133,"meta_file_id":1,"file_entry_id":1367,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":134},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":134,"meta_file_id":1,"file_entry_id":1368,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":135},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":135,"meta_file_id":1,"file_entry_id":1369,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":136},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":136,"meta_file_id":1,"file_entry_id":1370,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":137},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":137,"meta_file_id":1,"file_entry_id":1371,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":138},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":138,"meta_file_id":1,"file_entry_id":1372,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":139},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":139,"meta_file_id":1,"file_entry_id":1373,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":140},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":140,"meta_file_id":1,"file_entry_id":1374,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":141},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":141,"meta_file_id":1,"file_entry_id":1375,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":142},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":142,"meta_file_id":1,"file_entry_id":1376,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":143},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":143,"meta_file_id":1,"file_entry_id":1377,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":144},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":144,"meta_file_id":1,"file_entry_id":1378,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":145},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":145,"meta_file_id":1,"file_entry_id":1379,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":146},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":146,"meta_file_id":1,"file_entry_id":1380,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":147},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":147,"meta_file_id":1,"file_entry_id":1381,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":148},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":148,"meta_file_id":1,"file_entry_id":1382,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":149},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":149,"meta_file_id":1,"file_entry_id":1383,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":150},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":150,"meta_file_id":1,"file_entry_id":1384,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":151},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":151,"meta_file_id":1,"file_entry_id":1385,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":152},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":152,"meta_file_id":1,"file_entry_id":1386,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":153},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":153,"meta_file_id":1,"file_entry_id":1387,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":154},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":154,"meta_file_id":1,"file_entry_id":1388,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":155},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":155,"meta_file_id":1,"file_entry_id":1389,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":156},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":156,"meta_file_id":1,"file_entry_id":1390,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":157},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":157,"meta_file_id":1,"file_entry_id":1391,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":158},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":158,"meta_file_id":1,"file_entry_id":1392,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":159},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":159,"meta_file_id":1,"file_entry_id":1393,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":160},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":160,"meta_file_id":1,"file_entry_id":1394,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":161},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":161,"meta_file_id":1,"file_entry_id":1395,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":162},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":162,"meta_file_id":1,"file_entry_id":1396,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":163},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":163,"meta_file_id":1,"file_entry_id":1397,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":164},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":164,"meta_file_id":1,"file_entry_id":1398,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":165},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":165,"meta_file_id":1,"file_entry_id":1399,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":166},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":166,"meta_file_id":1,"file_entry_id":1400,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":167},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":167,"meta_file_id":1,"file_entry_id":1401,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":168},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":168,"meta_file_id":1,"file_entry_id":1402,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":169},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":169,"meta_file_id":1,"file_entry_id":1403,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":170},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":170,"meta_file_id":1,"file_entry_id":1404,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":171},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":171,"meta_file_id":1,"file_entry_id":1405,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":172},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":172,"meta_file_id":1,"file_entry_id":1406,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":173},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":173,"meta_file_id":1,"file_entry_id":1407,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":174},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":174,"meta_file_id":1,"file_entry_id":1408,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":175},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":175,"meta_file_id":1,"file_entry_id":1409,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":176},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":176,"meta_file_id":1,"file_entry_id":1410,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":177},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":177,"meta_file_id":1,"file_entry_id":1411,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":178},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":178,"meta_file_id":1,"file_entry_id":1412,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":179},{"edit_perm":15,"Type":"recipe_entry","Fields":{"ordr":179,"meta_file_id":1,"file_entry_id":1413,"insertion_info":null},"edit_ok":true,"read_perm":2,"Id":180}],"fileType":"propertyRules"}},"description":""}},"login":{"name":"login","type":"apogee.JsonTable","updateData":{"data":{"state":"SUCCESS","data":{"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=dr2jkqjar8a0llqku3713237c7"}},"description":""}},"loadContext":{"name":"loadContext","type":"apogee.JsonTable","updateData":{"data":{"state":"SUCCESS","data":{"context":"public"}},"description":""}}}},"tasks":{"name":"tasks","type":"apogee.Folder","children":{"login":{"name":"login","type":"apogee.Folder","children":{"loginUrl":{"name":"loginUrl","type":"apogee.JsonTable","updateData":{"data":"http://localhost:8080/TestAuthorization/loginjson","description":""}},"loginControl":{"name":"loginControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return loginUrl;","supplementalCode":"","description":""}},"sessionResponse":{"name":"sessionResponse","type":"apogee.JsonTable","updateData":{"data":{"sessionKey":"SESS0f6c4c2238a670b8138b63d9fd03cc22=dr2jkqjar8a0llqku3713237c7","responseCode":1},"description":""}},"taskResult":{"name":"taskResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\nvar sessionKey;\nif(!sessionResponse) {\n    output.state = \"INCOMPLETE\";\n}\nelse if(sessionResponse.responseCode === 1) {\n    output.state = \"SUCCESS\";\n    data = {};\n    data.sessionKey = sessionResponse.sessionKey;\n    output.data = data;\n}\nelse {\n    output.status = \"ERROR\";\n    output.msg = sessionResponse.message;\n\n}\n\napogeeMessenger.dataUpdate(\"taskResults.login\",output);\n    \nreturn output;","supplementalCode":"","description":""}}}},"loadMetaFileRecords":{"name":"loadMetaFileRecords","type":"apogee.Folder","children":{"fileTypeList":{"name":"fileTypeList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\n\nvar fileTypeSearch = {};\nfileTypeSearch.search = \"file_type_list\";\n\nreturn micemetarDataAccess.getRequestPromise(fileTypeSearch,sessionKey);\n\n","supplementalCode":"","description":""}},"fileTypeEntryList":{"name":"fileTypeEntryList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!existingMetaFileEntry) return null;\n\nvar fileTypeId = existingMetaFileEntry.Fields.file_type_id;\n\nvar searchDef = {};\nsearchDef.search = \"file_type_entries\";\nsearchDef.id = fileTypeId;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"recordStore":{"name":"recordStore","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var map = {};\n\naddSearchResponse(fileTypeList,map);\naddSearchResponse(fileTypeEntryList,map);\naddSearchResponse(metaFileList,map);\naddSearchResponse(metaFileResponse,map);\n\nreturn map;\n\n","supplementalCode":"function addSearchResponse(searchResponse,outputMap) {\n    if(!searchResponse) {\n        return;\n    }\n    \n    if(!searchResponse.success) {\n        throw new Error(\"Error in loading record data: \" + searchResponse.msg);\n    }\n    \n    var searchResponseData = searchResponse.data;\n    \n    if(searchResponseData.Response) {\n        addRecordList(searchResponseData.Response,outputMap);\n    }\n    if(searchResponseData.Records) {\n        addRecordList(searchResponseData.Records,outputMap);\n    }\n    \n}\n\nfunction addRecordList(recordList,outputMap) {\n    for(var i = 0; i < recordList.length; i++) {\n        var record = recordList[i];\n        \n        var typeSection = outputMap[record.Type];\n        if(!typeSection) {\n            typeSection = {};\n            outputMap[record.Type] = typeSection;\n        }\n        \n        //if there is already a record, just overwrite it. They should be the same.\n        typeSection[record.Id] = record;\n    }\n}","description":""}},"metaFileResponse":{"name":"metaFileResponse","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!selectedMetaFileId) return null;\n\nvar searchDef = {};\nsearchDef.search = \"meta_file\";\nsearchDef.id = selectedMetaFileId;\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n\n\n\n\n\n","supplementalCode":"","description":""}},"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!sessionKey) return null;\nif(!context) return null;\n\n\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\n\nreturn micemetarDataAccess.getRequestPromise(searchDef,sessionKey);\n\n","supplementalCode":"","description":""}},"getRecord":{"name":"getRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordType","recordId"],"functionBody":"typeSection = recordStore[recordType];\nif(!typeSection) {\n    throw new Error(\"Type not found!\");\n}\n\nreturn typeSection[recordId];\n","supplementalCode":"","description":""}},"metaFileSelector":{"name":"metaFileSelector","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif((metaFileList)&&(metaFileList.success)) {\n    var metaFiles = {};\n    output.metaFiles = metaFiles;\n    \n    var metaFileRecords = metaFileList.data.Response;\n    for(var i = 0; i < metaFileRecords.length; i++) {\n        var record = metaFileRecords[i];\n        var fileTypeRecord = getRecord(\"file_type\",record.Fields.file_type_id);\n        var fileType = fileTypeRecord.Fields.file_type_name;\n        var metaName = record.Fields.name;\n        metaFiles[fileType + \":\" + metaName] = record.Id;\n    }\n}\n\noutput.currentMetaFileId = metaFileId;\n\nreturn output;","supplementalCode":"","description":""}},"INVALID_ID":{"name":"INVALID_ID","type":"apogee.JsonTable","updateData":{"data":0,"description":""}},"availableFileEntries":{"name":"availableFileEntries","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nvar recordStore = loadMetaFileRecords.recordStore;\nfor(var idString in recordStore.file_entry) {\n    var fileEntry = recordStore.file_entry[idString];\n    var entry = {};\n    entry.fileEntry = fileEntry;\n    entry.recipeEntry = existingRecipeEntries[idString];\n    output[idString] = entry;\n}\n\nreturn output;","supplementalCode":"","description":""}},"existingMetaFileEntry":{"name":"existingMetaFileEntry","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(!loadMetaFileRecords.metaFileResponse) {\n    return false;\n}\n\nif(!loadMetaFileRecords.metaFileResponse.success) {\n    throw new Error(\"Meta File request error\");\n}\n\nif(loadMetaFileRecords.metaFileResponse.data.Response.length === 0) {\n    throw new Error(\"Meta file not found\");\n}\n\nreturn loadMetaFileRecords.metaFileResponse.data.Response[0];","supplementalCode":"","description":""}},"existingRecipeEntries":{"name":"existingRecipeEntries","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif(!metaFileResponse) {\n    return output;\n}\n\nif(!metaFileResponse.success) {\n    throw new Error(\"Error loading meta file records: \" + loadMetaFileRecords.meatFileResponse.msg);\n}\n\nreturn metaFileResponse.data.Records;\n\n// var metaFileRecords = metaFileResponse.data.Records;\n\n// for(var i = 0; i < metaFileRecords.length; i++) {\n//     var record = metaFileRecords[i];\n//     if(record.Type == \"recipe_entry\") {\n//         output[record.Fields.file_entry_id] = record;\n//     }\n// }\n\n// return output;","supplementalCode":"","description":""}},"storeDataFlag":{"name":"storeDataFlag","type":"apogee.JsonTable","updateData":{"data":false,"description":""}},"taskResult":{"name":"taskResult","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif(!dataLoadSuccess) {\n    output.state = \"INCOMPLETE\";\n}\nelse if(dataLoadSuccess.success === true) {\n    output.state = \"SUCCESS\";\n    data = {};\n    data.existingMetaFileEntry = existingMetaFileEntry;\n    data.existingRecipeEntries = existingRecipeEntries;\n    data.fileType = fileType;\n    output.data = data;\n}\nelse if(dataLoadErrors.success === false) {\n    output.state = \"ERROR\";\n    output.msg = dataLoadErrors.msg;\n}\n\nif(storeDataFlag) {\n    var updateInfo = [];\n    updateInfo.push([\"taskResults.loadMetaFileRecords\",output]);\n    updateInfo.push([\"storeDataFlag\",false]);\n    apogeeMessenger.compoundDataUpdate(updateInfo);\n}\n\nreturn output;\n\n","supplementalCode":"","description":""}},"dataLoadSuccess":{"name":"dataLoadSuccess","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if((!fileTypeList)&&(!metaFileList)) {\n    return null;\n}\n\nvar output = {};\n\nerrors = [];\nif(fileTypeEntryList.success !== true) {\n    errors.push(fileTypeEntryList.msg);\n}\nif(metaFileList.success !== true) {\n    errors.push(metaFileResponse.msg);\n}\n\nif(errors.length > 0) {\n    output.success = false;\n    output.msg = errors.join(\"; \");\n}\nelse {\n    output.success = true;\n}\n\nreturn output;","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(taskResults.loadContext.state == \"SUCCESS\") {\n    return taskResults.loadContext.data.context;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if(taskResults.login.state == \"SUCCESS\") {\n    return taskResults.login.data.sessionKey;\n}\nelse {\n    return null;\n}","supplementalCode":"","description":""}},"selectedMetaFileId":{"name":"selectedMetaFileId","type":"apogee.JsonTable","updateData":{"data":1,"description":""}},"fileType":{"name":"fileType","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var fileTypeRecord;\n\nif(existingMetaFileEntry) {\n    fileTypeRecord = getRecord(\"file_type\",existingMetaFileEntry.Fields.file_type_id);\n}\n\nif(fileTypeRecord) {\n    return fileTypeRecord.Fields.file_type_name;\n}\nelse {\n    return INVALID_ID;\n}","supplementalCode":"","description":""}}}},"loadContext":{"name":"loadContext","type":"apogee.Folder","children":{"contextControl":{"name":"contextControl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return null;","supplementalCode":"","description":""}}}},"fileReconstruct":{"name":"fileReconstruct","type":"apogee.Folder","children":{"createRecordStructure":{"name":"createRecordStructure","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if((!taskResults.loadMetaFileRecords)||(taskResults.loadMetaFileRecords.state != \"SUCCESS\")) return null;\n\nvar output = {};\noutput.metaFile = taskResults.loadMetaFileRecords.data.existingMetaFileEntry;\n\nvar entryList = [];\noutput.entryList = entryList;\n\nvar recipeList = taskResults.loadMetaFileRecords.data.existingRecipeEntries;\nfor(var i = 0; i < recipeList.length; i++) {\n    var recipeRecord = recipeList[i];\n    \n    var fileEntryId = recipeRecord.Fields.file_entry_id;\n    var fileEntryRecord = tasks.loadMetaFileRecords.getRecord(\"file_entry\",fileEntryId);\n    \n    var combinedEntry = {};\n    combinedEntry.fileEntry = fileEntryRecord;\n    combinedEntry.recipeEntry = recipeRecord;\n    entryList.push(combinedEntry);\n}\n\nreturn output;\n\n\n","supplementalCode":"","description":""}},"fileType":{"name":"fileType","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"if((!taskResults.loadMetaFileRecords)||(taskResults.loadMetaFileRecords.state != \"SUCCESS\")) return null;\n\nreturn taskResults.loadMetaFileRecords.data.fileType;","supplementalCode":"","description":""}},"firstStepFile":{"name":"firstStepFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nif(fileType != \"propertyRules\") throw new Error(\"Expected file type property rules!\");\n\nvar metaFileRecord = createRecordStructure.metaFile;\nvar metaFileEntryList = createRecordStructure.entryList;\n\n\n//initialize, and load working data if applicable\nvar workingData = {};    \n\n//process each entry\nfor(var i = 0; i < metaFileEntryList.length; i++) {\n    //get an entry\n    var metaFileEntry = metaFileEntryList[i];\n    var recipeEntry = metaFileEntry.recipeEntry;\n    var fileEntry = metaFileEntry.fileEntry;\n    \n    processEntry(output,metaFileRecord,recipeEntry,fileEntry,workingData);\n}\n\nreturn output;","supplementalCode":"function processEntry(output,metaFile,recipeEntry,fileEntry,workingData) {\n    var entryData = fileEntry.Fields.entry_data;\n    \n    var newProperties = updateProperties(entryData.properties);\n    \n    //----------------\n    //load the section\n    //----------------\n    \n    var sectionName = fileEntry.Fields.entry_section;\n    if(sectionName == \"named_entries\") {\n        //handle generic entries\n        var entryName = entryData.name;\n        if(namedKeys[entryName]) {\n            //this is a named key\n            if(!output.named_keys) output.named_keys = {};\n            output.named_keys[entryName] = newProperties;\n        }\n        else {\n            //this is a named value\n            if(!output.named_groups) output.named_groups = {};\n            output.named_groups[entryName] = newProperties;\n        }\n        \n    }\n    else {\n        if(!output.property_trees) output.property_trees = {};\n        \n        if(entryData.extends) {\n            //modify the base section\n            baseEntry = getBaseEntry(output.property_trees[sectionName]);\n            updateBaseEntry(baseEntry,entryData);\n        }\n        else if(output.property_trees[sectionName] === undefined) {\n            //normal entry\n            output.property_trees[sectionName] = newProperties;\n        }\n        else {\n            //this shouldn't happen\n            throw new Error(\"Wasn't expecting another entry!\");\n        }\n    }\n\n}\n\nfunction updateProperties(properties) {\n    var newProperties = [];\n    \n    var propCopy = apogee.util.deepJsonCopy(properties);\n    for(var i = 0; i < propCopy.length; i++) {\n        var property = propCopy[i];\n        \n        if(property.input == \"type\") {\n            //remap this!\n            var newKey = typeRemap[property.key];\n            \n            var newProp = {};\n            newProp.key = newKey;\n            newProp.input = \"multikey\";\n            \n            //this is a cludge - I should do this another way.\n            if(property.meta) newProp.meta = property.meta;\n            \n            newProp.required = true;\n            newProp.childKeys = [];\n            newProperties.push(newProp);\n            \n            //handle legacy data addition if applicable\n            if(property.legacyKey !== undefined) {\n                var modEntry = {};\n                modEntry.name = property.name;\n                modEntry.properties = [];\n                var propEntry = {};\n                propEntry.legacyKey = property.legacyKey;\n                propEntry.legacyValue = property.legacyValue;\n                propEntry.value = property.value;\n                propEntry.key = property.key;\n                propEntry.action = \"modifies\";\n                modEntry.properties.push(propEntry);\n                \n                updateBaseEntry(newProp,modEntry);\n            }\n        }\n        else {\n            //keep as is\n            newProperties.push(property);\n        }\n    }\n    \n    return newProperties;\n}\n\nfunction updateBaseEntry(baseEntry,entryData) {\n    var extendingProp = entryData.properties[0];\n    if(!extendingProp.action) throw new Error(\"Expected a 'modifies' entry!\");\n    \n    var key = extendingProp.legacyKey;\n    var value = extendingProp.legacyValue;\n    \n    var childKeys = baseEntry.childKeys;\n    if(!childKeys) {\n        childKeys = [];\n        baseEntry.childKeys = childKeys;\n    }\n    \n    var keyEntry = getChildKeyEntry(childKeys,key);\n    \n    var valueEntry = {};\n    keyEntry.values[value] = valueEntry;\n    \n    //add any child keys for the value\n    if(entryData.properties.length > 1) {\n        \n        var valueChildKeys = [];\n        valueEntry.childKeys = valueChildKeys;\n        for(var i = 1; i < entryData.properties.length; i++) {\n            var entry = entryData.properties[i];\n            valueChildKeys.push(entry);\n        }\n    }\n}\n\nfunction getBaseEntry(section) {\n    return section[0];\n}\n\nfunction getChildKeyEntry(childKeys,key) {\n    var keyEntry;\n    for(var i = 0; i < childKeys.length; i++) {\n        var entry = childKeys[i];\n        if(entry.key == key) {\n            keyEntry = entry;\n        }\n    }\n    if(!keyEntry) {\n        keyEntry = {};\n        keyEntry.key = key;\n        keyEntry.input = \"enum\";\n        keyEntry.values = {};\n        childKeys.push(keyEntry);\n    }\n    \n    return keyEntry;\n}","description":""}},"typeRemap":{"name":"typeRemap","type":"apogee.JsonTable","updateData":{"data":{"featureType":"geom_type","linkType":"nav_class"},"description":""}},"tagRename":{"name":"tagRename","type":"apogee.JsonTable","updateData":{"data":{"key":"k","values":"v","childKeys":"ks","meta":"prop"},"description":""}},"newFile":{"name":"newFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\noutput.property_trees = {};\nvar inPropertyTrees = firstStepFile.property_trees;\n\nfor(var treeName in inPropertyTrees) {\n    var treeEntry = inPropertyTrees[treeName];\n\n    var outTreeEntry = convertKeyList(treeEntry);\n    output.property_trees[treeName] = outTreeEntry;\n}\n\nreturn output;","supplementalCode":"\nfunction convertKeyList(inList) {\n    var outList = [];\n    for(var i = 0; i < inList.length; i++) {\n        var inEntry = inList[i];\n        outList.push(getOutEntry(inEntry));\n    }\n    return outList;\n}\n\nfunction convertValueMap(inMap) {\n    var outMap = {};\n    for(var tag in inMap) {\n        var inEntry = inMap[tag];\n        outMap[tag] = getOutEntry(inEntry);\n    }\n    return outMap;\n}\n\nfunction getOutEntry(inEntry) {\n    var outEntry = {};\n    for(var inTag in inEntry) {\n        var outTag = tagRename[inTag];\n        if(outTag === undefined) outTag = inTag;\n        \n        var inValue = inEntry[inTag];\n        \n        var outValue;\n        if(inTag == \"values\") {\n            outValue = convertValueMap(inValue);\n        }\n        else if(inTag == \"childKeys\") {\n            outValue = convertKeyList(inValue);\n        }\n        else {\n            outValue = inValue;\n        }\n        \n        outEntry[outTag] = outValue;\n    }\n    \n    //special changes\n    if(outEntry.input == \"named_entry\") {\n        var entryName = outEntry.named_entry;\n        if(namedKeys[entryName]) {\n            //named key\n            outEntry.input = \"named_key\";\n            outEntry.name = entryName;\n            delete outEntry.named_entry;\n        }\n        else {\n            //named group\n            outEntry.input = \"named_group\";\n            outEntry.name = entryName;\n            delete outEntry.named_entry;\n        }\n    }\n    \n    if(outEntry.action == \"delete\") {\n        outEntry.input = \"fixed\";\n        delete outEntry.action;\n    }\n\n    return outEntry;\n}","description":""}},"namedKeys":{"name":"namedKeys","type":"apogee.JsonTable","updateData":{"data":{"address keys":true,"lang":true},"description":""}},"oldPresets":{"name":"oldPresets","type":"apogee.JsonTable","updateData":{"data":{"property_trees":{"community_map":[{"k":"com_type","input":"enum","required":true,"v":{"Academic Building":{},"Airport":{},"Apartment Complex":{},"Bus Station":{},"Business Campus":{},"Campground":{},"Casino":{},"College Campus Building":{},"Convention Center":{},"Dormitory":{},"Government":{},"High School":{},"Hospital":{},"Hotel":{},"Industry":{},"Library":{},"Metro Station":{},"Museum":{},"Other":{},"Parking Garage":{},"Religious Building":{},"Retail":{},"School":{},"Shopping Center":{},"Shopping Mall":{},"Sports Center":{},"Stadium":{},"Theater":{},"Theme Park":{},"Train Station":{},"Urban Park":{}}},{"k":"name","input":"text","has_lang":true,"required":true},{"k":"default_lang","input":"named_key","name":"lang","required":true},{"k":"post address","input":"named_group"},{"k":"theme_map","input":"text","has_lang":false}],"community_entity":[{"k":"name","input":"text","has_lang":true,"required":true},{"k":"alt_name","input":"text","desc":"This is a name used by the customer for the venue.","has_lang":true,"required":true},{"k":"entity1","input":"named_group"},{"k":"entity2","input":"named_group"}],"drawing":[{"k":"map_type","input":"enum","required":true,"v":{"Airport":{},"Airport Terminal":{},"Casino":{},"College Building":{},"College Campus":{},"Convention":{},"Hospital":{},"Retail":{},"School Building":{},"School Campus":{},"Shopping Mall":{},"Station":{}}},{"k":"name","input":"text","required":true,"has_lang":true}],"level":[{"k":"name","desc":"This is the full name of the level. If it is longer than TBD characters a short name should also be added.","input":"text","required":true,"has_lang":false},{"k":"short name","desc":"This is a short name for the level. It is used if the full name is longer than TBD characters.","input":"text","has_lang":false},{"k":"elev_m","input":"text"},{"k":"elev_rel_m","input":"text"},{"k":"type","input":"enum","required":true,"v":{"indoor":{},"outdoor":{}}}],"geometry":[{"k":"geom_type","input":"multikey","required":true,"ks":[{"k":"area","desc":"This represents an area. There are alternate keys representing also representing specific types of areas.","input":"enum","v":{"aisle":{},"baggage claim":{"desc":"This is the area where baggage is retrieved. It should not be confused with a baggage carousel."},"copy/print":{},"immigration and customs":{},"meeting point":{},"parcel":{},"passport control":{},"pet relief area":{},"rest area":{},"section":{},"security section":{},"smoke":{},"true":{"desc":"This field represents a generic area."}}},{"k":"barrier","input":"enum","v":{"fence":{},"gate":{},"obstruction":{},"railing":{}}},{"k":"equipment","desc":"This represents machinery, either fixed like a heater or portable like a computer.","input":"enum","v":{"cash register":{},"computer":{},"printer":{},"copy machine":{},"water heater":{},"true":{"desc":"This represents a generic machine."}}},{"k":"facility","desc":"This object represents the objects that construct a building. It can include physical objects like a wall or areas like a room.","input":"enum","v":{"bathroom":{"desc":"A bathroom can have the gender property specified. Alternatively, the gender unspecified should represent both bathrooms. It can alternatively be used for the case of unisex bathroom in cases where the label unisex is obvious.","ks":[{"k":"gender","input":"enum","v":{"female":{},"male":{},"unisex":{"desc":"This is for a bathroom for both genders."},"family":{"desc":"This is for an explicitly classified family bathroom."}}},{"k":"changing station","input":"boolean"},{"k":"disabled access","input":"boolean"},{"k":"as room","desc":"This is appended to a bathroom when it is mapped as a room object instead of as a unit","input":"boolean"}]},"column":{},"door":{},"doorway":{"desc":"This is the open space in the wall where a door goes when plotted as an area. In the case of a line format wall, this doorway may be omitted if a door is present."},"elevator":{"desc":"This represents a single elevator."},"elevator bank":{"desc":"This represents a collection of elevators. It can be used instead of drawing multiple elevators."},"escalator":{"ks":[{"k":"to","input":"enum","v":{"above":{},"below":{},"both":{}}},{"k":"from","input":"enum","v":{"above":{},"below":{},"both":{}}}]},"floor opening":{},"hallway":{"ks":[{"k":"vestibule","desc":"This flag can be added to the portion of a hallway that forms a vestibule.","input":"boolean"}]},"hall area":{"desc":"This is a large open area of hallway, not included intersections."},"inaccessible space":{},"landing":{"desc":"This is the area between stair flights. In some cases it can also be used for the area at the top or bottom of a stairway."},"opening":{"desc":"This is used to illustrate an entrance on objects without doorways, such as an escalator or ramp"},"patio":{"desc":"This is an outdoor area, covered or uncovered, connected or disconnected with a building. This is closely related to a porch."},"platform":{},"porch":{"desc":"This is an covered outdoor area with a floor and typically open sides, connected to a building. This is closely related to a patio."},"ramp":{"ks":[{"k":"disabled access","input":"boolean"}]},"room":{"ks":[{"k":"use","input":"enum","v":{"lost and found":{},"meditation room":{},"auditorium":{},"cafeteria":{},"classroom":{},"conference room":{},"foyer":{"desc":"This is an area at the entryway, often with access to other floors. It is closely related to a lobby but different."},"lab":{},"library":{},"locker room":{},"lobby":{"desc":"This is an area where the main information or clerk desk is located. It is closely related to a foyer but different."},"office":{}}},{"k":"changing station","input":"boolean"}]},"stairs":{"desc":"This represents a stairs object. It will typically be rendered with an icon."},"stairwell":{"desc":"This is the room that houses a stairway. It is typically rendered without an icon."},"step":{"desc":"This represents a single step on a stairway."},"unit":{"ks":[{"k":"class","desc":"This represents a type of unit. As soon as entity categorization is fully used, this designation will be used only for units with a specific purpose. Several entries will be removed.","input":"enum","v":{"car rental":{},"cocktails":{},"coffee":{},"fitness center":{},"food and drink":{},"gym":{},"money changer":{},"movie theatre":{},"restaurant":{},"retail":{},"shoe shine":{},"ticketing, check-in":{},"transit hotel":{}}},{"k":"use","input":"enum","v":{"information":{},"customer service":{},"medical":{},"police/security":{}}}]},"wall":{},"window":{},"window opening":{"desc":"This is the hole in the wall where a window goes."},"moving walkway":{"ks":[{"k":"to","input":"boolean"},{"k":"from","input":"boolean"}]},"element":{"desc":"This is a generic building element object, like a wall or door (although they have their own classifications)."},"area":{"desc":"This is a generic area in a building, simliar to a room or hallway."},"detail":{"desc":"This is a generic detail or contents layer object in a building, like a step."}}},{"k":"fixture","desc":"This is a fixed object, or else one that is heavy and difficult to move.","input":"enum","v":{"baggage carousel":{"desc":"This represents the baggae carousel fixture."},"bin":{"desc":"This represents a bin that is a fixture."},"booth":{},"checkout":{},"countertop":{},"cubicle":{},"kiosk":{},"partition":{},"rack":{"desc":"This represents a rack that is a fixture."},"ramp":{"ks":[{"k":"disabled access","input":"boolean"}]},"shelf":{"desc":"This represents a shelf that is a fixture."},"stage":{},"stall":{},"true":{"desc":"This represents a generic fixture"}}},{"k":"furnishing","desc":"This represents a movable ojbect, like furniture.","input":"enum","v":{"bin":{"desc":"This represents a bin that is a furnishing."},"desk":{},"seat":{"ks":[{"k":"disabled access","input":"boolean"}]},"shelf":{"desc":"This represents a shelf that is a furnishing."},"table":{},"true":{"desc":"This represents a generic furnishing."}}},{"k":"marker","desc":"This represents a marker. It can be either physical, like a traffic line, or nonphysical, like a text label.","input":"enum","v":{"disabled access":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"entrance":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"large text":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"small text":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"traffic marker":{"ks":[{"k":"nonphysical","input":"fixed"}]},"true":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]}},"ks":[{"k":"nonphysical","input":"boolean"}]},{"k":"meta","desc":"This represents a meta data object. It is not a part of the map.","input":"enum","v":{"coordinates":{"ks":[{"k":"external_ref_object","input":"named_group"}]},"source":{"ks":[{"k":"external_ref_object","input":"named_group"}]},"guide":{"k":"publish","input":"fixed","fixed_value":"false"},"level outline":{"k":"publish","input":"fixed","fixed_value":"false"},"ground intersect":{"k":"publish","input":"fixed","fixed_value":"false"}}},{"k":"object","desc":"This is a generic object.","input":"enum","v":{"true":{},"invalid":{},"unknown":{}}},{"k":"recreation","input":"enum","v":{"athletic field":{"ks":[{"k":"sport","input":"enum","v":{"baseball":{},"basketball":{},"cricket":{},"field hockey":{},"football":{},"hockey":{},"soccer":{},"tennis":{}}},{"k":"surface","input":"enum","v":{"grass":{},"asphalt":{},"concrete":{},"clay":{},"gravel":{},"sand":{},"dirt":{},"rubber":{},"artificial turf":{}}}]},"playground":{}}},{"k":"safety","desc":"This is a safety or emergency response service or object.","input":"enum","v":{"defibrillator":{},"emergency exit":{},"eyewash":{},"fire extinguisher":{},"fire hose":{},"fire pull":{},"first aid":{},"true":{"desc":"This is a generic safety object."}}},{"k":"service","desc":"This is a service or amenity.","input":"enum","v":{"atm":{"ks":[{"k":"currency","input":"enum","v":{"general":{},"yen":{},"dollar":{}}}]},"bike rack":{},"changing station":{},"flight monitor":{},"locker":{},"luggage cart":{},"mail":{},"massage chair":{},"paid parking":{},"power":{},"showers":{},"santa":{},"stroller":{},"telephone":{},"tv":{},"valet parking":{},"vending machine":{},"wifi":{},"true":{"desc":"This is a generic service"}}},{"k":"sign","input":"enum","v":{"stop sign":{},"yield sign":{},"true":{"desc":"This is a generic sign."}}},{"k":"signal","input":"enum","v":{"traffic light":{},"true":{"desc":"This is a generic signal."}}},{"k":"structure","desc":"This represents a building or other structure.","input":"enum","v":{"building":{"ks":[{"k":"levels","desc":"This is intended for unmapped buildings only, if the level count is available.","input":"text"}]},"parking structure":{"ks":[{"k":"levels","desc":"This is intended for unmapped buildings only, if the level count is available.","input":"text"}]},"subbuilding":{"desc":"This represents a part of a building which will be treated as an independent building."},"tent":{"desc":"This is intended for durable tents."},"true":{"desc":"This represents a generic structure."}}},{"k":"traffic","input":"enum","v":{"crosswalk":{},"parking lot":{},"parking spot":{"ks":[{"k":"disabled access","input":"boolean"}]},"railway":{},"railway rail":{},"railway tie":{},"road":{"ks":[{"k":"cat","input":"enum","v":{"access road":{},"alley":{},"municipal road":{},"parking access":{},"service road":{},"uncategorized":{}}},{"k":"one way","desc":"This is used for one way roads. The direction refers to the direction relative to the direction the road path is drawn. Applicable to line and linear area roads only.","input":"enum","v":{"fwd":{},"rev":{}}}]},"road intersection":{"desc":"This is used at in intersection when area roads are drawn."},"walkway":{"ks":[{"k":"covered","input":"boolean"}]},"walkway intersection":{"desc":"This is used at in intersection when area walkways are drawn.","ks":[{"k":"covered","input":"boolean"}]}}},{"k":"transit","input":"enum","v":{"bus":{},"ground transportation":{},"taxi":{},"train":{}}},{"k":"vegetation","input":"enum","v":{"earth":{},"garden":{},"grass":{},"greenery":{},"tree":{}}},{"k":"vehicle","input":"enum","v":{"airplane":{}}},{"k":"water","input":"enum","v":{"true":{}}}]},{"k":"name","input":"text","has_lang":true},{"k":"short name","input":"text","has_lang":true},{"k":"style keys","input":"named_group"},{"k":"location","input":"text","has_lang":true,"desc":"This is a textual description of the location, such as wold be given in a directory to help users find the object."},{"k":"info","desc":"This is used to give an additional information on an object, such as the type of object when it is not included in the classification.","input":"text","has_lang":true}],"entity":[{"k":"name","input":"text","has_lang":true,"required":true},{"k":"short name","input":"text","has_lang":true},{"k":"entity1","input":"named_group"},{"k":"post address","input":"named_group"},{"k":"entity2","input":"named_group"},{"k":"location","input":"text","desc":"This field is used for storing geometry address information, before the geometry address is created. It should not be used for a descriptive location."},{"k":"category","input":"text","has_lang":true,"is_array":true,"prop":{"detail":"true"}},{"k":"tags","input":"text","has_lang":true,"is_array":true,"prop":{"detail":"true"}},{"k":"style keys","input":"named_group"}],"chain":[{"k":"name","input":"text","has_lang":true,"required":true},{"k":"short name","input":"text","has_lang":true},{"k":"entity1","input":"named_group"}],"link":[{"k":"nav_class","input":"multikey","required":true,"prop":{"linkType":"class"},"ks":[{"k":"aisle","input":"enum","v":{"major":{},"minor":{}}},{"k":"corridor","input":"enum","v":{"major":{},"minor":{}}},{"k":"entry","input":"enum","v":{"doorway":{},"opening":{},"area":{}}},{"k":"level change","input":"enum","v":{"elevator":{},"escalator":{},"stairs":{},"ramp":{},"transition":{}}},{"k":"mechanical","input":"enum","v":{"moving walkway":{}}},{"k":"path","input":"enum","v":{"major":{},"minor":{}}},{"k":"traffic","input":"enum","v":{"parking lot":{},"shoulder":{},"street":{},"crosswalk":{}}},{"k":"walkway","input":"enum","v":{"major":{},"minor":{}}}]},{"k":"name","input":"text","has_lang":true,"prop":{"linkType":"class"}},{"k":"group","input":"text","prop":{"linkType":"class"}},{"k":"intersection","input":"boolean","prop":{"linkType":"class"}},{"k":"crossing","input":"boolean","prop":{"linkType":"class"}},{"k":"diversion","input":"boolean","prop":{"linkType":"class"}},{"k":"flag","input":"text","prop":{"linkType":"class"}},{"k":"start_to_image","input":"text","prop":{"linkType":"start","reverse":"end_to_image"}},{"k":"start_from_image","input":"text","prop":{"linkType":"start","reverse":"end_from_image"}},{"k":"end_to_image","input":"text","prop":{"linkType":"end","reverse":"start_to_image"}},{"k":"end_from_image","input":"text","prop":{"linkType":"end","reverse":"start_from_image"}},{"k":"start_to_desc","input":"text","prop":{"linkType":"start","reverse":"end_to_desc"}},{"k":"start_from_desc","input":"text","prop":{"linkType":"start","reverse":"end_from_desc"}},{"k":"end_to_desc","input":"text","prop":{"linkType":"end","reverse":"start_to_desc"}},{"k":"end_from_desc","input":"text","prop":{"linkType":"end","reverse":"start_from_desc"}}],"node":[{"k":"name","input":"text","has_lang":true},{"k":"intersection","input":"boolean"}]},"named_groups":{"post address":[{"k":"country","input":"enum","v":{"AD":{},"AE":{},"AF":{},"AG":{},"AI":{},"AL":{},"AM":{},"AN":{},"AO":{},"AQ":{},"AR":{},"AS":{},"AT":{},"AU":{"ks":[{"k":"territory","input":"enum","v":{"NSW":{},"QLD":{},"SA":{},"TAS":{},"VIC":{},"WA":{}}},{"k":"main admin region","input":"fixed"}]},"AW":{},"AX":{},"AZ":{},"BA":{},"BB":{},"BD":{},"BE":{},"BF":{},"BG":{},"BH":{},"BI":{},"BJ":{},"BM":{},"BN":{},"BO":{},"BR":{},"BS":{},"BT":{},"BV":{},"BW":{},"BY":{},"BZ":{},"CA":{"ks":[{"k":"province","input":"enum","v":{"AB":{},"BC":{},"MB":{},"NB":{},"NL":{},"NS":{},"ON":{},"PE":{},"QC":{},"SK":{}}},{"k":"main admin region","input":"fixed"}]},"CC":{},"CD":{},"CF":{},"CG":{},"CH":{},"CI":{},"CK":{},"CL":{},"CM":{},"CN":{},"CO":{},"CR":{},"CV":{},"CX":{},"CY":{},"CZ":{},"DE":{},"DJ":{},"DK":{},"DM":{},"DO":{},"DZ":{},"EC":{},"EE":{},"EG":{},"EH":{},"ER":{},"ES":{},"ET":{},"FI":{},"FJ":{},"FK":{},"FM":{},"FO":{},"FR":{},"GA":{},"GB":{},"GD":{},"GE":{},"GF":{},"GH":{},"GI":{},"GL":{},"GM":{},"GN":{},"GP":{},"GQ":{},"GR":{},"GT":{},"GU":{},"GW":{},"GY":{},"HK":{},"HM":{},"HN":{},"HR":{},"HT":{},"HU":{},"ID":{},"IE":{},"IL":{},"IN":{},"IO":{},"IQ":{},"IS":{},"IT":{},"JM":{},"JO":{},"JP":{"ks":[{"k":"prefecture","input":"enum","v":{"Aichi":{},"Akita":{},"Aomori":{},"Chiba":{},"Ehime":{},"Fukui":{},"Fukuoka":{},"Fukushima":{},"Gifu":{},"Gunma":{},"Hiroshima":{},"Hokkaido":{},"Hyōgo":{},"Ibaraki":{},"Ishikawa":{},"Iwate":{},"Kagawa":{},"Kagoshima":{},"Kanagawa":{},"Kōchi":{},"Kumamoto":{},"Kyoto":{},"Mie":{},"Miyagi":{},"Miyazaki":{},"Nagano":{},"Nagasaki":{},"Nara":{},"Niigata":{},"Ōita":{},"Okayama":{},"Okinawa":{},"Osaka":{},"Saga":{},"Saitama":{},"Shiga":{},"Shimane":{},"Shizuoka":{},"Tochigi":{},"Tokushima":{},"Tokyo":{},"Tottori":{},"Toyama":{},"Wakayama":{},"Yamagata":{},"Yamaguchi":{},"Yamanashi":{}}},{"k":"main admin region","input":"fixed"}]},"KE":{},"KG":{},"KH":{},"KI":{},"KM":{},"KN":{},"KR":{},"KW":{},"KY":{},"KZ":{},"LA":{},"LB":{},"LC":{},"LI":{},"LK":{},"LR":{},"LS":{},"LT":{},"LU":{},"LV":{},"LY":{},"MA":{},"MC":{},"MD":{},"MG":{},"MH":{},"MK":{},"ML":{},"MM":{},"MN":{},"MO":{},"MQ":{},"MR":{},"MS":{},"MT":{},"MU":{},"MV":{},"MW":{},"MX":{},"MY":{},"MZ":{},"NA":{},"NC":{},"NE":{},"NF":{},"NG":{},"NI":{},"NL":{},"NO":{},"NP":{},"NR":{},"NU":{},"NZ":{},"OM":{},"PA":{},"PE":{},"PF":{},"PG":{},"PH":{},"PK":{},"PL":{},"PM":{},"PN":{},"PR":{},"PS":{},"PT":{},"PW":{},"PY":{},"QA":{},"RE":{},"RO":{},"RU":{},"RW":{},"SA":{},"SB":{},"SC":{},"SE":{},"SG":{},"SH":{},"SI":{},"SJ":{},"SK":{},"SL":{},"SM":{},"SN":{},"SO":{},"SR":{},"ST":{},"SV":{},"SZ":{},"TC":{},"TD":{},"TF":{},"TG":{},"TH":{},"TJ":{},"TK":{},"TM":{},"TN":{},"TO":{},"TR":{},"TT":{},"TV":{},"TW":{},"TZ":{},"UA":{},"UG":{},"UM":{},"US":{"ks":[{"k":"state","input":"enum","v":{"AK":{},"AL":{},"AR":{},"AZ":{},"CA":{},"CO":{},"CT":{},"DC":{},"DE":{},"FL":{},"GA":{},"HI":{},"IA":{},"ID":{},"IL":{},"IN":{},"KS":{},"KY":{},"LA":{},"MA":{},"MD":{},"ME":{},"MI":{},"MN":{},"MO":{},"MS":{},"MT":{},"NC":{},"ND":{},"NE":{},"NH":{},"NJ":{},"NM":{},"NV":{},"NY":{},"OH":{},"OK":{},"OR":{},"PA":{},"RI":{},"SC":{},"SD":{},"TN":{},"TX":{},"UT":{},"VA":{},"VT":{},"WA":{},"WI":{},"WV":{},"WY":{}}},{"k":"main admin region","input":"fixed"}]},"UY":{},"UZ":{},"VC":{},"VE":{},"VG":{},"VI":{},"VN":{},"VU":{},"WF":{},"WS":{},"YE":{},"YT":{},"ZA":{},"ZM":{},"ZW":{}}},{"k":"main admin region","input":"multikey","ks":[{"k":"state","input":"text","has_lang":true},{"k":"province","input":"text","has_lang":true},{"k":"prefecture","input":"text","has_lang":true},{"k":"territory","input":"text","has_lang":true}]},{"k":"postal code","input":"text"},{"k":"city","input":"text","has_lang":true},{"k":"street address","input":"text","has_lang":true}],"names":[{"k":"name","input":"named_key"},{"k":"short name","input":"text","has_lang":true}],"entity1":[{"k":"phone","input":"text","prop":{"detail":"true"}},{"k":"email","input":"text","prop":{"detail":"true"}},{"k":"url","input":"text","prop":{"detail":"true"}},{"k":"fax","input":"text","prop":{"detail":"true"}},{"k":"description","input":"text","has_lang":true,"prop":{"detail":"true"}},{"k":"naics","input":"text","is_array":true,"prop":{"detail":"true"}}],"entity2":[{"k":"hours","input":"text","has_lang":true,"prop":{"detail":"true"}},{"k":"storeid","input":"text"},{"k":"prop_owner","input":"text"},{"k":"product","input":"text","has_lang":true,"prop":{"detail":"true"}}],"style keys":[{"k":"$icon","input":"text","has_lang":false},{"k":"$style","input":"text","has_lang":false},{"k":"$image_url","input":"text","has_lang":false},{"k":"$label_text","input":"text","has_lang":false},{"k":"$body_color","input":"text","has_lang":false},{"k":"$outline_color","input":"text","has_lang":false},{"k":"$outline_width","input":"text","has_lang":false},{"k":"$text_color","input":"text","has_lang":false}],"external_ref_object":[{"k":"ref","input":"text","has_lang":false},{"k":"xscale","input":"text","has_lang":false},{"k":"yscale","input":"text","has_lang":false},{"k":"units","input":"enum","v":{"m":{},"km":{},"cm":{},"ft":{},"yd":{},"in":{},"mile":{}}},{"k":"publish","input":"boolean"}]},"named_keys":{"address keys":{"k":"address keys","input":"enum","v":{"$id":{},"Booth":{},"Gate":{},"Meeting Room":{},"Unit":{},"#":{},"Section":{},"Space":{},"Region":{},"Zone":{},"Area":{},"Field":{},"Level":{},"Stair":{},"Escalator":{},"Elevator":{},"Door":{},"Ramp":{},"Cubicle":{},"Office":{},"Bathroom":{},"Entrance":{},"Store":{},"Apartment":{},"Apt":{},"Room":{},"Rm":{},"Suite":{},"Terminal":{},"Concourse":{},"Hanger":{},"Hall":{},"Aisle":{},"Shelf":{},"Bin":{},"Department":{},"Rack":{},"End Cap":{},"Display":{},"Row":{},"Box":{},"Seat":{},"Concession":{},"Locker":{},"Desk":{},"Chair":{},"Street":{},"Road":{},"Zip Code":{},"City":{},"Neighborhood":{},"Address":{},"Address 2":{},"State":{},"Country":{},"Exhibit":{},"Painting":{},"Sculpture":{},"Lane":{},"Exit":{},"Intersection":{},"Lot":{},"Mall":{},"Building":{},"Moving Walkway":{}}},"lang":{"k":"lang","input":"enum","v":{"en":{},"ja":{},"zh":{},"de":{},"fr":{},"es":{},"it":{},"ar":{},"da":{},"he":{},"hi":{},"id":{},"ko":{},"nl":{},"pt":{},"ro":{},"sv":{},"ru":{},"tr":{},"gu":{},"pl":{},"cs":{},"sk":{},"th":{}}}}},"description":""}},"modOldPresets":{"name":"modOldPresets","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var oldPresetsCopy = apogee.util.deepJsonCopy(oldPresets);\nreturn convert(oldPresetsCopy);","supplementalCode":"function convert(data) {\n    var objectType = apogee.util.getObjectType(data);\n    if(objectType == \"Object\") {\n        return convertObject(data);\n    }\n    else if(objectType == \"Array\") {\n        return convertArray(data);\n    }\n    else {\n        return data;\n    }\n}\n\nfunction convertObject(data) {\n    for(var key in data) {\n        var value = data[key];\n        \n        if(key == \"desc\") {\n            delete data.desc;\n        }\n        else if((key == \"has_lang\")&&(value == false)) {\n            delete data.has_lang;\n        }\n        else {\n            data[key] = convert(value);\n        }\n    }\n    return data;\n}\n\nfunction convertArray(data) {\n    for(var i = 0; i < data.length; i++) {\n        data[i] = convert(data[i]);\n    }\n    return data;\n}","description":""}}}}}},"micemetarDataAccess":{"name":"micemetarDataAccess","type":"apogee.Folder","children":{"createRecord":{"name":"createRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordInfo","fieldMap"],"functionBody":"var record = {};\n\nrecord.Id = getId();\nrecord.Type = recordInfo.name;\nrecord.Fields = fieldMap;\nrecord.read_perm = READ_PERM;\nrecord.edit_perm = EDIT_PERM;\n\nreturn record;","supplementalCode":"var READ_PERM = 2;\nvar EDIT_PERM = 15;\n\nvar nextId = -1;\n\nfunction getId() {\n    return nextId--;\n}","description":"This method creates a record given the field values and record info \nfrom the data set info. It creates and ID and uses standard permissions."}},"recordsToCreateInstructions":{"name":"recordsToCreateInstructions","type":"apogee.FunctionTable","updateData":{"argList":["recordList"],"functionBody":"var instructions = [];\n\nfor(var i = 0; i < recordList.length; i++) {\n    var createRecord = recordList[i];\n    var instruction = createCreateInstruction(createRecord);\n    instructions.push(instruction);\n}\n\nreturn instructions;","supplementalCode":"","description":"This creates a list of create instructions to go along with a list of records to be created.\n\nThere is the option to assign the ID or to leave it as undefined, in which case\nan automatically incremented ID will be assigned. (For consistency in the data\nset, either all records should be preassigned or all records should be \nautomatically assigned."}},"createCommitBody":{"name":"createCommitBody","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage"],"functionBody":"var commit = {};\nvar actions = [];\n\nif(commitMessage.length === 0) throw new Error(\"Commit message missing!\");\n\ncommit.Name = dataSetInfo.name;\ncommit.Message = commitMessage;\ncommit.Actions = actions;\n\n//single action with commits\nvar action = {};\naction.Title = \"bulk create commit\";\naction.Instr = instructionList;\nactions.push(action);\n\nreturn commit","supplementalCode":"","description":"This creates a body for a commit request, given a list of instructions and a commit message."}},"createRequestOptions":{"name":"createRequestOptions","type":"apogee.FunctionTable","updateData":{"argList":["bodyJson","sessionKey"],"functionBody":"var header = {};\nheader[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\nheader.sessionKey = sessionKey;\nheader[\"proto-version\"] = \"4.0\";\nheader[\"db-version\"] = dataSetInfo.version;\n\nrequestInfo = {};\nrequestInfo.header = header;\nif(bodyJson) {\n    requestInfo.method = \"POST\";\n    requestInfo.body = JSON.stringify(bodyJson);\n}\n\nreturn requestInfo;\n","supplementalCode":"","description":"This creates the requestOptions, suitable for apogee.net.jsonRequest, to go with an type of request to the workingset (micemetarequest) server."}},"host":{"name":"host","type":"apogee.JsonTable","updateData":{"data":"http://localhost:8080/micemetarws","description":""}},"commitUrl":{"name":"commitUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/commit\";\nreturn value;\n\n","supplementalCode":"","description":""}},"requestUrl":{"name":"requestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/cannedsearch\";\nreturn value;\n\n","supplementalCode":"","description":""}},"dataSetInfo":{"name":"dataSetInfo","type":"apogee.JsonTable","updateData":{"data":{"records":{"file_entry_relation":{"idField":"file_entry_rel_id","name":"file_entry_relation","foreignList":[],"fields":[{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"ref_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"relation_type","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileEntryRelation"},"com_file_entry":{"idField":"com_file_entry_id","name":"com_file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"com_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.ComFile"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_group","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFileEntry"},"file_type":{"idField":"file_type_id","name":"file_type","foreignList":[{"remoteRecord":"file_entry","name":"file_entry_list","isUnique":false,"remoteField":"file_type_id","restrictDelete":true}],"fields":[{"defaultValue":null,"name":"file_type_name","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.FileType"},"file_entry":{"idField":"file_entry_id","name":"file_entry","foreignList":[{"remoteRecord":"file_entry_relation","name":"file_entry_ref_list","isUnique":false,"remoteField":"file_entry_id","restrictDelete":true}],"fields":[{"defaultValue":null,"name":"entry_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"entry_section","nullOk":true,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_value","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"option_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_data","nullOk":false,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.FileEntry"},"recipe_entry":{"idField":"recipe_entry_id","name":"recipe_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileEntry"},{"defaultValue":null,"name":"insertion_info","nullOk":true,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetar.data.RecipeEntry"},"com_file":{"idField":"com_file_id","name":"com_file","foreignList":[{"remoteRecord":"com_file_entry","name":"com_file_entry_list","isUnique":false,"remoteField":"com_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"ref","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.ComFile"},"meta_file":{"idField":"meta_file_id","name":"meta_file","foreignList":[{"remoteRecord":"recipe_entry","name":"recipe_entry_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"},{"remoteRecord":"meta_ref_entry","name":"base_file_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.FileType"},{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetar.data.MetaFile"},"meta_ref_entry":{"idField":"meta_ref_entry_id","name":"meta_ref_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"},{"defaultValue":null,"name":"base_file_id","nullOk":false,"fieldClass":"com.micello.micemetar.data.MetaFile"}],"recordClass":"com.micello.micemetar.data.MetaRefEntry"}},"name":"Micemetar","version":"5.0"},"description":""}},"version":{"name":"version","type":"apogee.JsonTable","updateData":{"data":"1.6","description":""}},"createUpdateInstruction":{"name":"createUpdateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["initialRecord","targetRecord"],"functionBody":"if(initialRecord.Id != targetRecord.Id) {\n    throw new Error(\"Record ID mismatch in create update instruction for target record: \" + getRecordErrString(targetRecord));\n}\n\nif(initialRecord.Type != targetRecord.Type) {\n    throw new Error(\"Inital and target record types do not match. Target record: \" + getRecordErrString(targetRecord));\n}\n\nvar recordsDifferent = false;\n\nvar recordInfo = getRecordInfo(initialRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Update\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = initialRecord.Id;\n\ninstruction.initialReadPerm = initialRecord.read_perm;\ninstruction.initialEditPerm = initialRecord.edit_perm;\n\nif(initialRecord.readPerm != targetRecord.readPerm) {\n    instruction.targetReadPerm = targetRecord.read_perm;\n    recordsDifferent = true;\n}\n\nif(initialRecord.editPerm != targetRecord.editPerm) {\n    instruction.targetEditPerm = targetRecord.edit_perm;\n    recordsDifferent = true;\n}\n\nvar initialData = {};\ninstruction.Initial = initialData;\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    \n    var initialValue;\n    var targetValue;\n    \n    var initialValue = initialRecord.Fields[field.name];\n    var targetValue = targetRecord.Fields[field.name];\n    \n    //validate target values\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n        }\n    }\n    \n    if(!fieldsMatch(initialValue,targetValue,field)) {\n        initialData[field.name] = initialValue;\n        targetData[field.name] = targetValue;\n        recordsDifferent = true;\n    }\n}\n\nif(recordsDifferent) {\n    return instruction;\n}\nelse {\n    return null;\n}\n","supplementalCode":"function fieldsMatch(initialValue,targetValue,fieldInfo) {\n    if(fieldInfo.fieldClass === \"java.lang.String\") {\n        //compare strings with \"==\"\n        return (initialValue == targetValue);\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"java.lang\")) {\n        //compare other basic values with \"===\"\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"com.micello\")) {\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONObject\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONArray\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else {\n        throw new Error(\"unrecognized field type: \" + fieldInfo.fieldClass);\n    }\n}\n\nfunction compareJsonData(a,b) {\n    var an = apogee.util.getNormalizedObjectCopy(a);\n    var bn = apogee.util.getNormalizedObjectCopy(b);\n    var aString = JSON.stringify(an);\n    var bString = JSON.stringify(bn);\n    return aString == bString;\n}\n    ","description":"This function creates an update instruction given an initial and target record. If the records are the same then NULL is returned. (No update is needed.)"}},"createCreateInstruction":{"name":"createCreateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["createRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(createRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Create\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = createRecord.Id;\n\ninstruction.targetReadPerm = createRecord.read_perm;\ninstruction.targetEditPerm = createRecord.edit_perm;\n\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var targetValue;\n    var targetValue = createRecord.Fields[field.name];\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecord,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecord,field));\n        }\n    }\n    \n    targetData[field.name] = targetValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getFieldErrString":{"name":"getFieldErrString","type":"apogee.FunctionTable","updateData":{"argList":["record","fieldInfo"],"functionBody":"return getRecordErrString(record) + \" - \" + fieldInfo.name;","supplementalCode":"","description":""}},"getRecordErrString":{"name":"getRecordErrString","type":"apogee.FunctionTable","updateData":{"argList":["record"],"functionBody":"return record.Type + \" \" + record.Id;","supplementalCode":"","description":""}},"createDeleteInstruction":{"name":"createDeleteInstruction","type":"apogee.FunctionTable","updateData":{"argList":["deleteRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(deleteRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Delete\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = deleteRecord.Id;\n\ninstruction.initialReadPerm = deleteRecord.read_perm;\ninstruction.initialEditPerm = deleteRecord.edit_perm;\n\nvar initialData = {};\ninstruction.Initial = initialData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var initialValue = deleteRecord.Fields[field.name];\n    \n    initialData[field.name] = initialValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getRecordInfo":{"name":"getRecordInfo","type":"apogee.FunctionTable","updateData":{"argList":["recordType"],"functionBody":"var recordInfo = dataSetInfo.records[recordType];\n\nif(!recordInfo) {\n    throw new Error(\"Record type not found in getRecordInfo: \" + recordType);\n}\n\nreturn recordInfo;","supplementalCode":"","description":""}},"combinedEntriesToInstructionList":{"name":"combinedEntriesToInstructionList","type":"apogee.FunctionTable","updateData":{"argList":["combinedEntries"],"functionBody":"var output = [];\nfor(var key in combinedEntries) {\n    var entry = combinedEntries[key];\n    var instruction = getInstructionForCombinedEntry(entry);\n    if(instruction) {\n        output.push(instruction);\n    }\n}\n\nreturn output;","supplementalCode":"function getInstructionForCombinedEntry(combinedEntry) {\n    var newEntry = combinedEntry.newEntry;\n    var oldEntry = combinedEntry.oldEntry;\n    \n    if(newEntry) {\n        if(!oldEntry) {\n            console.log(\"Create: \" + newEntry.Id);\n            return createCreateInstruction(newEntry);\n        }\n        else {\n            //this will return null for matching records\n            console.log(\"Update(maybe): \" + newEntry.Id);\n            return createUpdateInstruction(oldEntry,newEntry);\n        }\n    }\n    else if(oldEntry) {\n        console.log(\"Delete: \" + oldEntry.Id);\n        return createDeleteInstruction(oldEntry);\n    }\n    \n    return null;\n}\n\nfunction entriesDifferent(entry1,entry2) {\n    var string1 = JSON.stringify(apogee.util.getNormalizedCopy(entry1));\n    var string2 = JSON.stringify(apogee.util.getNormalizedCopy(entry2));\n    return (string1 == string2);\n}","description":"This function takes a combined entry map of the format:\n\n{\n  \"some-identifier\":{\n    \"oldEntry\":{original record entry, if applicable},\n    \"newEntry\":{new record entry, if applicable}\n  },\n  ...\n}\n\nIt returns an instruction list.\n\n"}},"getCommitPromise":{"name":"getCommitPromise","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage","sessionKey"],"functionBody":"var commitBody = createCommitBody(instructionList,commitMessage);\nvar requestOptions = createRequestOptions(commitBody,sessionKey);\nvalue = apogee.net.jsonRequest(commitUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}},"getRequestPromise":{"name":"getRequestPromise","type":"apogee.FunctionTable","updateData":{"argList":["requestBody","sessionKey"],"functionBody":"var requestOptions = createRequestOptions(requestBody,sessionKey);\nvalue = apogee.net.jsonRequest(requestUrl,requestOptions);\nreturn value;","supplementalCode":"","description":""}}}}}}},"components":{"taskResults":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":34,"y":95}},"children":{"loadMetaFileRecords":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":421,"height":601},"posInfo":{"x":68,"y":37},"state":0,"viewType":"JSON"}},"login":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":743,"height":276},"posInfo":{"x":599,"y":199},"state":0,"viewType":"Text"}},"loadContext":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":335,"height":125},"posInfo":{"x":62,"y":110},"state":0,"viewType":"Text"}}}},"tasks":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":37,"y":37}},"children":{"login":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":79,"y":21}},"children":{"loginUrl":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":463,"height":86},"posInfo":{"x":26,"y":27},"state":0,"viewType":"Text"}},"loginControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":404,"height":129},"posInfo":{"x":28,"y":148},"state":0,"viewType":"Output"},"resource":{"html":"","css":"","setData":"this.loginUrl = data;","constructorAddition":"\n\n//this uses the updated version of test authorization that takes and returns a JSON\nthis.onClick = function() {\n    \n    //on click\n    var bodyJson = {};\n    bodyJson.userName = resource.userInput.value;\n    bodyJson.password = resource.passwordInput.value;\n    \n    //cleaer password field\n    resource.passwordInput.value = \"\";\n    \n    var options = {};\n    options.body = JSON.stringify(bodyJson);\n    options.method = \"POST\";\n    \n    var requestPromise = apogee.net.jsonRequest(this.loginUrl,options);\n    \n    //set the response\n    mode.getMessenger().asynchDataUpdate(\"sessionResponse\",requestPromise);\n}","init":"\nvar label1 = document.createElement(\"label\");\nlabel1.for = \"userInput\";\nlabel1.innerHTML = \"User:\"\nelement.appendChild(label1);\n\nvar input1 = document.createElement(\"input\");\ninput1.id = \"userInput\";\nresource.userInput = input1;\nelement.appendChild(input1);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar label2 = document.createElement(\"label\");\nlabel2.for = \"passwordInput\";\nlabel2.innerHTML = \"Password:\"\nelement.appendChild(label2);\n\nvar input2 = document.createElement(\"input\");\ninput2.id = \"passwordInput\";\ninput2.type = \"password\";\nresource.passwordInput = input2;\nelement.appendChild(input2);\n\nelement.appendChild(document.createElement(\"br\"));\n\nvar button = document.createElement(\"button\");\nbutton.innerHTML = \"Login\";\nelement.appendChild(button);\n\nvar instance = this;\nbutton.onclick = function() {\n    instance.onClick();\n}\n\n\n"}},"sessionResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":697,"height":121},"posInfo":{"x":26,"y":306},"state":0,"viewType":"Text"}},"taskResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":711,"height":146},"posInfo":{"x":21,"y":452},"state":0,"viewType":"Text"}}}},"loadMetaFileRecords":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":76,"y":136}},"children":{"fileTypeList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":555,"height":325},"posInfo":{"x":296,"y":149},"state":-1,"viewType":"Text"}},"fileTypeEntryList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":742,"height":473},"posInfo":{"x":552,"y":196},"state":-1,"viewType":"Formula"}},"recordStore":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":1284,"height":549},"posInfo":{"x":390,"y":466},"state":-1,"viewType":"Formula"}},"metaFileResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":799,"height":449},"posInfo":{"x":551,"y":144},"state":-1,"viewType":"Formula"}},"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":560,"height":289},"posInfo":{"x":41,"y":167},"state":-1,"viewType":"Formula"}},"getRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":488,"height":179},"posInfo":{"x":372,"y":396},"state":-1,"viewType":"Private"}},"metaFileSelector":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":341,"height":107},"posInfo":{"x":79,"y":273},"state":0,"viewType":"Output"},"resource":{"html":"<select id=\"load_metaFileSelect\"></select>\n<br><br>\n<input type=\"button\" value=\"Submit\" id=\"load_submitButton\"></input>\n<input type=\"button\" value=\"Cancel\" id=\"load_cancelButton\"></input>","onLoad":"this.selectMetaFileElement = document.getElementById(\"load_metaFileSelect\");\nthis.submitButton = document.getElementById(\"load_submitButton\");\nthis.cancelButton = document.getElementById(\"load_cancelButton\");\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmitClick();\n}\nthis.cancelButton.onclick = function() {\n    instance.onCancelClick();\n}\n\nthis.initialized = true;","setData":"if(!data) return;\nif(!this.initialized) return;\n\nvar INVALID_ID = 0;\n\napogeeapp.ui.removeAllChildren(this.selectMetaFileElement);\n\n//add a dummy entry\nvar option = document.createElement(\"option\");\noption.text = \"<none selected>\";\n\noption.value = INVALID_ID;\nif(INVALID_ID == data.currentMetaFileId) option.selected = true;\nthis.selectMetaFileElement.add(option);\n\nfor(var fileDesc in data.metaFiles) {\n    var id = data.metaFiles[fileDesc];\n    var option = document.createElement(\"option\");\n    option.text = fileDesc;\n    option.value = id;\n    if(id == data.currentMetaFileId) option.selected = true;\n    this.selectMetaFileElement.add(option);\n}\n","constructorAddition":"\nthis.onSubmitClick = function() {\n    \n    if(!this.selectMetaFileElement) {\n        alert(\"Error; UI not initialized\");\n        return;\n    }\n    \n    if(this.selectMetaFileElement.length === 0) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var selectedIdString = this.selectMetaFileElement.value;\n    if(!isFinite(selectedIdString)) {\n        alert(\"Invalid selection!\");\n        return;\n    }\n    \n    var metaFileId = Number(selectedIdString);\n    \n    //create the compound update\n    var updateInfo = [];\n    updateInfo.push([\"selectedMetaFileId\",metaFileId]);\n    updateInfo.push([\"storeDataFlag\",true]);\n    mode.getMessenger().compoundDataUpdate(updateInfo);\n}\n\nthis.onCancelClick = function() {\n    mode.getMessenger().dataUpdate(\"taskResults.loadContext\",\"\");\n}\n\n"}},"INVALID_ID":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":220,"height":70},"posInfo":{"x":29,"y":644},"state":0,"viewType":"Text"}},"availableFileEntries":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":690,"height":694},"posInfo":{"x":899,"y":82},"state":-1,"viewType":"Formula"}},"existingMetaFileEntry":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":646,"height":259},"posInfo":{"x":877,"y":149},"state":-1,"viewType":"Text"}},"existingRecipeEntries":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":592,"height":452},"posInfo":{"x":904,"y":206},"state":-1,"viewType":"Formula"}},"storeDataFlag":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":233,"height":35},"posInfo":{"x":844,"y":455},"state":0,"viewType":"Text"}},"taskResult":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":944,"height":639},"posInfo":{"x":842,"y":537},"state":-1,"viewType":"Formula"}},"dataLoadSuccess":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":750,"height":448},"posInfo":{"x":550,"y":290},"state":-1,"viewType":"Text"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":268,"height":55},"posInfo":{"x":309,"y":8},"state":-1,"viewType":"Text"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":259,"height":102},"posInfo":{"x":22,"y":14},"state":-1,"viewType":"Formula"}},"selectedMetaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":270,"height":102},"posInfo":{"x":18,"y":464},"state":0,"viewType":"Text"}},"fileType":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":541,"height":217},"posInfo":{"x":861,"y":266},"state":-1,"viewType":"Formula"}}}},"loadContext":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":82,"y":74}},"children":{"contextControl":{"type":"apogeeapp.app.CustomControlComponent","windowState":{"sizeInfo":{"width":394,"height":141},"posInfo":{"x":67,"y":55},"state":0,"viewType":"Output"},"resource":{"html":"Context: <input type=\"text\" id=\"context_text\"></input>\n<br><br>\n<input type=\"button\" id=\"context_submit\" value=\"Submit\"></input>\n<input type=\"button\" id=\"context_newlogin\" value=\"New Login\"></input>","onLoad":"this.textInput = document.getElementById(\"context_text\");\nthis.submitButton = document.getElementById(\"context_submit\");\nthis.newLoginButton = document.getElementById(\"context_newlogin\");\nthis.initialized = true;\n\nvar instance = this;\nthis.submitButton.onclick = function() {\n    instance.onSubmit();\n}\nthis.newLoginButton.onclick = function() {\n    instance.onNewLogin();\n}","constructorAddition":"this.textInput = null;\nthis.submitButton = null;\nthis.newLogingButton = null;\nthis.initialized = false;\n\nthis.onSubmit = function() {\n    if(!this.initialized) return;\n    \n    var context = this.textInput.value.trim();\n    if(context.length === 0) {\n        alert(\"Invalid context value.\");\n        return;\n    }\n    \n    var output = {};\n    output.state = \"SUCCESS\";\n    output.data = {}\n    output.data.context = context;\n    \n    var messenger = mode.getMessenger();\n    messenger.dataUpdate(\"taskResults.loadContext\",output);\n}\n\nthis.onNewLogin = function() {\n    mode.getMessenger().dataUpdate(\"taskResults.login\",\"\");\n}"}}}},"fileReconstruct":{"type":"apogeeapp.app.FolderComponent","children":{"createRecordStructure":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":674,"height":642},"posInfo":{"x":405,"y":34},"state":-1,"viewType":"JSON"}},"fileType":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":367,"height":36},"posInfo":{"x":20,"y":94},"state":0,"viewType":"Text"}},"firstStepFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":937,"height":619},"posInfo":{"x":26,"y":287},"state":-1,"viewType":"JSON"}},"typeRemap":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":902,"y":77},"state":-1,"viewType":"Text"}},"tagRename":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":419,"y":150},"state":-1,"viewType":"Text"}},"newFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":1001,"height":755},"posInfo":{"x":27,"y":204},"state":-1,"viewType":"JSON"}},"namedKeys":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":893,"y":114},"state":-1,"viewType":"Text"}},"oldPresets":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":521,"y":371},"state":-1,"viewType":"Text"}},"modOldPresets":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":312,"height":300},"posInfo":{"x":740,"y":373},"state":-1,"viewType":"Text"}}}}}},"micemetarDataAccess":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":216,"y":34}},"children":{"createRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":560,"height":321},"posInfo":{"x":32,"y":389},"state":-1,"viewType":"Code"}},"recordsToCreateInstructions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":834,"height":391},"posInfo":{"x":30,"y":472},"state":-1,"viewType":"Code"}},"createCommitBody":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":568,"height":400},"posInfo":{"x":629,"y":225},"state":-1,"viewType":"Code"}},"createRequestOptions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":523,"height":254},"posInfo":{"x":863,"y":473},"state":0,"viewType":"Code"}},"host":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":353,"height":71},"posInfo":{"x":927,"y":45},"state":0,"viewType":"Text"}},"commitUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":433,"height":107},"posInfo":{"x":14,"y":98},"state":-1,"viewType":"Text"}},"requestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":450,"height":68},"posInfo":{"x":921,"y":306},"state":0,"viewType":"Formula"}},"dataSetInfo":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":882,"height":611},"posInfo":{"x":63,"y":665},"state":0,"viewType":"JSON"}},"version":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":197,"height":91},"posInfo":{"x":523,"y":367},"state":0,"viewType":"Text"}},"createUpdateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":886,"height":655},"posInfo":{"x":36,"y":248},"state":-1,"viewType":"Code"}},"createCreateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":994,"height":643},"posInfo":{"x":35,"y":209},"state":-1,"viewType":"Code"}},"getFieldErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":512,"height":68},"posInfo":{"x":761,"y":616},"state":-1,"viewType":"Code"}},"getRecordErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":81},"posInfo":{"x":762,"y":664},"state":-1,"viewType":"Code"}},"createDeleteInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":678,"height":540},"posInfo":{"x":36,"y":289},"state":-1,"viewType":"Code"}},"getRecordInfo":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":480,"height":400},"posInfo":{"x":818,"y":427},"state":-1,"viewType":"Code"}},"combinedEntriesToInstructionList":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":721,"height":524},"posInfo":{"x":285,"y":131},"state":-1,"viewType":"Private"}},"getCommitPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":741,"height":400},"posInfo":{"x":374,"y":75},"state":-1,"viewType":"Code"}},"getRequestPromise":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":810,"height":400},"posInfo":{"x":492,"y":556},"state":0,"viewType":"Code"}}}}}}