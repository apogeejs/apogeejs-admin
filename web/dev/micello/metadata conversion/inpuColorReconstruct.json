{"fileType":"apogee workspace","jsLinks":[],"cssLinks":[],"workspace":{"fileType":"apogee workspace","version":0.2,"data":{"name":"inputColorReconstruct","type":"apogee.Folder","children":{"micemetarecipeDataAccess":{"name":"micemetarecipeDataAccess","type":"apogee.Folder","children":{"createRecord":{"name":"createRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordInfo","fieldMap"],"functionBody":"var record = {};\n\nrecord.Id = getId();\nrecord.Type = recordInfo.name;\nrecord.Fields = fieldMap;\nrecord.read_perm = READ_PERM;\nrecord.edit_perm = EDIT_PERM;\n\nreturn record;","supplementalCode":"var READ_PERM = 2;\nvar EDIT_PERM = 15;\n\nvar nextId = -1;\n\nfunction getId() {\n    return nextId--;\n}","description":"This method creates a record given the field values and record info \nfrom the data set info. It creates and ID and uses standard permissions."}},"recordsToCreateInstructions":{"name":"recordsToCreateInstructions","type":"apogee.FunctionTable","updateData":{"argList":["recordList"],"functionBody":"var instructions = [];\n\nfor(var i = 0; i < recordList.length; i++) {\n    var createRecord = recordList[i];\n    var instruction = createCreateInstruction(createRecord);\n    instructions.push(instruction);\n}\n\nreturn instructions;","supplementalCode":"","description":"This creates a list of create instructions to go along with a list of records to be created.\n\nThere is the option to assign the ID or to leave it as undefined, in which case\nan automatically incremented ID will be assigned. (For consistency in the data\nset, either all records should be preassigned or all records should be \nautomatically assigned."}},"createCommitBody":{"name":"createCommitBody","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage"],"functionBody":"var commit = {};\nvar actions = [];\n\nif(commitMessage.length === 0) throw new Error(\"Commit message missing!\");\n\ncommit.Name = dataSetInfo.name;\ncommit.Message = commitMessage;\ncommit.Actions = actions;\n\n//single action with commits\nvar action = {};\naction.Title = \"bulk create commit\";\naction.Instr = instructionList;\nactions.push(action);\n\nreturn commit","supplementalCode":"","description":"This creates a body for a commit request, given a list of instructions and a commit message."}},"createRequestOptions":{"name":"createRequestOptions","type":"apogee.FunctionTable","updateData":{"argList":["bodyJson"],"functionBody":"var header = {};\nheader[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\nheader.sessionKey = sessionKey;\nheader[\"proto-version\"] = \"4.0\";\nheader[\"db-version\"] = dataSetInfo.version;\n\nrequestInfo = {};\nrequestInfo.header = header;\nrequestInfo.method = \"POST\";\nrequestInfo.body = JSON.stringify(bodyJson);\n\nreturn requestInfo;\n","supplementalCode":"","description":"This creates the requestOptions, suitable for apogee.net.jsonRequest, to go with an type of request to the workingset (micemetarequest) server."}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"data":"SESS0f6c4c2238a670b8138b63d9fd03cc22=2nnseqb0h1vsm5mvv7i3vs0hd6","description":""}},"host":{"name":"host","type":"apogee.JsonTable","updateData":{"data":"http://localhost:8080/micemetarecipews","description":""}},"commitUrl":{"name":"commitUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/commit\";\nreturn value;\n\n","supplementalCode":"","description":""}},"requestUrl":{"name":"requestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/cannedsearch\";\nreturn value;\n\n","supplementalCode":"","description":""}},"dataSetInfo":{"name":"dataSetInfo","type":"apogee.JsonTable","updateData":{"data":{"records":{"file_entry_type":{"idField":"file_entry_type_id","name":"file_entry_type","foreignList":[{"remoteRecord":"file_entry","name":"file_entry_list","isUnique":false,"remoteField":"file_entry_type_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileType"},{"defaultValue":null,"name":"section","nullOk":true,"fieldClass":"org.json.JSONArray"},{"defaultValue":null,"name":"key_string","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.FileEntryType"},"com_file_entry":{"idField":"com_file_entry_id","name":"com_file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"com_file_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.ComFile"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.MetaFile"},{"defaultValue":null,"name":"file_group","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.ComFileEntry"},"file_type":{"idField":"file_type_id","name":"file_type","foreignList":[{"remoteRecord":"file_entry_type","name":"file_entry_type_list","isUnique":false,"remoteField":"file_type_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_name","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.FileType"},"file_entry":{"idField":"file_entry_id","name":"file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"file_entry_type_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileEntryType"},{"defaultValue":null,"name":"entry_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"option_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_data","nullOk":false,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetarecipe.data.FileEntry"},"recipe_entry":{"idField":"recipe_entry_id","name":"recipe_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.MetaFile"},{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileEntry"},{"defaultValue":null,"name":"insertion_info","nullOk":true,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetarecipe.data.RecipeEntry"},"com_file":{"idField":"com_file_id","name":"com_file","foreignList":[{"remoteRecord":"com_file_entry","name":"com_file_entry_list","isUnique":false,"remoteField":"com_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.ComFile"},"meta_file":{"idField":"meta_file_id","name":"meta_file","foreignList":[{"remoteRecord":"recipe_entry","name":"recipe_entry_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileType"},{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.MetaFile"}},"name":"Micemetarecipe","version":"5.0"},"description":""}},"version":{"name":"version","type":"apogee.JsonTable","updateData":{"data":"1.3","description":""}},"releaseNotes":{"name":"releaseNotes","type":"apogee.JsonTable","updateData":{"data":"","description":"1.3\n---\nFixed a field name bug\n\n1.2\n---\nFixed bug in create delete instruction\n\n1.1\n---\nAdded additional functions\n\n1.0\n---\ninitial release"}},"depedencies":{"name":"depedencies","type":"apogee.JsonTable","updateData":{"data":"none","description":""}},"createUpdateInstruction":{"name":"createUpdateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["initialRecord","targetRecord"],"functionBody":"if(initialRecord.id != targetRecord.ID) {\n    throw new Error(\"Record ID mismatch in create update instruction for target record: \" + getRecordErrorMessage(targetRecord));\n}\n\nif(initialRecord.Type != targetRecord.Type) {\n    throw new Error(\"Inital and target record types do not match. Target record: \" + getRecordErrorMessage(targetRecord));\n}\n\nvar recordInfo = getRecordInfo(initialRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Update\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = initialRecord.Id;\n\ninstruction.initialReadPerm = initialRecord.read_perm;\ninstruction.initialEditPerm = initialRecord.edit_perm;\n\nif(initialRecord.readPerm != targetRecord.readPerm) {\n    instruction.targetReadPerm = targetRecord.read_perm;\n}\n\nif(initialRecord.editPerm != targetRecord.editPerm) {\n    instruction.targetEditPerm = targetRecord.edit_perm;\n}\n\nvar initialData = {};\ninstruction.Initial = initialData;\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    \n    var initialValue;\n    var targetValue;\n    \n    var initialValue = initialRecord.Fields[field.name];\n    var targetValue = targetRecord.Fields[field.name];\n    \n    //validate target values\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n        }\n    }\n    \n    if(!fieldsMatch(initialValue,targetValue,field)) {\n        initialData[field.name] = initialValue;\n        targetData[field.name] = targetValue;\n    }\n}\n\nreturn instruction;\n","supplementalCode":"function fieldsMatch(initialValue,targetValue,fieldInfo) {\n    if(fieldInfo.fieldClass === \"java.lang.String\") {\n        //compare strings with \"==\"\n        return (initialValue == targetValue);\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"java.lang\")) {\n        //compare other basic values with \"===\"\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"com.micello\")) {\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONObject\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONArray\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else {\n        throw new Error(\"unrecognized field type: \" + fieldInfo.fieldClass);\n    }\n}\n\nfunction compareJsonData(a,b) {\n    var an = apogee.util.getNormalizedObjectCopy(a);\n    var bn = apogee.util.getNormalizedObjectCopy(b);\n    var aString = JSON.stringify(an);\n    var bString = JSON.stringify(bn);\n    return aString == bString;\n}\n    ","description":""}},"createCreateInstruction":{"name":"createCreateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["createRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(createRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Create\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = createRecord.Id;\n\ninstruction.targetReadPerm = createRecord.read_perm;\ninstruction.targetEditPerm = createRecord.edit_perm;\n\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var targetValue;\n    var targetValue = createRecord.Fields[field.name];\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(record,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(record,field));\n        }\n    }\n    \n    targetData[field.name] = targetValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getFieldErrString":{"name":"getFieldErrString","type":"apogee.FunctionTable","updateData":{"argList":["record","fieldInfo"],"functionBody":"return getRecordErrString(record) + \" - \" + fieldInfo.name;","supplementalCode":"","description":""}},"getRecordErrString":{"name":"getRecordErrString","type":"apogee.FunctionTable","updateData":{"argList":["record"],"functionBody":"return record.Type + \" \" + record.Id;","supplementalCode":"","description":""}},"createDeleteInstruction":{"name":"createDeleteInstruction","type":"apogee.FunctionTable","updateData":{"argList":["deleteRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(deleteRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Delete\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = deleteRecord.Id;\n\ninstruction.initialReadPerm = deleteRecord.read_perm;\ninstruction.initialEditPerm = deleteRecord.edit_perm;\n\nvar initialData = {};\ninstruction.Initial = initialData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var initialValue = deleteRecord.Fields[field.name];\n    \n    initialData[field.name] = initialValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getRecordInfo":{"name":"getRecordInfo","type":"apogee.FunctionTable","updateData":{"argList":["recordType"],"functionBody":"var recordInfo = dataSetInfo.records[recordType];\n\nif(!recordInfo) {\n    throw new Error(\"Record type not found in getRecordInfo: \" + recordType);\n}\n\nreturn recordInfo;","supplementalCode":"","description":""}}}},"loadMetaFileRecords":{"name":"loadMetaFileRecords","type":"apogee.Folder","children":{"fileTypeSearch":{"name":"fileTypeSearch","type":"apogee.JsonTable","updateData":{"data":{"search":"file_type_list"},"description":""}},"metaFileSearch":{"name":"metaFileSearch","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar searchDef = {};\nsearchDef.search = \"meta_file\";\nsearchDef.id = metaFileId;\nreturn searchDef;\nreturn value;\n\n","supplementalCode":"","description":""}},"fileTypeList":{"name":"fileTypeList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(fileTypeSearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"fileTypeEntrySearch":{"name":"fileTypeEntrySearch","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar searchDef = {};\nsearchDef.search = \"file_type_entries\";\nsearchDef.id = fileTypeId;\nreturn searchDef;\nreturn value;\n\n","supplementalCode":"","description":""}},"fileTypeEntryList":{"name":"fileTypeEntryList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(fileTypeEntrySearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"recordStore":{"name":"recordStore","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar map = {};\n\naddSearchResponse(fileTypeList,map);\naddSearchResponse(fileTypeEntryList,map);\naddSearchResponse(metaFileSearch,map);\naddSearchResponse(metaFileResponse,map);\n\nreturn map;\nreturn value;\n\n","supplementalCode":"function addSearchResponse(searchResponse,outputMap) {\n    if((!searchResponse)||(!searchResponse.success)||(!searchResponse.data)) {\n        return \"\";\n    }\n    \n    var searchResponseData = searchResponse.data;\n    \n    if(searchResponseData.Response) {\n        addRecordList(searchResponseData.Response,outputMap);\n    }\n    if(searchResponseData.Records) {\n        addRecordList(searchResponseData.Records,outputMap);\n    }\n    \n}\n\nfunction addRecordList(recordList,outputMap) {\n    for(var i = 0; i < recordList.length; i++) {\n        var record = recordList[i];\n        \n        var typeSection = outputMap[record.Type];\n        if(!typeSection) {\n            typeSection = {};\n            outputMap[record.Type] = typeSection;\n        }\n        \n        //if there is already a record, just overwrite it. They should be the same.\n        typeSection[record.Id] = record;\n    }\n}","description":""}},"metaFileEntryList":{"name":"metaFileEntryList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var entryRecordList = [];\n\nvar recipeEntries = recordStore.recipe_entry;\n\nfor(var key in recipeEntries) {\n    var entryRecord = recipeEntries[key];\n    if(entryRecord.Fields.meta_file_id == metaFileId) {\n        var fileEntryRecord = getRecord(\"file_entry\",entryRecord.Fields.file_entry_id);\n        var entryData = createMetaFileEntry(\n                fileEntryRecord,\n                entryRecord.Fields.insertion_info,\n                entryRecord.Fields.ordr\n            );\n        entryRecordList.push(entryData); \n    }\n}\n\nreturn entryRecordList;\n\n","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"data":"public","description":""}},"metaFileId":{"name":"metaFileId","type":"apogee.JsonTable","updateData":{"data":7,"description":""}},"fileTypeId":{"name":"fileTypeId","type":"apogee.JsonTable","updateData":{"data":7,"description":""}},"metaFileListSearch":{"name":"metaFileListSearch","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\nreturn searchDef;\nreturn value;\n\n","supplementalCode":"","description":""}},"metaFileResponse":{"name":"metaFileResponse","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nif(metaFileId === 0) {\n    return undefined;\n}\n\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(metaFileSearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nif(context === 0) {\n    return undefined;\n}\n\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(metaFileListSearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"getRecord":{"name":"getRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordType","recordId"],"functionBody":"typeSection = recordStore[recordType];\nif(!typeSection) {\n    throw new Error(\"Type not found!\");\n}\n\nreturn typeSection[recordId];\n","supplementalCode":"","description":""}},"fileTypeIds":{"name":"fileTypeIds","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar output = {};\n\nvar fileTypeRecords = fileTypeList.data.Response;\nfor(var i = 0; i < fileTypeRecords.length; i++) {\n    var record = fileTypeRecords[i];\n    output[record.Fields.file_type_name] = record.Id;\n}\n\nreturn output;\nreturn value;\n\n","supplementalCode":"","description":""}},"metaFileIds":{"name":"metaFileIds","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar output = {};\n\nvar metaFileRecords = metaFileList.data.Response;\nfor(var i = 0; i < metaFileRecords.length; i++) {\n    var record = metaFileRecords[i];\n    var fileTypeRecord = getRecord(\"file_type\",record.Fields.file_type_id);\n    var fileType = fileTypeRecord.Fields.file_type_name;\n    var metaName = record.Fields.name;\n    output[fileType + \":\" + metaName] = record.Id;\n}\n\nreturn output;\nreturn value;\n\n","supplementalCode":"","description":""}},"version":{"name":"version","type":"apogee.JsonTable","updateData":{"data":"1.2","description":""}},"dependencies":{"name":"dependencies","type":"apogee.JsonTable","updateData":{"data":"- micemetarecipeDataAccess - in root folder","description":""}},"releaseNotes":{"name":"releaseNotes","type":"apogee.JsonTable","updateData":{"data":"1.2: fix bug in create meta file entry function\n1.1: Added ID to output entry list\n1.0: initial release","description":""}},"createMetaFileEntry":{"name":"createMetaFileEntry","type":"apogee.FunctionTable","updateData":{"argList":["fileEntryRecord","insertionInfo","ordr"],"functionBody":"\nvar fileEntryTypeRecord = getRecord(\"file_entry_type\",fileEntryRecord.Fields.file_entry_type_id);\n\nvar entryData = {};\nentryData.fileEntryId = fileEntryRecord.Id;\nentryData.section = fileEntryTypeRecord.Fields.section;\nentryData.name = fileEntryTypeRecord.Fields.name;\nentryData.keyString = fileEntryTypeRecord.Fields.key_string;\nentryData.entry = fileEntryRecord.Fields.entry_data;\nentryData.insertionInfo = insertionInfo;\nentryData.order = ordr;\n\nreturn entryData;","supplementalCode":"","description":""}}}},"inputColorFile":{"name":"inputColorFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nrecordList = loadMetaFileRecords.metaFileEntryList;\nfor(var i = 0; i < recordList.length; i++) {\n    var record = recordList[i];\n    \n    var entryData = record.entry;\n    output[entryData.color] = entryData.data;\n}\n\nreturn output;","supplementalCode":"","description":""}},"originalInputColorFile":{"name":"originalInputColorFile","type":"apogee.JsonTable","updateData":{"data":{"#DBE5F1":{"props":{"area":"aisle"}},"#CE7424":{"props":{"area":"baggage claim"}},"#143310":{"props":{"area":"copy/print"}},"#C99C73":{"props":{"area":"immigration and customs"}},"#D0D0D0":{"props":{"area":"parcel"}},"#153E11":{"props":{"area":"pet relief area"}},"#133C0F":{"props":{"area":"rest area"}},"#686868":{"props":{"area":"section"}},"#DDD9C3":{"props":{"area":"section"}},"#455B46":{"props":{"area":"security section"}},"#F4EC9A":{"props":{"area":"smoke"}},"#DADADA":{"props":{"area":"true"}},"#4383D1":{"props":{"barrier":"gate"}},"#404040":{"props":{"barrier":"obstruction"}},"#93CC93":{"props":{"facility":"bathroom","gender":"family","disabled access":"true"}},"#96CC96":{"props":{"facility":"bathroom","gender":"family"}},"#95BF95":{"props":{"facility":"bathroom","gender":"female","disabled access":"true"}},"#99CC99":{"props":{"facility":"bathroom","gender":"female"}},"#B5E2B5":{"props":{"facility":"bathroom","gender":"male","disabled access":"true"}},"#CCFFCC":{"props":{"facility":"bathroom","gender":"male"}},"#669966":{"props":{"facility":"bathroom"}},"#666666":{"props":{"facility":"column"}},"#990033":{"props":{"facility":"door"}},"#996033":{"props":{"facility":"doorway"}},"#CC6633":{"props":{"facility":"elevator"}},"#663300":{"props":{"facility":"escalator"}},"#909090":{"props":{"facility":"floor opening"}},"#B0B0B0":{"props":{"facility":"hallway"}},"#24A5A8":{"props":{"facility":"inaccessible space"}},"#000029":{"props":{"facility":"moving walkway"}},"#993033":{"props":{"facility":"opening"}},"#E4E1CE":{"props":{"facility":"patio"}},"#D1CAAA":{"props":{"facility":"platform"}},"#A0A0B3":{"props":{"facility":"ramp"}},"#E5E0EC":{"props":{"facility":"room","use":"auditorium"}},"#DBEEF3":{"props":{"facility":"room","use":"cafeteria"}},"#DFE6F1":{"props":{"facility":"room","use":"classroom"}},"#F7EF9D":{"props":{"facility":"room","use":"gym"}},"#F2DDDC":{"props":{"facility":"room","use":"lab"}},"#EAF1DD":{"props":{"facility":"room","use":"library"}},"#DBD0C0":{"props":{"facility":"room","use":"locker room"}},"#194215":{"props":{"facility":"room","use":"lost and found"}},"#F2EA98":{"props":{"facility":"room","use":"meditation room"}},"#DBE0F0":{"props":{"facility":"room","use":"office"}},"#6DACF7":{"props":{"facility":"unit","use":"giftcard"}},"#85A3CB":{"props":{"facility":"room"}},"#C5BEA1":{"props":{"facility":"stage"}},"#990000":{"props":{"facility":"stairs"}},"#D8D8D8":{"props":{"facility":"step"}},"#0F387B":{"props":{"facility":"unit","class":"car rental"}},"#03F9A8":{"props":{"facility":"unit","class":"cocktails"}},"#EB974E":{"props":{"facility":"unit","class":"restaurant"}},"#F0E896":{"props":{"facility":"unit","class":"food and drink"}},"#FBF3A1":{"props":{"facility":"unit","class":"money changer"}},"#163F12":{"props":{"facility":"unit","class":"movie theater"}},"#F5ED9B":{"props":{"facility":"unit","class":"shoe shine"}},"#FCF4A2":{"props":{"facility":"unit","class":"transit hotel"}},"#4055A0":{"props":{"facility":"unit","use":"customer service"}},"#FDF5A3":{"props":{"facility":"unit","use":"information"}},"#A3B9D8":{"props":{"facility":"unit"}},"#4343EF":{"props":{"facility":"wall"}},"#4D93E1":{"props":{"facility":"window"}},"#336699":{"props":{"fixture":"booth"}},"#999933":{"props":{"fixture":"checkout"}},"#788FB0":{"props":{"fixture":"kiosk"}},"#0CF242":{"props":{"fixture":"ramp","disabled access":"true"}},"#A0A0A3":{"props":{"fixture":"ramp"}},"#C5BE97":{"props":{"fixture":"stage"}},"#95B3D7":{"props":{"furnishing":"bin"}},"#009999":{"props":{"furnishing":"desk"}},"#BBCCDD":{"props":{"furnishing":"shelf"}},"#AACCCC":{"props":{"furnishing":"locker"}},"#409988":{"props":{"furnishing":"table"}},"#1E471B":{"props":{"marker":"disabled access","nonphysical":"true"}},"#002040":{"props":{"marker":"entrance","nonphysical":"true"}},"#6600CC":{"props":{"marker":"large text","nonphysical":"true"}},"#330033":{"props":{"marker":"small text","nonphysical":"true"}},"#A5A5A5":{"props":{"marker":"traffic marker"}},"#202020":{"props":{"marker":"true"}},"#AAFFAA":{"props":{"meta":"ground intersect"}},"#00FF00":{"props":{"meta":"guide"}},"#88FF88":{"props":{"meta":"level outline"}},"#CC3333":{"props":{"object":"INVALID"}},"#B8B8B8":{"props":{"object":"true","$style":"Invisible"}},"#FFAD33":{"props":{"object":"true","name":"$ref_a","$style":"Invisible"}},"#FFC166":{"props":{"object":"true","name":"$ref_b","$style":"Invisible"}},"#CC7A00":{"props":{"object":"true","name":"$ref_c","$style":"Invisible"}},"#8E5500":{"props":{"object":"true","name":"$ref_d","$style":"Invisible"}},"#513000":{"props":{"object":"true","name":"$ref_e","$style":"Invisible"}},"#808080":{"props":{"object":"true"}},"#FF0000":{"props":{"object":"unknown"}},"#143D10":{"props":{"recreation":"playground"}},"#F8F09E":{"props":{"safety":"defibrillator"}},"#1D4619":{"props":{"safety":"emergency exit"}},"#1C4518":{"props":{"safety":"fire extinguisher"}},"#1B4417":{"props":{"safety":"first aid"}},"#336633":{"props":{"service":"atm"}},"#E89B00":{"props":{"service":"bike rack"}},"#1E1408":{"props":{"service":"changing station"}},"#02F8A7":{"props":{"service":"flight monitor"}},"#0F3549":{"props":{"service":"locker"}},"#184114":{"props":{"service":"luggage cart"}},"#F1E997":{"props":{"service":"mail"}},"#174013":{"props":{"service":"massage chair"}},"#88A1B5":{"props":{"service":"power"}},"#F3EB99":{"props":{"facility":"shower room"}},"#010202":{"props":{"service":"stroller"}},"#F6EE9C":{"props":{"service":"telephone"}},"#10390C":{"props":{"service":"tv"}},"#0E2D0A":{"props":{"service":"vending machine"}},"#1A4316":{"props":{"service":"wifi"}},"#123B0E":{"props":{"sign":"stop sign"}},"#113A0D":{"props":{"signal":"traffic light"}},"#E5E5E5":{"props":{"structure":"building","$style":"Background"}},"#EAF1DE":{"props":{"structure":"building","use":"library"}},"#676767":{"props":{"structure":"building"}},"#777777":{"props":{"structure":"parking structure"}},"#6C6C6C":{"props":{"structure":"subbuilding"}},"#A0B0D0":{"props":{"structure":"tent"}},"#1F481B":{"props":{"traffic":"crosswalk"}},"#999999":{"props":{"traffic":"parking lot"}},"#1E471A":{"props":{"furnishing":"poker table"}},"#C0C0C0":{"props":{"traffic":"parking spot"}},"#C0C0A0":{"props":{"traffic":"railway rail"}},"#C0C0D0":{"props":{"traffic":"railway tie"}},"#C0C0B0":{"props":{"traffic":"railway"}},"#000000":{"props":{"traffic":"road"},"doLinearArea":"true"},"#7896BA":{"props":{"traffic":"walkway","covered":"true"}},"#C0C0C2":{"props":{"traffic":"walkway"}},"#CC6666":{"props":{"transit":"bus"}},"#0F381B":{"props":{"transit":"ground transportation"}},"#DDDD66":{"props":{"transit":"taxi"}},"#993333":{"props":{"transit":"train"}},"#DBBFA1":{"props":{"vegetation":"earth"}},"#40D040":{"props":{"vegetation":"garden"}},"#80C080":{"props":{"vegetation":"grass"}},"#75923C":{"props":{"vegetation":"greenery"}},"#33CC33":{"props":{"vegetation":"tree"}},"#A4AAB2":{"props":{"vehicle":"airplane"}},"#3D72E0":{"props":{"water":"true"}},"#2276AF":{"props":{"marker":"parking"}},"#6BB56B":{"props":{"service":"atm","currency":"general"}},"#356335":{"props":{"service":"atm","currency":"yen"}},"#D8D08F":{"props":{"equipment":"cash register"}},"#25261E":{"props":{"facility":"unit","class":"ticketing, check-in"}},"#BCCCCE":{"props":{"facility":"hall area"}},"#C13030":{"props":{"facility":"stairwell"}},"#85CCFF":{"props":{"facility":"room","use":"conference room"}},"#B0A0A1":{"props":{"facility":"room","use":"lobby"}},"#306B8B":{"props":{"furnishing":"seat","disabled access":"true"}},"#30A0A3":{"props":{"furnishing":"seat"}},"#B1":{"props":{"facility":"ramp","disabled access":"true"}},"#48":{"props":{"service":"valet parking"}},"#10":{"props":{"safety":"eyewash"}},"#12":{"props":{"safety":"fire pull"}},"#14":{"props":{"facility":"unit","class":"fitness center"}},"#24":{"props":{"facility":"room","class":"medical"}},"#25":{"props":{"facility":"unit","class":"medical"}},"#26":{"props":{"area":"meeting point"}},"#33":{"props":{"facility":"unit","use":"police/security"}},"#51":{"props":{"sign":"yield sign"}},"#A2":{"props":{"service":"atm","currency":"dollar"}},"#A4":{"props":{"facility":"bathroom","disabled access":"true"}},"#A6":{"props":{"area":"customs"}},"#A7":{"props":{"safety":"fire hose"}},"#A8":{"props":{"service":"santa"}},"#A9":{"props":{"traffic":"parking lot","paid":"true"}},"#A0":{"props":{"area":"passport control"}},"#AABBAA":{"props":{"meta":"coordinates","publish":"true","ref":"sears","units":"ft","xscale":"80","yscale":"80"}},"#AADDAA":{"props":{"facility":"bathroom","gender":"unisex"}},"#20A020":{"props":{"fixture":"tee-mat"}},"#20A585":{"props":{"equipment":"aperio hub"}},"#C8CCC6":{"props":{"equipment":"security camera"}},"#0E4DDB":{"props":{"equipment":"siren"}},"#238099":{"props":{"equipment":"alarm contact"}},"#6688CC":{"props":{"equipment":"bmz"}},"#11CC11":{"props":{"equipment":"card reader"}},"#F99DC9":{"props":{"equipment":"door guard"}},"#535454":{"props":{"equipment":"server"}},"#2A3233":{"props":{"equipment":"rack"}},"#3B95EE":{"props":{"equipment":"cage"}},"#1515AD":{"props":{"traffic":"parking sensor"}},"#4A4ADD":{"props":{"barrier":"turnstile"}},"#2B9999":{"props":{"service":"ticket vending machine"}},"#BCA6A6":{"props":{"fixture":"stall"}},"#9B8663":{"props":{"fixture":"partition"}},"#D9DADB":{"props":{"facility":"landing area"}},"#E8E8E8":{"props":{"facility":"foyer"}},"#C3D3F3":{"props":{"area":"zone"}},"#4C5C6C":{"props":{"area":"plot"}},"#8CCC00":{"props":{"equipment":"air-conditioner"}},"#2C8C89":{"props":{"fixture":"pallet"}},"#E2C262":{"props":{"facility":"electric panel"}},"#FCFAFA":{"props":{"fixture":"glazing"}},"#297C7A":{"props":{"furnishing":"countertop"}},"#A2C2CC":{"props":{"fixture":"cubicle"}},"#F9CB7A":{"props":{"equipment":"turbine"}},"#DDDD09":{"props":{"equipment":"lights"}},"#C9BCBC":{"props":{"equipment":"crah"}},"#B6CECC":{"props":{"equipment":"pdu"}},"#66CCFF":{"props":{"facility":"cafe"}},"#FFB6B6":{"props":{"facility":"closet"}},"#D4D4D6":{"props":{"facility":"communications"}},"#A4C0FF":{"props":{"facility":"company store"}},"#F9EBB4":{"props":{"facility":"mail room"}},"#F5FFBB":{"props":{"facility":"copy room"}},"#9FE8FF":{"props":{"facility":"credit union"}},"#909694":{"props":{"facility":"data center"}},"#84BDCE":{"props":{"facility":"ecafe"}},"#CCCFBC":{"props":{"facility":"electrical"}},"#FFFFFF":{"props":{"facility":"equipment space"}},"#E1FFBB":{"props":{"facility":"file area"}},"#FFCCF1":{"props":{"facility":"formal collaboration space"}},"#A4BBC1":{"props":{"facility":"fitness room"}},"#A6CEFF":{"props":{"facility":"hoteling"}},"#ECCAFC":{"props":{"facility":"informal meeting area"}},"#CFDAFF":{"props":{"facility":"interview room"}},"#CDDB9D":{"props":{"facility":"janitors closet"}},"#CCFFBB":{"props":{"facility":"kitchen"}},"#F2DDC9":{"props":{"facility":"large workstation"}},"#EDEDCA":{"props":{"facility":"library"}},"#AEB5CC":{"props":{"facility":"lobby"}},"#F9CADE":{"props":{"facility":"lounge seating"}},"#DDE1ED":{"props":{"facility":"main lobby"}},"#AFAFAF":{"props":{"facility":"mechanical"}},"#B4D8E7":{"props":{"facility":"meeting room"}},"#A9FFF7":{"props":{"facility":"mothers room"}},"#E0C6A0":{"props":{"facility":"multipurpose room"}},"#DCF0F7":{"props":{"facility":"office a"}},"#CDBBFF":{"props":{"facility":"project space"}},"#FFD3BD":{"props":{"facility":"reception"}},"#FFD7D7":{"props":{"facility":"security desk"}},"#EDCEB2":{"props":{"facility":"small workstation"}},"#E2AFC7":{"props":{"facility":"soft seating area"}},"#C9A798":{"props":{"facility":"storage"}},"#A0DCEA":{"props":{"facility":"video conference"}},"#C7EAE6":{"props":{"facility":"training"}},"#308899":{"props":{"furnishing":"chair"}},"#80BABA":{"props":{"furnishing":"bench"}},"#66D1AA":{"props":{"equipment":"refrigerator"}},"#55CC99":{"props":{"fixture":"urinal"}},"#BCE6DA":{"props":{"fixture":"sink"}},"#3EFF3E":{"props":{"equipment":"sensor"}},"#474747":{"props":{"equipment":"gateway"}},"#84FCFC":{"props":{"fixture":"lighting2x4"}},"#181191":{"props":{"facility":"ramp"}},"#18772A":{"props":{"marker":"underground parking"}},"#5C3C2C":{"props":{"equipment":"soda machine"}},"#A0A0A0":{"props":{"facility":"quiet room"}},"#36A9E0":{"props":{"equipment":"stair climber"}},"#94C11E":{"props":{"equipment":"elliptical"}},"#28587C":{"props":{"equipment":"recumbent bicycle"}},"#BD8D45":{"props":{"equipment":"treadmill"}},"#F4D77A":{"props":{"equipment":"maintenance"}},"#919DA8":{"props":{"equipment":"rtu"}},"#232B33":{"props":{"equipment":"tv"}},"#424242":{"props":{"furnishing":"disabled chair"}},"#FFCA6C":{"props":{"fixture":"light"}},"#B8B8BC":{"props":{"fixture":"pipe"}},"#909190":{"props":{"fixture":"connector"}},"#6B2929":{"props":{"furnishing":"blackjack table"}},"#365484":{"props":{"furnishing":"slot machine"}},"#2C2C2D":{"props":{"facility":"wiring"}},"#141092":{"props":{"facility":"custodian janitor"}},"#B2A8A8":{"props":{"furnishing":"bed"}},"#EFAE13":{"props":{"equipment":"bench"}},"#C1BB80":{"props":{"fixture":"game room"}},"#181989":{"props":{"facility":"break room"}},"#01BCB0":{"props":{"furnishing":"ping pong table"}},"#838FC2":{"props":{"furnishing":"pool table"}},"#AA7E7E":{"props":{"fixture":"toilet"}},"#6ABCDF":{"props":{"fixture":"tray"}},"#9ABCDF":{"props":{"fixture":"plate"}},"#603813":{"props":{"equipment":"squat bench"}},"#783FFF":{"props":{"equipment":"abs"}},"#EE4036":{"props":{"equipment":"arms"}},"#90278E":{"props":{"equipment":"back"}},"#00ADEE":{"props":{"equipment":"legs"}},"#EFB11D":{"props":{"equipment":"row"}},"#7CAFD1":{"props":{"furnishing":"cabinet"}},"#EDEDED":{"props":{"fixture":"metal partition"}},"#1C2C3C":{"props":{"facility":"room","use":"gym"}},"#AAACC1":{"props":{"facility":"club area"}},"#AAACC2":{"props":{"facility":"concourse section"}},"#AAACC3":{"props":{"facility":"employee area"}},"#AAACC4":{"props":{"facility":"food and beverage area"}},"#AAACC5":{"props":{"facility":"media area"}},"#AAACC6":{"props":{"facility":"team area"}},"#AAACC7":{"props":{"facility":"seating section"}},"#AAACC8":{"props":{"facility":"suite"}},"#88A4EA":{"props":{"facility":"office"}},"#BBCCFF":{"props":{"facility":"conference room"}}},"description":""}}}}},"components":{"micemetarecipeDataAccess":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":75,"y":75}},"children":{"createRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":560,"height":321},"posInfo":{"x":22,"y":221},"state":-1,"viewType":"Code"}},"recordsToCreateInstructions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":834,"height":391},"posInfo":{"x":29,"y":506},"state":-1,"viewType":"Code"}},"createCommitBody":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":400},"posInfo":{"x":32,"y":603},"state":-1,"viewType":"Notes"}},"createRequestOptions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":523,"height":254},"posInfo":{"x":34,"y":650},"state":-1,"viewType":"Notes"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":504,"height":67},"posInfo":{"x":14,"y":111},"state":0,"viewType":"Text"}},"host":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":353,"height":71},"posInfo":{"x":14,"y":15},"state":0,"viewType":"Text"}},"commitUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":433,"height":51},"posInfo":{"x":568,"y":65},"state":-1,"viewType":"Text"}},"requestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":450,"height":68},"posInfo":{"x":569,"y":12},"state":-1,"viewType":"Text"}},"dataSetInfo":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":665,"height":611},"posInfo":{"x":569,"y":129},"state":0,"viewType":"Text"}},"version":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":197,"height":91},"posInfo":{"x":708,"y":226},"state":0,"viewType":"Text"}},"releaseNotes":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":412,"height":156},"posInfo":{"x":708,"y":342},"state":0,"viewType":"Notes"}},"depedencies":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":253,"height":102},"posInfo":{"x":706,"y":527},"state":0,"viewType":"Text"}},"createUpdateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":821,"height":496},"posInfo":{"x":21,"y":364},"state":-1,"viewType":"Private"}},"createCreateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":994,"height":643},"posInfo":{"x":21,"y":314},"state":-1,"viewType":"Code"}},"getFieldErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":512,"height":68},"posInfo":{"x":867,"y":91},"state":-1,"viewType":"Code"}},"getRecordErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":81},"posInfo":{"x":866,"y":142},"state":-1,"viewType":"Code"}},"createDeleteInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":678,"height":540},"posInfo":{"x":22,"y":413},"state":-1,"viewType":"Code"}},"getRecordInfo":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":400},"posInfo":{"x":861,"y":45},"state":-1,"viewType":"Code"}}}},"loadMetaFileRecords":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":150,"y":150}},"children":{"fileTypeSearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":297,"height":82},"posInfo":{"x":55,"y":25},"state":-1,"viewType":"Text"}},"metaFileSearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":334,"height":117},"posInfo":{"x":902,"y":16},"state":-1,"viewType":"Text"}},"fileTypeList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":447,"height":106},"posInfo":{"x":66,"y":77},"state":-1,"viewType":"Text"}},"fileTypeEntrySearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":347,"height":110},"posInfo":{"x":306,"y":25},"state":-1,"viewType":"Text"}},"fileTypeEntryList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":637,"height":480},"posInfo":{"x":302,"y":79},"state":0,"viewType":"Text"}},"recordStore":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":739,"height":542},"posInfo":{"x":724,"y":382},"state":-1,"viewType":"Text"}},"metaFileEntryList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":568,"height":395},"posInfo":{"x":47,"y":362},"state":0,"viewType":"Text"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":218,"height":89},"posInfo":{"x":1203,"y":20},"state":0,"viewType":"Text"}},"metaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":227,"height":89},"posInfo":{"x":1210,"y":261},"state":0,"viewType":"Text"}},"fileTypeId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":229,"height":97},"posInfo":{"x":1206,"y":144},"state":0,"viewType":"Text"}},"metaFileListSearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":323,"height":98},"posInfo":{"x":604,"y":15},"state":-1,"viewType":"Text"}},"metaFileResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":495,"height":325},"posInfo":{"x":898,"y":61},"state":-1,"viewType":"Formula"}},"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":647,"height":300},"posInfo":{"x":616,"y":70},"state":-1,"viewType":"Formula"}},"getRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":33},"posInfo":{"x":722,"y":435},"state":-1,"viewType":"Code"}},"fileTypeIds":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":413,"height":174},"posInfo":{"x":58,"y":141},"state":0,"viewType":"Text"}},"metaFileIds":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":365,"height":209},"posInfo":{"x":559,"y":121},"state":0,"viewType":"Text"}},"version":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":218,"height":73},"posInfo":{"x":1092,"y":376},"state":0,"viewType":"Text"}},"dependencies":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":395,"height":93},"posInfo":{"x":1095,"y":606},"state":0,"viewType":"Text"}},"releaseNotes":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":287,"height":118},"posInfo":{"x":1092,"y":462},"state":0,"viewType":"Text"}},"createMetaFileEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":727,"height":257},"posInfo":{"x":655,"y":614},"state":-1,"viewType":"Code"}}}},"inputColorFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":867,"height":517},"posInfo":{"x":102,"y":288},"state":0,"viewType":"Text"}},"originalInputColorFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":692,"height":535},"posInfo":{"x":461,"y":283},"state":0,"viewType":"Text"}}}}