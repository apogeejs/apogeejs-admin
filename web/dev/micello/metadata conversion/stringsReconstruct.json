{"fileType":"apogee workspace","jsLinks":[],"cssLinks":[],"workspace":{"fileType":"apogee workspace","version":0.2,"data":{"name":"stringsReconstruct","type":"apogee.Folder","children":{"micemetarecipeDataAccess":{"name":"micemetarecipeDataAccess","type":"apogee.Folder","children":{"createRecord":{"name":"createRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordInfo","fieldMap"],"functionBody":"var record = {};\n\nrecord.Id = getId();\nrecord.Type = recordInfo.name;\nrecord.Fields = fieldMap;\nrecord.read_perm = READ_PERM;\nrecord.edit_perm = EDIT_PERM;\n\nreturn record;","supplementalCode":"var READ_PERM = 2;\nvar EDIT_PERM = 15;\n\nvar nextId = -1;\n\nfunction getId() {\n    return nextId--;\n}","description":"This method creates a record given the field values and record info \nfrom the data set info. It creates and ID and uses standard permissions."}},"recordsToCreateInstructions":{"name":"recordsToCreateInstructions","type":"apogee.FunctionTable","updateData":{"argList":["recordList"],"functionBody":"var instructions = [];\n\nfor(var i = 0; i < recordList.length; i++) {\n    var createRecord = recordList[i];\n    var instruction = createCreateInstruction(createRecord);\n    instructions.push(instruction);\n}\n\nreturn instructions;","supplementalCode":"","description":"This creates a list of create instructions to go along with a list of records to be created.\n\nThere is the option to assign the ID or to leave it as undefined, in which case\nan automatically incremented ID will be assigned. (For consistency in the data\nset, either all records should be preassigned or all records should be \nautomatically assigned."}},"createCommitBody":{"name":"createCommitBody","type":"apogee.FunctionTable","updateData":{"argList":["instructionList","commitMessage"],"functionBody":"var commit = {};\nvar actions = [];\n\nif(commitMessage.length === 0) throw new Error(\"Commit message missing!\");\n\ncommit.Name = dataSetInfo.name;\ncommit.Message = commitMessage;\ncommit.Actions = actions;\n\n//single action with commits\nvar action = {};\naction.Title = \"bulk create commit\";\naction.Instr = instructionList;\nactions.push(action);\n\nreturn commit","supplementalCode":"","description":"This creates a body for a commit request, given a list of instructions and a commit message."}},"createRequestOptions":{"name":"createRequestOptions","type":"apogee.FunctionTable","updateData":{"argList":["bodyJson"],"functionBody":"var header = {};\nheader[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\nheader.sessionKey = sessionKey;\nheader[\"proto-version\"] = \"4.0\";\nheader[\"db-version\"] = dataSetInfo.version;\n\nrequestInfo = {};\nrequestInfo.header = header;\nrequestInfo.method = \"POST\";\nrequestInfo.body = JSON.stringify(bodyJson);\n\nreturn requestInfo;\n","supplementalCode":"","description":"This creates the requestOptions, suitable for apogee.net.jsonRequest, to go with an type of request to the workingset (micemetarequest) server."}},"sessionKey":{"name":"sessionKey","type":"apogee.JsonTable","updateData":{"data":"SESS0f6c4c2238a670b8138b63d9fd03cc22=2nnseqb0h1vsm5mvv7i3vs0hd6","description":""}},"host":{"name":"host","type":"apogee.JsonTable","updateData":{"data":"http://localhost:8080/micemetarecipews","description":""}},"commitUrl":{"name":"commitUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/commit\";\nreturn value;\n\n","supplementalCode":"","description":""}},"requestUrl":{"name":"requestUrl","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = host + \"/cannedsearch\";\nreturn value;\n\n","supplementalCode":"","description":""}},"dataSetInfo":{"name":"dataSetInfo","type":"apogee.JsonTable","updateData":{"data":{"records":{"file_entry_type":{"idField":"file_entry_type_id","name":"file_entry_type","foreignList":[{"remoteRecord":"file_entry","name":"file_entry_list","isUnique":false,"remoteField":"file_entry_type_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileType"},{"defaultValue":null,"name":"section","nullOk":true,"fieldClass":"org.json.JSONArray"},{"defaultValue":null,"name":"key_string","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.FileEntryType"},"com_file_entry":{"idField":"com_file_entry_id","name":"com_file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"com_file_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.ComFile"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.MetaFile"},{"defaultValue":null,"name":"file_group","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.ComFileEntry"},"file_type":{"idField":"file_type_id","name":"file_type","foreignList":[{"remoteRecord":"file_entry_type","name":"file_entry_type_list","isUnique":false,"remoteField":"file_type_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_name","nullOk":true,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.FileType"},"file_entry":{"idField":"file_entry_id","name":"file_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"file_entry_type_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileEntryType"},{"defaultValue":null,"name":"entry_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"option_name","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"entry_data","nullOk":false,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetarecipe.data.FileEntry"},"recipe_entry":{"idField":"recipe_entry_id","name":"recipe_entry","foreignList":[],"fields":[{"defaultValue":0,"name":"ordr","nullOk":false,"fieldClass":"java.lang.Integer"},{"defaultValue":null,"name":"meta_file_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.MetaFile"},{"defaultValue":null,"name":"file_entry_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileEntry"},{"defaultValue":null,"name":"insertion_info","nullOk":true,"fieldClass":"org.json.JSONObject"}],"recordClass":"com.micello.micemetarecipe.data.RecipeEntry"},"com_file":{"idField":"com_file_id","name":"com_file","foreignList":[{"remoteRecord":"com_file_entry","name":"com_file_entry_list","isUnique":false,"remoteField":"com_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.ComFile"},"meta_file":{"idField":"meta_file_id","name":"meta_file","foreignList":[{"remoteRecord":"recipe_entry","name":"recipe_entry_list","isUnique":false,"remoteField":"meta_file_id","restrictDelete":true,"orderField":"ordr"}],"fields":[{"defaultValue":null,"name":"file_type_id","nullOk":false,"fieldClass":"com.micello.micemetarecipe.data.FileType"},{"defaultValue":null,"name":"file_context","nullOk":false,"fieldClass":"java.lang.String"},{"defaultValue":null,"name":"name","nullOk":false,"fieldClass":"java.lang.String"}],"recordClass":"com.micello.micemetarecipe.data.MetaFile"}},"name":"Micemetarecipe","version":"5.0"},"description":""}},"version":{"name":"version","type":"apogee.JsonTable","updateData":{"data":"1.3","description":""}},"releaseNotes":{"name":"releaseNotes","type":"apogee.JsonTable","updateData":{"data":"","description":"1.3\n---\nFixed a field name bug\n\n1.2\n---\nFixed bug in create delete instruction\n\n1.1\n---\nAdded additional functions\n\n1.0\n---\ninitial release"}},"depedencies":{"name":"depedencies","type":"apogee.JsonTable","updateData":{"data":"none","description":""}},"createUpdateInstruction":{"name":"createUpdateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["initialRecord","targetRecord"],"functionBody":"if(initialRecord.id != targetRecord.ID) {\n    throw new Error(\"Record ID mismatch in create update instruction for target record: \" + getRecordErrorMessage(targetRecord));\n}\n\nif(initialRecord.Type != targetRecord.Type) {\n    throw new Error(\"Inital and target record types do not match. Target record: \" + getRecordErrorMessage(targetRecord));\n}\n\nvar recordInfo = getRecordInfo(initialRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Update\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = initialRecord.Id;\n\ninstruction.initialReadPerm = initialRecord.read_perm;\ninstruction.initialEditPerm = initialRecord.edit_perm;\n\nif(initialRecord.readPerm != targetRecord.readPerm) {\n    instruction.targetReadPerm = targetRecord.read_perm;\n}\n\nif(initialRecord.editPerm != targetRecord.editPerm) {\n    instruction.targetEditPerm = targetRecord.edit_perm;\n}\n\nvar initialData = {};\ninstruction.Initial = initialData;\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    \n    var initialValue;\n    var targetValue;\n    \n    var initialValue = initialRecord.Fields[field.name];\n    var targetValue = targetRecord.Fields[field.name];\n    \n    //validate target values\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(createRecordInfo,createRecord.Id,field));\n        }\n    }\n    \n    if(!fieldsMatch(initialValue,targetValue,field)) {\n        initialData[field.name] = initialValue;\n        targetData[field.name] = targetValue;\n    }\n}\n\nreturn instruction;\n","supplementalCode":"function fieldsMatch(initialValue,targetValue,fieldInfo) {\n    if(fieldInfo.fieldClass === \"java.lang.String\") {\n        //compare strings with \"==\"\n        return (initialValue == targetValue);\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"java.lang\")) {\n        //compare other basic values with \"===\"\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass.startsWith(\"com.micello\")) {\n        return initialValue === targetValue;\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONObject\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else if(fieldInfo.fieldClass == \"org.json.JSONArray\") {\n        return compareJsonData(initialValue,targetValue);\n    }\n    else {\n        throw new Error(\"unrecognized field type: \" + fieldInfo.fieldClass);\n    }\n}\n\nfunction compareJsonData(a,b) {\n    var an = apogee.util.getNormalizedObjectCopy(a);\n    var bn = apogee.util.getNormalizedObjectCopy(b);\n    var aString = JSON.stringify(an);\n    var bString = JSON.stringify(bn);\n    return aString == bString;\n}\n    ","description":""}},"createCreateInstruction":{"name":"createCreateInstruction","type":"apogee.FunctionTable","updateData":{"argList":["createRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(createRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Create\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = createRecord.Id;\n\ninstruction.targetReadPerm = createRecord.read_perm;\ninstruction.targetEditPerm = createRecord.edit_perm;\n\nvar targetData = {};\ninstruction.Target = targetData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var targetValue;\n    var targetValue = createRecord.Fields[field.name];\n    if(targetValue === undefined) {\n        //use default\n        targetValue = field.defaultValue;\n    }\n    \n    if(targetValue === undefined) {\n        throw new Error(\"Unknown problem: undefined field value: \" + getFieldErrString(record,field));\n    }\n    \n    if(targetValue === null) {\n        if(!field.nullOk) {\n            throw new Error(\"Illegal null value: \" + getFieldErrString(record,field));\n        }\n    }\n    \n    targetData[field.name] = targetValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getFieldErrString":{"name":"getFieldErrString","type":"apogee.FunctionTable","updateData":{"argList":["record","fieldInfo"],"functionBody":"return getRecordErrString(record) + \" - \" + fieldInfo.name;","supplementalCode":"","description":""}},"getRecordErrString":{"name":"getRecordErrString","type":"apogee.FunctionTable","updateData":{"argList":["record"],"functionBody":"return record.Type + \" \" + record.Id;","supplementalCode":"","description":""}},"createDeleteInstruction":{"name":"createDeleteInstruction","type":"apogee.FunctionTable","updateData":{"argList":["deleteRecord"],"functionBody":"\nvar recordInfo = getRecordInfo(deleteRecord.Type);\n\nvar instruction = {};\ninstruction.Type = \"Delete\";\ninstruction.Record = recordInfo.name;\ninstruction.Id = deleteRecord.Id;\n\ninstruction.initialReadPerm = deleteRecord.read_perm;\ninstruction.initialEditPerm = deleteRecord.edit_perm;\n\nvar initialData = {};\ninstruction.Initial = initialData;\n\nfor(var i = 0; i < recordInfo.fields.length; i++) {\n    var field = recordInfo.fields[i];\n    var initialValue = deleteRecord.Fields[field.name];\n    \n    initialData[field.name] = initialValue;\n}\n\nreturn instruction;\n","supplementalCode":"","description":""}},"getRecordInfo":{"name":"getRecordInfo","type":"apogee.FunctionTable","updateData":{"argList":["recordType"],"functionBody":"var recordInfo = dataSetInfo.records[recordType];\n\nif(!recordInfo) {\n    throw new Error(\"Record type not found in getRecordInfo: \" + recordType);\n}\n\nreturn recordInfo;","supplementalCode":"","description":""}}}},"loadMetaFileRecords":{"name":"loadMetaFileRecords","type":"apogee.Folder","children":{"fileTypeSearch":{"name":"fileTypeSearch","type":"apogee.JsonTable","updateData":{"data":{"search":"file_type_list"},"description":""}},"metaFileSearch":{"name":"metaFileSearch","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar searchDef = {};\nsearchDef.search = \"meta_file\";\nsearchDef.id = metaFileId;\nreturn searchDef;\nreturn value;\n\n","supplementalCode":"","description":""}},"fileTypeList":{"name":"fileTypeList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(fileTypeSearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"fileTypeEntrySearch":{"name":"fileTypeEntrySearch","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar searchDef = {};\nsearchDef.search = \"file_type_entries\";\nsearchDef.id = fileTypeId;\nreturn searchDef;\nreturn value;\n\n","supplementalCode":"","description":""}},"fileTypeEntryList":{"name":"fileTypeEntryList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(fileTypeEntrySearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"recordStore":{"name":"recordStore","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar map = {};\n\naddSearchResponse(fileTypeList,map);\naddSearchResponse(fileTypeEntryList,map);\naddSearchResponse(metaFileSearch,map);\naddSearchResponse(metaFileResponse,map);\n\nreturn map;\nreturn value;\n\n","supplementalCode":"function addSearchResponse(searchResponse,outputMap) {\n    if((!searchResponse)||(!searchResponse.success)||(!searchResponse.data)) {\n        return \"\";\n    }\n    \n    var searchResponseData = searchResponse.data;\n    \n    if(searchResponseData.Response) {\n        addRecordList(searchResponseData.Response,outputMap);\n    }\n    if(searchResponseData.Records) {\n        addRecordList(searchResponseData.Records,outputMap);\n    }\n    \n}\n\nfunction addRecordList(recordList,outputMap) {\n    for(var i = 0; i < recordList.length; i++) {\n        var record = recordList[i];\n        \n        var typeSection = outputMap[record.Type];\n        if(!typeSection) {\n            typeSection = {};\n            outputMap[record.Type] = typeSection;\n        }\n        \n        //if there is already a record, just overwrite it. They should be the same.\n        typeSection[record.Id] = record;\n    }\n}","description":""}},"metaFileEntryList":{"name":"metaFileEntryList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var entryRecordList = [];\n\nvar recipeEntries = recordStore.recipe_entry;\n\nfor(var key in recipeEntries) {\n    var entryRecord = recipeEntries[key];\n    if(entryRecord.Fields.meta_file_id == metaFileId) {\n        var fileEntryRecord = getRecord(\"file_entry\",entryRecord.Fields.file_entry_id);\n        var entryData = createMetaFileEntry(\n                fileEntryRecord,\n                entryRecord.Fields.insertion_info,\n                entryRecord.Fields.ordr\n            );\n        entryRecordList.push(entryData); \n    }\n}\n\nreturn entryRecordList;\n\n","supplementalCode":"","description":""}},"context":{"name":"context","type":"apogee.JsonTable","updateData":{"data":"public","description":""}},"metaFileId":{"name":"metaFileId","type":"apogee.JsonTable","updateData":{"data":3,"description":""}},"fileTypeId":{"name":"fileTypeId","type":"apogee.JsonTable","updateData":{"data":6,"description":""}},"metaFileListSearch":{"name":"metaFileListSearch","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar searchDef = {};\nsearchDef.search = \"meta_file_list\";\nsearchDef.file_context = context;\nreturn searchDef;\nreturn value;\n\n","supplementalCode":"","description":""}},"metaFileResponse":{"name":"metaFileResponse","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nif(metaFileId === 0) {\n    return undefined;\n}\n\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(metaFileSearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"metaFileList":{"name":"metaFileList","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nif(context === 0) {\n    return undefined;\n}\n\nvar requestOptions = micemetarecipeDataAccess.createRequestOptions(metaFileListSearch);\nvalue = apogee.net.jsonRequest(micemetarecipeDataAccess.requestUrl,requestOptions);\nreturn value;\n\n","supplementalCode":"","description":""}},"getRecord":{"name":"getRecord","type":"apogee.FunctionTable","updateData":{"argList":["recordType","recordId"],"functionBody":"typeSection = recordStore[recordType];\nif(!typeSection) {\n    throw new Error(\"Type not found!\");\n}\n\nreturn typeSection[recordId];\n","supplementalCode":"","description":""}},"fileTypeIds":{"name":"fileTypeIds","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar output = {};\n\nvar fileTypeRecords = fileTypeList.data.Response;\nfor(var i = 0; i < fileTypeRecords.length; i++) {\n    var record = fileTypeRecords[i];\n    output[record.Fields.file_type_name] = record.Id;\n}\n\nreturn output;\nreturn value;\n\n","supplementalCode":"","description":""}},"metaFileIds":{"name":"metaFileIds","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar output = {};\n\nvar metaFileRecords = metaFileList.data.Response;\nfor(var i = 0; i < metaFileRecords.length; i++) {\n    var record = metaFileRecords[i];\n    var fileTypeRecord = getRecord(\"file_type\",record.Fields.file_type_id);\n    var fileType = fileTypeRecord.Fields.file_type_name;\n    var metaName = record.Fields.name;\n    output[fileType + \":\" + metaName] = record.Id;\n}\n\nreturn output;\nreturn value;\n\n","supplementalCode":"","description":""}},"version":{"name":"version","type":"apogee.JsonTable","updateData":{"data":"1.2","description":""}},"dependencies":{"name":"dependencies","type":"apogee.JsonTable","updateData":{"data":"- micemetarecipeDataAccess - in root folder","description":""}},"releaseNotes":{"name":"releaseNotes","type":"apogee.JsonTable","updateData":{"data":"1.2: fix bug in create meta file entry function\n1.1: Added ID to output entry list\n1.0: initial release","description":""}},"createMetaFileEntry":{"name":"createMetaFileEntry","type":"apogee.FunctionTable","updateData":{"argList":["fileEntryRecord","insertionInfo","ordr"],"functionBody":"\nvar fileEntryTypeRecord = getRecord(\"file_entry_type\",fileEntryRecord.Fields.file_entry_type_id);\n\nvar entryData = {};\nentryData.fileEntryId = fileEntryRecord.Id;\nentryData.section = fileEntryTypeRecord.Fields.section;\nentryData.name = fileEntryTypeRecord.Fields.name;\nentryData.keyString = fileEntryTypeRecord.Fields.key_string;\nentryData.entry = fileEntryRecord.Fields.entry_data;\nentryData.insertionInfo = insertionInfo;\nentryData.order = ordr;\n\nreturn entryData;","supplementalCode":"","description":""}}}},"stringsFile":{"name":"stringsFile","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\noutput.translations = {};\n\nvar inputList = loadMetaFileRecords.metaFileEntryList;\nfor(var i = 0; i < inputList.length; i++) {\n    var inputEntry = inputList[i];\n    \n    var lang = inputEntry.section[0];\n    var key = inputEntry.keyString;\n    var translation = inputEntry.entry.trans;\n    \n    var outputEntry = output.translations[key];\n    if(!outputEntry) {\n        outputEntry = {};\n        output.translations[key] = outputEntry;\n    }\n    \n    outputEntry[lang] = translation;\n}\n\nreturn output;","supplementalCode":"","description":""}},"existingStringsFile":{"name":"existingStringsFile","type":"apogee.JsonTable","updateData":{"data":{"translations":{"com_type:Academic Building":{"en":"Academic Building","ja":"学術の建物"},"com_type:Airport":{"en":"Airport","ja":"空港"},"com_type:Apartment Complex":{"en":"Apartment Complex","ja":"団地"},"com_type:Bus Station":{"en":"Bus Station","ja":"バスターミナル"},"com_type:Business Campus":{"en":"Business Campus","ja":"ビジネスキャンパス"},"com_type:Campground":{"en":"Campground","ja":"キャンプ場"},"com_type:Casino":{"en":"Casino","ja":"カジノ"},"com_type:College Campus Building":{"en":"College Campus Building","ja":"大学キャンパス構築"},"com_type:Convention Center":{"en":"Convention Center","ja":"コンベンションセンター"},"com_type:Dormitory":{"en":"Dormitory","ja":"寮"},"com_type:Government":{"en":"Government","ja":"政府"},"com_type:High School":{"en":"High School","ja":"高等学校"},"com_type:Hospital":{"en":"Hospital","ja":"病院"},"com_type:Hotel":{"en":"Hotel","ja":"ホテル"},"com_type:Industry":{"en":"Industry","ja":"産業"},"com_type:Library":{"en":"Library","ja":"図書館"},"com_type:Metro Station":{"en":"Metro Station","ja":"地下鉄"},"com_type:Museum":{"en":"Museum","ja":"博物館"},"com_type:Other":{"en":"Other","ja":"その他"},"com_type:Parking Garage":{"en":"Parking Garage","ja":"駐車場"},"com_type:Religious Building":{"en":"Religious Building","ja":"宗教建築"},"com_type:Retail":{"en":"Retail","ja":"リテール"},"com_type:School":{"en":"School","ja":"学校"},"com_type:Shopping Center":{"en":"Shopping Center","ja":"ショッピングセンター"},"com_type:Shopping Mall":{"en":"Shopping Mall","ja":"ショッピングモール"},"com_type:Sports Center":{"en":"Sports Center","ja":"スポーツセンター"},"com_type:Stadium":{"en":"Stadium","ja":"スタジアム"},"com_type:Theater":{"en":"Theater","ja":"劇場"},"com_type:Theme Park":{"en":"Theme Park","ja":"テーマパーク"},"com_type:Train Station":{"en":"Train Station","ja":"鉄道駅"},"country:AD":{"en":"Andorra","ja":"アンドラ"},"country:AE":{"en":"United Arab Emirates","ja":"United Arab Emirates"},"country:AF":{"en":"Afghanistan","ja":"アフガニスタン"},"country:AG":{"en":"Antigua and Barbuda","ja":"アンチグアバーブーダ"},"country:AI":{"en":"Anguilla","ja":"アングィラ"},"country:AL":{"en":"Albania","ja":"アルバニア"},"country:AM":{"en":"Armenia","ja":"アルメニア"},"country:AN":{"en":"Netherlands Antilles","ja":"Netherlands Antilles"},"country:AO":{"en":"Angola","ja":"アンゴラ"},"country:AQ":{"en":"Antarctica","ja":"南極大陸"},"country:AR":{"en":"Argentina","ja":"アルゼンチン"},"country:AS":{"en":"American Samoa","ja":"米サモア"},"country:AT":{"en":"Austria","ja":"オーストリア"},"country:AU":{"en":"Australia","ja":"オーストラリア"},"country:AW":{"en":"Aruba","ja":"アルバ"},"country:AX":{"en":"Aland Islands","ja":"オーランド島"},"country:AZ":{"en":"Azerbaijan","ja":"アゼルバイジャン"},"country:BA":{"en":"Bosnia and Herzegovina","ja":"ボスニア_ヘルツェゴビナ"},"country:BB":{"en":"Barbados","ja":"バルバドス"},"country:BD":{"en":"Bangladesh","ja":"バングラデシュ"},"country:BE":{"en":"Belgium","ja":"ベルギー"},"country:BF":{"en":"Burkina Faso","ja":"ブルキナファソ"},"country:BG":{"en":"Bulgaria","ja":"ブルガリア"},"country:BH":{"en":"Bahrain","ja":"バーレーン"},"country:BI":{"en":"Burundi","ja":"ブルンジ"},"country:BJ":{"en":"Benin","ja":"ベナン"},"country:BM":{"en":"Bermuda","ja":"バミューダ"},"country:BN":{"en":"Brunei Darussalam","ja":"ブルネイ_ダルサラーム国"},"country:BO":{"en":"Bolivia","ja":"ボリビア"},"country:BR":{"en":"Brazil","ja":"ブラジル"},"country:BS":{"en":"Bahamas","ja":"バハマ"},"country:BT":{"en":"Bhutan","ja":"ブータン"},"country:BV":{"en":"Bouvet Island","ja":"ブーベ島"},"country:BW":{"en":"Botswana","ja":"ボツワナ"},"country:BY":{"en":"Belarus","ja":"ベラルーシ"},"country:BZ":{"en":"Belize","ja":"ベリーズ"},"country:CA":{"en":"Canada","ja":"カナダ"},"country:CC":{"en":"Cocos (Keeling) Islands","ja":"ココス（キーリング）島"},"country:CD":{"en":"The Democratic Republic of the Congo","ja":"The Democratic Republic of the Congo"},"country:CF":{"en":"Central African Republic","ja":"中央アフリカ共和国"},"country:CG":{"en":"Congo","ja":"コンゴ"},"country:CH":{"en":"Switzerland","ja":"スイス"},"country:CI":{"en":"Cote Divoire","ja":"Cote Divoire"},"country:CK":{"en":"Cook Islands","ja":"クック島"},"country:CL":{"en":"Chile","ja":"チリ"},"country:CM":{"en":"Cameroon","ja":"カメルーン"},"country:CN":{"en":"China","ja":"中国"},"country:CO":{"en":"Colombia","ja":"コロンビア"},"country:CR":{"en":"Costa Rica","ja":"コスタリカ"},"country:CV":{"en":"Cape Verde","ja":"カーボベルデ"},"country:CX":{"en":"Christmas Island","ja":"クリスマス島"},"country:CY":{"en":"Cyprus","ja":"キプロス"},"country:CZ":{"en":"Czech Republic","ja":"Czech Republic"},"country:DE":{"en":"Germany","ja":"ドイツ"},"country:DJ":{"en":"Djibouti","ja":"ジブチ"},"country:DK":{"en":"Denmark","ja":"デンマーク"},"country:DM":{"en":"Dominica","ja":"ドミニカ"},"country:DO":{"en":"Dominican Republic","ja":"ドミニカ共和国"},"country:DZ":{"en":"Algeria","ja":"アルジェリア"},"country:EC":{"en":"Ecuador","ja":"エクアドル"},"country:EE":{"en":"Estonia","ja":"エストニア"},"country:EG":{"en":"Egypt","ja":"エジプト"},"country:EH":{"en":"Western Sahara","ja":"西サハラ"},"country:ER":{"en":"Eritrea","ja":"エリトリア"},"country:ES":{"en":"Spain","ja":"スペイン"},"country:ET":{"en":"Ethiopia","ja":"エチオピア"},"country:FI":{"en":"Finland","ja":"フィンランド"},"country:FJ":{"en":"Fiji","ja":"フィジー"},"country:FK":{"en":"Falkland Islands (Malvinas)","ja":"フォークランド島（マルビナス）"},"country:FM":{"en":"Micronesia","ja":"ミクロネシア"},"country:FO":{"en":"Faroe Islands","ja":"フェロー島"},"country:FR":{"en":"France","ja":"フランス"},"country:GA":{"en":"Gabon","ja":"ガボン"},"country:GB":{"en":"United Kingdom","ja":"イギリス"},"country:GD":{"en":"Grenada","ja":"グレナダ"},"country:GE":{"en":"Georgia","ja":"グルジア"},"country:GF":{"en":"French Guiana","ja":"フレンチギアナ"},"country:GH":{"en":"Ghana","ja":"ガーナ"},"country:GI":{"en":"Gibraltar","ja":"ジブラルタル"},"country:GL":{"en":"Greenland","ja":"グリーンランド"},"country:GM":{"en":"Gambia","ja":"ガンビア"},"country:GN":{"en":"Guinea","ja":"ギニア"},"country:GP":{"en":"Guadeloupe","ja":"グアドループ島"},"country:GQ":{"en":"Equatorial Guinea","ja":"Equatorial Guinea"},"country:GR":{"en":"Greece","ja":"ギリシャ"},"country:GT":{"en":"Guatemala","ja":"グアテマラ"},"country:GU":{"en":"Guam","ja":"グアム島"},"country:GW":{"en":"Guinea-Bissau","ja":"Guinea-Bissau"},"country:GY":{"en":"Guyana","ja":"ガイアナ"},"country:HK":{"en":"Hong Kong","ja":"香港"},"country:HM":{"en":"Heard Island and McDonald Islands","ja":"Heard Island and McDonald Islands"},"country:HN":{"en":"Honduras","ja":"ホンジュラス"},"country:HR":{"en":"Croatia","ja":"クロアチア"},"country:HT":{"en":"Haiti","ja":"ハイチ"},"country:HU":{"en":"Hungary","ja":"ハンガリー"},"country:ID":{"en":"Indonesia","ja":"インドネシア"},"country:IE":{"en":"Ireland","ja":"アイルランド"},"country:IL":{"en":"Israel","ja":"イスラエル"},"country:IN":{"en":"India","ja":"インド"},"country:IO":{"en":"British Indian Ocean Territory","ja":"イギリス領インド洋地域"},"country:IQ":{"en":"Iraq","ja":"イラク"},"country:IS":{"en":"Iceland","ja":"アイスランド"},"country:IT":{"en":"Italy","ja":"イタリア"},"country:JM":{"en":"Jamaica","ja":"ジャマイカ"},"country:JO":{"en":"Jordan","ja":"ヨルダン"},"country:JP":{"en":"Japan","ja":"日本"},"country:KE":{"en":"Kenya","ja":"ケニア"},"country:KG":{"en":"Kyrgyzstan","ja":"キルギスタン"},"country:KH":{"en":"Cambodia","ja":"カンボジア"},"country:KI":{"en":"Kiribati","ja":"キリバス"},"country:KM":{"en":"Comoros","ja":"コモロ"},"country:KN":{"en":"Saint Kitts-Nevis","ja":"セントクリストファー_ネイビス -"},"country:KR":{"en":"Korea (South)","ja":"韓国"},"country:KW":{"en":"Kuwait","ja":"クウェート"},"country:KY":{"en":"Cayman Islands","ja":"ケイマン島"},"country:KZ":{"en":"Kazakstan","ja":"カザフスタン"},"country:LA":{"en":"Laos","ja":"ラオス"},"country:LB":{"en":"Lebanon","ja":"レバノン"},"country:LC":{"en":"Saint Lucia","ja":"セントルシア"},"country:LI":{"en":"Liechtenstein","ja":"リヒテンシュタイン"},"country:LK":{"en":"Sri Lanka","ja":"スリ_ランカ"},"country:LR":{"en":"Liberia","ja":"リベリア"},"country:LS":{"en":"Lesotho","ja":"レソト"},"country:LT":{"en":"Lithuania","ja":"リトアニア"},"country:LU":{"en":"Luxembourg","ja":"ルクセンブルク"},"country:LV":{"en":"Latvia","ja":"ラトビア"},"country:LY":{"en":"Libya","ja":"リビア"},"country:MA":{"en":"Morocco","ja":"モロッコ"},"country:MC":{"en":"Monaco","ja":"モナコ"},"country:MD":{"en":"Moldova","ja":"モルドバ"},"country:MG":{"en":"Madagascar","ja":"マダガスカル"},"country:MH":{"en":"Marshall Islands","ja":"マーシャル島"},"country:MK":{"en":"Macedonia","ja":"マケドニア"},"country:ML":{"en":"Mali","ja":"マリ"},"country:MM":{"en":"Myanmar","ja":"ミャンマー"},"country:MN":{"en":"Mongolia","ja":"モンゴル国"},"country:MO":{"en":"Macau","ja":"マカオ"},"country:MQ":{"en":"Martinique","ja":"マルティニーク島"},"country:MR":{"en":"Mauritania","ja":"モーリタニア"},"country:MS":{"en":"Montserrat","ja":"モントセラト"},"country:MT":{"en":"Malta","ja":"マルタ"},"country:MU":{"en":"Mauritius","ja":"モーリシャス"},"country:MV":{"en":"Maldives","ja":"モルディブ"},"country:MW":{"en":"Malawi","ja":"マラウイ"},"country:MX":{"en":"Mexico","ja":"メキシコ"},"country:MY":{"en":"Malaysia","ja":"マレーシア"},"country:MZ":{"en":"Mozambique","ja":"モザンビーク"},"country:NA":{"en":"Namibia","ja":"ナミビア"},"country:NC":{"en":"New Caledonia","ja":"ニューカレドニア"},"country:NE":{"en":"Niger","ja":"ニジェール"},"country:NF":{"en":"Norfolk Island","ja":"ノーフォーク島"},"country:NG":{"en":"Nigeria","ja":"ナイジェリア"},"country:NI":{"en":"Nicaragua","ja":"ニカラグア"},"country:NL":{"en":"Netherlands","ja":"オランダ"},"country:NO":{"en":"Norway","ja":"ノルウェー"},"country:NP":{"en":"Nepal","ja":"ネパールl"},"country:NR":{"en":"Nauru","ja":"ナウル"},"country:NU":{"en":"Niue","ja":"ニウエ"},"country:NZ":{"en":"New Zealand","ja":"ニュージーランド"},"country:OM":{"en":"Oman","ja":"オマーン"},"country:PA":{"en":"Panama","ja":"パナマ"},"country:PE":{"en":"Peru","ja":"ペルー"},"country:PF":{"en":"French Polynesia","ja":"フランス領ポリネシア"},"country:PG":{"en":"Papua New Guinea","ja":"パプアニューギニア"},"country:PH":{"en":"Philippines","ja":"フィリピン"},"country:PK":{"en":"Pakistan","ja":"パキスタン"},"country:PL":{"en":"Poland","ja":"ポーランド"},"country:PM":{"en":"Saint Pierre and Miquelon","ja":"サンピエール島_ミクロン島"},"country:PN":{"en":"Pitcairn","ja":"ピトケアン"},"country:PR":{"en":"Puerto Rico","ja":"プエルトリコ"},"country:PS":{"en":"Palestinian Territory, Occupied","ja":"パレスチナ"},"country:PT":{"en":"Portugal","ja":"ポルトガル"},"country:PW":{"en":"Palau","ja":"パラオ"},"country:PY":{"en":"Paraguay","ja":"パラグアイ"},"country:QA":{"en":"Qatar","ja":"カタール"},"country:RE":{"en":"Reunion","ja":"再会"},"country:RO":{"en":"Romania","ja":"ルーマニア"},"country:RU":{"en":"Russian Federation","ja":"ロシア連邦"},"country:RW":{"en":"Rwanda","ja":"ルワンダ"},"country:SA":{"en":"Saudi Arabia","ja":"サウジアラビア"},"country:SB":{"en":"Solomon Islands","ja":"ソロモン島"},"country:SC":{"en":"Seychelles","ja":"セイシェル"},"country:SE":{"en":"Sweden","ja":"スウェーデン"},"country:SG":{"en":"Singapore","ja":"シンガポール"},"country:SH":{"en":"Saint Helena","ja":"セント_ヘレナ島"},"country:SI":{"en":"Slovenia","ja":"スロベニア"},"country:SJ":{"en":"Svalbard and Jan Mayen","ja":"スバールバル島ヤンマイエン島"},"country:SK":{"en":"Slovakia","ja":"スロバキア"},"country:SL":{"en":"Sierra Leone","ja":"シエラレオネ"},"country:SM":{"en":"San Marino","ja":"サン_マリノ"},"country:SN":{"en":"Senegal","ja":"セネガル"},"country:SO":{"en":"Somalia","ja":"ソマリア"},"country:SR":{"en":"Suriname","ja":"スリナム"},"country:ST":{"en":"Sao Tome and Principe","ja":"サントメプリンシペ"},"country:SV":{"en":"El Salvador","ja":"エルサルバドル"},"country:SZ":{"en":"Swaziland","ja":"スワジランド"},"country:TC":{"en":"Turks and Caicos Islands","ja":"タークス_カイコス諸島"},"country:TD":{"en":"Chad","ja":"チャド"},"country:TF":{"en":"French Southern Territories","ja":"フランス領極南島"},"country:TG":{"en":"Togo","ja":"トーゴ"},"country:TH":{"en":"Thailand","ja":"タイ"},"country:TJ":{"en":"Tajikistan","ja":"タジキスタン"},"country:TK":{"en":"Tokelau","ja":"トケラウ島"},"country:TM":{"en":"Turkmenistan","ja":"トルクメニスタン"},"country:TN":{"en":"Tunisia","ja":"チュニジア"},"country:TO":{"en":"Tonga","ja":"トンガ"},"country:TR":{"en":"Turkey","ja":"トルコ"},"country:TT":{"en":"Trinidad and Tobago","ja":"トリニダード_トバゴ"},"country:TV":{"en":"Tuvalu","ja":"ツバル"},"country:TW":{"en":"Taiwan","ja":"台湾"},"country:TZ":{"en":"Tanzania","ja":"タンザニア"},"country:UA":{"en":"Ukraine","ja":"ウクライナ"},"country:UG":{"en":"Uganda","ja":"ウガンダ"},"country:UM":{"en":"United States Minor Outlying Islands","ja":"アメリカ合衆国外島"},"country:US":{"en":"United States","ja":"米国"},"country:UY":{"en":"Uruguay","ja":"ウルグアイ"},"country:UZ":{"en":"Uzbekistan","ja":"ウズベキスタン"},"country:VC":{"en":"Saint Vincent and the Grenadines","ja":"Saint Vincent and the Grenadines"},"country:VE":{"en":"Venezuela","ja":"ベネズエラ"},"country:VG":{"en":"Virgin Islands, British","ja":"英領バージン島"},"country:VI":{"en":"Virgin Islands, US","ja":"米領バージン島"},"country:VN":{"en":"Viet Nam","ja":"ベトナム"},"country:VU":{"en":"Vanuatu","ja":"バヌアツ"},"country:WF":{"en":"Wallis and Futuna","ja":"ワリー_エ_フトゥーナ"},"country:WS":{"en":"Samoa","ja":"サモア"},"country:YE":{"en":"Yemen","ja":"イエメン"},"country:YT":{"en":"Mayotte","ja":"マヨット島"},"country:ZA":{"en":"South Africa","ja":"南アフリカ"},"country:ZM":{"en":"Zambia","ja":"ザンビア"},"country:ZW":{"en":"Zimbabwe","ja":"ジンバブエ"},"icon:ATM":{"en":"ATM","ja":"ATM"},"icon:ATM:Dollar":{"en":"ATM","ja":"ATM"},"icon:ATM:General":{"en":"ATM","ja":"ATM:General"},"icon:ATM:Yen":{"en":"ATM","ja":"ATM:Yen"},"icon:Baggage Claim":{"en":"Baggage Claim","ja":"手荷物引渡場"},"icon:Bathroom":{"en":"Bathroom","ja":"トイレ"},"icon:Bathroom M":{"en":"Men's Bathroom","ja":"男子トイレ"},"icon:Bathroom W":{"en":"Women's Bathroom","ja":"女子トイレ"},"icon:Bathroom Fam":{"en":"Family Bathroom","ja":"ファミリールーム"},"icon:Bathroom W DA":{"en":"Bathroom W DA","ja":"Bathroom W DA"},"icon:Bathroom M DA":{"en":"Bathroom M DA","ja":"Bathroom M DA"},"icon:Bathroom Fam DA":{"en":"Bathroom Fam DA","ja":"多目的トイレ"},"icon:Bathroom DA":{"en":"Bathroom DA","ja":"Bathroom DA"},"icon:Bus":{"en":"Bus","ja":"バス"},"icon:Bike Rack":{"en":"Bike Rack","ja":"バイクラック"},"icon:Car Rental":{"en":"Car Rental","ja":"レンタカー"},"icon:Changing Station":{"en":"Changing Station","ja":"オムツ替え"},"icon:Cash Register":{"en":"Cash Register","ja":"Cash Register"},"icon:Cocktails":{"en":"Cocktails","ja":"カクテル"},"icon:Coffee":{"en":"Coffee","ja":"コーヒー"},"icon:Copy/Print":{"en":"Copy/Print","ja":"Copy/Print"},"icon:Crosswalk":{"en":"Crosswalk","ja":"歩道橋"},"icon:Customs":{"en":"Customs","ja":"税関検査"},"icon:Customer Service":{"en":"Customer Service","ja":"顧客サービス"},"icon:Defibrillator":{"en":"Defibrillator","ja":"AED"},"icon:Disabled Access":{"en":"Disabled Access","ja":"車いす対応"},"icon:Elevator":{"en":"Elevator","ja":"エレベータ"},"icon:Emergency Exit":{"en":"Emergency Exit","ja":"非常口"},"icon:Escalator":{"en":"Escalator","ja":"エスカレーター"},"icon:Eyewash":{"en":"Eyewash","ja":"目薬"},"icon:Fire Extinguisher":{"en":"Fire Extinguisher","ja":"消火器"},"icon:Fire Hose":{"en":"Fire Hose","ja":"消防ホース"},"icon:Fire Pull":{"en":"Fire Pull","ja":"火災プル"},"icon:First Aid":{"en":"First Aid","ja":"救護室"},"icon:Fitness Center":{"en":"Fitness Center","ja":"フィットネスセンター"},"icon:Flight Monitor":{"en":"Flight Monitor","ja":"飛行モニター"},"icon:Food and Drink":{"en":"Food and Drink","ja":"飲食物"},"icon:Ground Transportation":{"en":"Ground Transportation","ja":"Ground Transportation"},"icon:Gym":{"en":"Gym","ja":"ジム"},"icon:Immigration and Customs":{"en":"Immigration and Customs","ja":"入国審査、税関審査"},"icon:Information":{"en":"Information","ja":"インフォメーション"},"icon:Locker":{"en":"Locker","ja":"コインロッカー"},"icon:Lost and Found":{"en":"Lost and Found","ja":"お忘れ物承り場所"},"icon:Luggage Cart":{"en":"Luggage Cart","ja":"荷物カート"},"icon:Mail":{"en":"Mail","ja":"郵便"},"icon:Massage Chair":{"en":"Massage Chair","ja":"マッサージチェア"},"icon:Medical":{"en":"Medical","ja":"医療"},"icon:Meditation Room":{"en":"Meditation Room","ja":"瞑想ルーム"},"icon:Meeting Point":{"en":"Meeting Point","ja":"打ち合わせポイント"},"icon:Money Changer":{"en":"Money Changer","ja":"マネーチェンジャー"},"icon:Movie Theater":{"en":"Movie Theater","ja":"映画館"},"icon:Moving Walkway":{"en":"Moving Walkway","ja":"動く歩道"},"icon:Passport Control":{"en":"Passport Control","ja":"Passport Control"},"icon:Paid Parking":{"en":"Paid Parking","ja":"有料駐車場"},"icon:Parking":{"en":"Parking","ja":"駐車場"},"icon:Pet Relief Area":{"en":"Pet Relief Area","ja":"ペット救済エリア"},"icon:Playground":{"en":"Playground","ja":"遊び場"},"icon:Police/Security":{"en":"Police/Security","ja":"警察／セキュリティ"},"icon:Power":{"en":"Power","ja":"電源"},"icon:Rest Area":{"en":"Rest Area","ja":"休憩所"},"icon:Restaurant":{"en":"Restaurant","ja":"レストラン"},"icon:Santa":{"en":"Santa","ja":"Santa"},"icon:Security Section":{"en":"Security Section","ja":"セキュリティ"},"icon:Shoe Shine":{"en":"Shoe Shine","ja":"靴磨き"},"icon:Shower":{"en":"Shower","ja":"シャワー"},"icon:Smoke":{"en":"Smoking Area","ja":"喫煙所"},"icon:Stairs":{"en":"Stairs","ja":"階段"},"icon:Stop Sign":{"en":"Stop Sign","ja":"停止"},"icon:Stroller":{"en":"Stroller","ja":"ベビーカー"},"icon:Taxi":{"en":"Taxi","ja":"タクシ"},"icon:Telephone":{"en":"Telephone","ja":"電話"},"icon:Ticketing, Check-in":{"en":"Ticketing, Check-in","ja":"鉄道乗車券販売"},"icon:Traffic Light":{"en":"Traffic Light","ja":"信号"},"icon:Train":{"en":"Train","ja":"電車"},"icon:Transit Hotel":{"en":"Transit Hotel","ja":"トランジットホテル"},"icon:TV":{"en":"TV","ja":"テレビ"},"icon:Valet Parking":{"en":"Valet Parking","ja":"駐車サービス"},"icon:Vending Machine":{"en":"Vending Machine","ja":"自販機"},"icon:Wheelchair Ramp":{"en":"Wheelchair Ramp","ja":"車椅子用のスロープ"},"icon:Wifi":{"en":"Wifi","ja":"Wifi"},"icon:Yield Sign":{"en":"Yield Sign","ja":"収量サイン"},"lang:ar":{"en":"Arabic","ja":"アラビア語"},"lang:da":{"en":"Danish","ja":"デンマーク語"},"lang:de":{"en":"German","ja":"ドイツ語"},"lang:en":{"en":"English","ja":"英語"},"lang:es":{"en":"Spanish","ja":"スペイン語"},"lang:fr":{"en":"French","ja":"フランス語"},"lang:gu":{"en":"Gujarati","ja":"グジャラート語"},"lang:he":{"en":"Hebrew","ja":"ヘブライ語"},"lang:hi":{"en":"Hindi","ja":"ヒンディー語"},"lang:id":{"en":"Indonesian","ja":"インドネシア語"},"lang:it":{"en":"Italian","ja":"イタリア語"},"lang:ja":{"en":"Japanese","ja":"日本語"},"lang:ko":{"en":"Korean","ja":"韓国語"},"lang:nl":{"en":"Dutch","ja":"オランダ語"},"lang:pt":{"en":"Portuguese","ja":"ポルトガル語"},"lang:ro":{"en":"Romanian","ja":"ルーマニア語"},"lang:ru":{"en":"Russian","ja":"ロシア語"},"lang:sv":{"en":"Swedish","ja":"スウェーデン語"},"lang:tr":{"en":"Turkish","ja":"トルコ語"},"lang:zh":{"en":"Chinese","ja":"中国語"},"map_type:Airport":{"en":"Airport","ja":"空港"},"map_type:Airport Terminal":{"en":"Airport Terminal","ja":"空港ターミナル"},"map_type:Casino":{"en":"Casino","ja":"カジノ"},"map_type:College Building":{"en":"College Building","ja":"カレッジビル"},"map_type:College Campus":{"en":"College Campus","ja":"大学のキャンパス"},"map_type:Convention":{"en":"Convention","ja":"コンベンション"},"map_type:Hospital":{"en":"Hospital","ja":"病院"},"map_type:Retail":{"en":"Retail","ja":"リテール"},"map_type:School Building":{"en":"School Building","ja":"校舎"},"map_type:School Campus":{"en":"School Campus","ja":"学校のキャンパス"},"map_type:Shopping Mall":{"en":"Shopping Mall","ja":"ショッピングモール"},"map_type:Station":{"en":"Station","ja":"駅"},"state:AB":{"en":"Alberta","ja":"アルバータ州"},"state:AK":{"en":"Alaska","ja":"アラスカ州"},"state:AL":{"en":"Alabama","ja":"アラバマ州"},"state:AR":{"en":"Arkansas","ja":"アーカンソー州"},"state:AZ":{"en":"Arizona","ja":"アリゾナ州"},"state:BC":{"en":"British Columbia","ja":"ブリティッシュコロンビア州"},"state:CA":{"en":"California","ja":"カリフォルニア州"},"state:CO":{"en":"Colorado","ja":"コロラド州"},"state:CT":{"en":"Connecticut","ja":"コネチカット州"},"state:DC":{"en":"District Of Columbia","ja":"コロンビア州"},"state:DE":{"en":"Delaware","ja":"デラウェア州"},"state:FL":{"en":"Florida","ja":"フロリダ州"},"state:GA":{"en":"Georgia","ja":"グルジア州"},"state:HI":{"en":"Hawaii","ja":"ハワイ"},"state:IA":{"en":"Iowa","ja":"アイオワ州"},"state:ID":{"en":"Idaho","ja":"アイダホ州"},"state:IL":{"en":"Illinois","ja":"イリノイ州"},"state:IN":{"en":"Indiana","ja":"インディアナ州"},"state:KS":{"en":"Kansas","ja":"カンザス州"},"state:KY":{"en":"Kentucky","ja":"ケンタッキー州"},"state:LA":{"en":"Louisiana","ja":"ルイジアナ州"},"state:MA":{"en":"Massachusetts","ja":"マサチューセッツ州"},"state:MB":{"en":"Manitoba","ja":"マニトバ州"},"state:MD":{"en":"Maryland","ja":"メリーランド州"},"state:ME":{"en":"Maine","ja":"メイン州"},"state:MI":{"en":"Michigan","ja":"ミシガン州"},"state:MN":{"en":"Minnesota","ja":"ミネソタ州"},"state:MO":{"en":"Missouri","ja":"ミズーリ州"},"state:MS":{"en":"Mississippi","ja":"ミシシッピー州"},"state:MT":{"en":"Montana","ja":"モンタナ州"},"state:NB":{"en":"New Brunswick","ja":"ニューブランズウィック州"},"state:NC":{"en":"North Carolina","ja":"ノースカロライナ州"},"state:ND":{"en":"North Dakota","ja":"ノースダコタ州"},"state:NE":{"en":"Nebraska","ja":"ネブラスカ州"},"state:NH":{"en":"New Hampshire","ja":"ニューハンプシャー州"},"state:NJ":{"en":"New Jersey","ja":"ニュージャージー州"},"state:NL":{"en":"Newfoundland and Labrador","ja":"ニューファンドランド_ラブラドール州"},"state:NM":{"en":"New Mexico","ja":"ニューメキシコ州"},"state:NS":{"en":"Nova Scotia","ja":"ノバスコシア州"},"state:NSW":{"en":"New South Wales","ja":"ニューサウスウェールズ州"},"state:NV":{"en":"Nevada","ja":"ネバダ州"},"state:NY":{"en":"New York","ja":"ニューヨーク"},"state:OH":{"en":"Ohio","ja":"オハイオ州"},"state:OK":{"en":"Oklahoma","ja":"オクラホマ州"},"state:ON":{"en":"Ontario","ja":"オンタリオ州"},"state:OR":{"en":"Oregon","ja":"オレゴン州"},"state:PA":{"en":"Pennsylvania","ja":"ペンシルベニア州"},"state:PE":{"en":"Prince Edward Island","ja":"プリンスエドワードアイランド"},"state:QC":{"en":"Quebec","ja":"ケベック州"},"state:QLD":{"en":"Queensland","ja":"クイーンズランド州"},"state:RI":{"en":"Rhode Island","ja":"ロードアイランド州"},"state:SA":{"en":"South Australia","ja":"南オーストラリア州"},"state:SC":{"en":"South Carolina","ja":"サウスカロライナ州"},"state:SD":{"en":"South Dakota","ja":"サウスダコタ州"},"state:SK":{"en":"Saskatchewan","ja":"サスカチュワン州"},"state:TAS":{"en":"Tasmania","ja":"タスマニア州"},"state:TN":{"en":"Tennessee","ja":"テネシー州"},"state:Tokyo":{"en":"Tokyo","ja":"東京"},"state:TX":{"en":"Texas","ja":"テキサス州"},"state:UT":{"en":"Utah","ja":"ユタ州"},"state:VA":{"en":"Virginia","ja":"バージニア州"},"state:VIC":{"en":"Victoria","ja":"ビクトリア"},"state:VT":{"en":"Vermont","ja":"バーモント州"},"state:WA":{"en":"Western Australia","ja":"西オーストラリア州"},"state:WI":{"en":"Wisconsin","ja":"ウィスコンシン州"},"state:WV":{"en":"West Virginia","ja":"ウェストバージニア州"},"state:WY":{"en":"Wyoming","ja":"ワイオミング州"}}},"description":""}}}}},"components":{"micemetarecipeDataAccess":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":75,"y":75}},"children":{"createRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":560,"height":321},"posInfo":{"x":22,"y":221},"state":-1,"viewType":"Code"}},"recordsToCreateInstructions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":834,"height":391},"posInfo":{"x":29,"y":506},"state":-1,"viewType":"Code"}},"createCommitBody":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":400},"posInfo":{"x":32,"y":603},"state":-1,"viewType":"Notes"}},"createRequestOptions":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":523,"height":254},"posInfo":{"x":34,"y":650},"state":-1,"viewType":"Notes"}},"sessionKey":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":504,"height":86},"posInfo":{"x":14,"y":111},"state":0,"viewType":"Text"}},"host":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":353,"height":71},"posInfo":{"x":14,"y":15},"state":0,"viewType":"Text"}},"commitUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":433,"height":51},"posInfo":{"x":568,"y":65},"state":-1,"viewType":"Text"}},"requestUrl":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":450,"height":68},"posInfo":{"x":569,"y":12},"state":-1,"viewType":"Text"}},"dataSetInfo":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":665,"height":611},"posInfo":{"x":569,"y":129},"state":0,"viewType":"Text"}},"version":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":197,"height":91},"posInfo":{"x":708,"y":226},"state":0,"viewType":"Text"}},"releaseNotes":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":412,"height":156},"posInfo":{"x":708,"y":342},"state":0,"viewType":"Notes"}},"depedencies":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":253,"height":102},"posInfo":{"x":706,"y":527},"state":0,"viewType":"Text"}},"createUpdateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":821,"height":496},"posInfo":{"x":21,"y":364},"state":-1,"viewType":"Private"}},"createCreateInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":994,"height":643},"posInfo":{"x":21,"y":314},"state":-1,"viewType":"Code"}},"getFieldErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":512,"height":68},"posInfo":{"x":867,"y":91},"state":-1,"viewType":"Code"}},"getRecordErrString":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":81},"posInfo":{"x":866,"y":142},"state":-1,"viewType":"Code"}},"createDeleteInstruction":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":678,"height":540},"posInfo":{"x":22,"y":413},"state":-1,"viewType":"Code"}},"getRecordInfo":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":400},"posInfo":{"x":861,"y":45},"state":-1,"viewType":"Code"}}}},"loadMetaFileRecords":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":74,"y":139}},"children":{"fileTypeSearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":297,"height":82},"posInfo":{"x":55,"y":25},"state":-1,"viewType":"Text"}},"metaFileSearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":334,"height":117},"posInfo":{"x":902,"y":16},"state":-1,"viewType":"Text"}},"fileTypeList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":447,"height":106},"posInfo":{"x":66,"y":77},"state":-1,"viewType":"Text"}},"fileTypeEntrySearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":347,"height":110},"posInfo":{"x":306,"y":25},"state":-1,"viewType":"Text"}},"fileTypeEntryList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":637,"height":480},"posInfo":{"x":301,"y":79},"state":-1,"viewType":"Formula"}},"recordStore":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":739,"height":542},"posInfo":{"x":724,"y":382},"state":-1,"viewType":"Text"}},"metaFileEntryList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":568,"height":395},"posInfo":{"x":45,"y":362},"state":0,"viewType":"Text"}},"context":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":218,"height":89},"posInfo":{"x":1203,"y":20},"state":0,"viewType":"Text"}},"metaFileId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":227,"height":89},"posInfo":{"x":1210,"y":261},"state":0,"viewType":"Text"}},"fileTypeId":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":229,"height":97},"posInfo":{"x":1206,"y":144},"state":0,"viewType":"Text"}},"metaFileListSearch":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":323,"height":98},"posInfo":{"x":604,"y":15},"state":-1,"viewType":"Text"}},"metaFileResponse":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":495,"height":325},"posInfo":{"x":898,"y":60},"state":0,"viewType":"Text"}},"metaFileList":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":647,"height":300},"posInfo":{"x":616,"y":70},"state":-1,"viewType":"Formula"}},"getRecord":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":400,"height":33},"posInfo":{"x":722,"y":435},"state":-1,"viewType":"Code"}},"fileTypeIds":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":413,"height":174},"posInfo":{"x":58,"y":141},"state":0,"viewType":"Text"}},"metaFileIds":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":365,"height":209},"posInfo":{"x":559,"y":121},"state":0,"viewType":"Text"}},"version":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":218,"height":73},"posInfo":{"x":1092,"y":376},"state":0,"viewType":"Text"}},"dependencies":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":395,"height":93},"posInfo":{"x":1095,"y":606},"state":0,"viewType":"Text"}},"releaseNotes":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":287,"height":118},"posInfo":{"x":1092,"y":462},"state":0,"viewType":"Text"}},"createMetaFileEntry":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":727,"height":257},"posInfo":{"x":653,"y":727},"state":-1,"viewType":"Code"}}}},"stringsFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":549,"height":362},"posInfo":{"x":74,"y":232},"state":0,"viewType":"Text"}},"existingStringsFile":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":658,"height":300},"posInfo":{"x":704,"y":217},"state":0,"viewType":"Text"}}}}