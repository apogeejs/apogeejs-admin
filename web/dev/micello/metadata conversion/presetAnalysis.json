{"fileType":"apogee workspace","jsLinks":[],"cssLinks":[],"workspace":{"fileType":"apogee workspace","version":0.2,"data":{"name":"presetsAnalysis","type":"apogee.Folder","children":{"presets":{"name":"presets","type":"apogee.JsonTable","updateData":{"data":{"property_trees":{"community_map":[{"k":"com_type","input":"enum","required":true,"v":{"Academic Building":{},"Airport":{},"Apartment Complex":{},"Bus Station":{},"Business Campus":{},"Campground":{},"Casino":{},"College Campus Building":{},"Convention Center":{},"Dormitory":{},"Government":{},"High School":{},"Hospital":{},"Hotel":{},"Industry":{},"Library":{},"Metro Station":{},"Museum":{},"Other":{},"Parking Garage":{},"Religious Building":{},"Retail":{},"School":{},"Shopping Center":{},"Shopping Mall":{},"Sports Center":{},"Stadium":{},"Theater":{},"Theme Park":{},"Train Station":{},"Urban Park":{}}},{"k":"name","input":"text","required":true,"has_lang":true},{"k":"default_lang","input":"named_key","required":true,"name":"lang"},{"k":"post address","input":"named_group"},{"k":"theme_map","input":"text","has_lang":false}],"community_entity":[{"k":"name","input":"text","required":true,"has_lang":true},{"desc":"This is a name used by the customer for the venue.","k":"alt_name","input":"text","required":true,"has_lang":true},{"k":"entity1","input":"named_group"},{"k":"entity2","input":"named_group"}],"drawing":[{"k":"map_type","input":"enum","required":true,"v":{"Airport":{},"Airport Terminal":{},"Casino":{},"College Building":{},"College Campus":{},"Convention":{},"Hospital":{},"Retail":{},"School Building":{},"School Campus":{},"Shopping Mall":{},"Station":{}}},{"k":"name","input":"text","required":true,"has_lang":true}],"level":[{"desc":"This is the full name of the level. If it is longer than TBD characters a short name should also be added.","k":"name","input":"text","required":true,"has_lang":false},{"desc":"This is a short name for the level. It is used if the full name is longer than TBD characters.","k":"short name","input":"text","has_lang":false},{"k":"elev_m","input":"text"},{"k":"elev_rel_m","input":"text"},{"k":"type","input":"enum","required":true,"v":{"indoor":{},"outdoor":{}}}],"geometry":[{"k":"geom_type","input":"multikey","required":true,"ks":[{"desc":"This represents an area. There are alternate keys representing also representing specific types of areas.","k":"area","input":"enum","v":{"aisle":{},"baggage claim":{"desc":"This is the area where baggage is retrieved. It should not be confused with a baggage carousel."},"copy/print":{},"immigration and customs":{},"meeting point":{},"parcel":{},"passport control":{},"pet relief area":{},"rest area":{},"section":{},"security section":{},"smoke":{},"true":{"desc":"This field represents a generic area."}}},{"k":"barrier","input":"enum","v":{"fence":{},"gate":{},"obstruction":{},"railing":{}}},{"desc":"This represents machinery, either fixed like a heater or portable like a computer.","k":"equipment","input":"enum","v":{"cash register":{},"computer":{},"printer":{},"copy machine":{},"water heater":{},"true":{"desc":"This represents a generic machine."}}},{"desc":"This object represents the objects that construct a building. It can include physical objects like a wall or areas like a room.","k":"facility","input":"enum","v":{"bathroom":{"desc":"A bathroom can have the gender property specified. Alternatively, the gender unspecified should represent both bathrooms. It can alternatively be used for the case of unisex bathroom in cases where the label unisex is obvious.","ks":[{"k":"gender","input":"enum","v":{"female":{},"male":{},"unisex":{"desc":"This is for a bathroom for both genders."},"family":{"desc":"This is for an explicitly classified family bathroom."}}},{"k":"changing station","input":"boolean"},{"k":"disabled access","input":"boolean"},{"desc":"This is appended to a bathroom when it is mapped as a room object instead of as a unit","k":"as room","input":"boolean"}]},"column":{},"door":{},"doorway":{"desc":"This is the open space in the wall where a door goes when plotted as an area. In the case of a line format wall, this doorway may be omitted if a door is present."},"elevator":{"desc":"This represents a single elevator."},"elevator bank":{"desc":"This represents a collection of elevators. It can be used instead of drawing multiple elevators."},"escalator":{"ks":[{"dep":true,"k":"to","input":"enum","v":{"above":{"dep":true},"below":{"dep":true},"both":{"dep":true}}},{"dep":true,"k":"from","input":"enum","v":{"above":{"dep":true},"below":{"dep":true},"both":{"dep":true}}}]},"floor opening":{},"hallway":{"ks":[{"desc":"This flag can be added to the portion of a hallway that forms a vestibule.","k":"vestibule","input":"boolean"}]},"hall area":{"desc":"This is a large open area of hallway, not included intersections."},"inaccessible space":{},"landing":{"desc":"This is the area between stair flights. In some cases it can also be used for the area at the top or bottom of a stairway."},"opening":{"desc":"This is used to illustrate an entrance on objects without doorways, such as an escalator or ramp"},"patio":{"desc":"This is an outdoor area, covered or uncovered, connected or disconnected with a building. This is closely related to a porch."},"platform":{},"porch":{"desc":"This is an covered outdoor area with a floor and typically open sides, connected to a building. This is closely related to a patio."},"ramp":{"ks":[{"k":"disabled access","input":"boolean"}]},"room":{"ks":[{"k":"use","input":"enum","v":{"lost and found":{},"meditation room":{},"auditorium":{},"cafeteria":{},"classroom":{},"conference room":{},"foyer":{"desc":"This is an area at the entryway, often with access to other floors. It is closely related to a lobby but different."},"lab":{},"library":{},"locker room":{},"lobby":{"desc":"This is an area where the main information or clerk desk is located. It is closely related to a foyer but different."},"office":{}}},{"k":"changing station","input":"boolean"}]},"stairs":{"desc":"This represents a stairs object. It will typically be rendered with an icon."},"stairwell":{"desc":"This is the room that houses a stairway. It is typically rendered without an icon."},"step":{"desc":"This represents a single step on a stairway."},"unit":{"ks":[{"desc":"This represents a type of unit. As soon as entity categorization is fully used, this designation will be used only for units with a specific purpose. Several entries will be removed.","k":"class","input":"enum","v":{"car rental":{},"cocktails":{},"coffee":{},"fitness center":{},"food and drink":{},"gym":{},"money changer":{},"movie theatre":{},"restaurant":{},"retail":{},"shoe shine":{},"ticketing, check-in":{},"transit hotel":{}}},{"k":"use","input":"enum","v":{"information":{},"customer service":{},"medical":{},"police/security":{}}}]},"wall":{},"window":{},"window opening":{"desc":"This is the hole in the wall where a window goes."},"moving walkway":{"ks":[{"dep":true,"k":"to","input":"boolean"},{"dep":true,"k":"from","input":"boolean"}]},"element":{"desc":"This is a generic building element object, like a wall or door (although they have their own classifications)."},"area":{"desc":"This is a generic area in a building, simliar to a room or hallway."},"detail":{"desc":"This is a generic detail or contents layer object in a building, like a step."}}},{"desc":"This is a fixed object, or else one that is heavy and difficult to move.","k":"fixture","input":"enum","v":{"baggage carousel":{"desc":"This represents the baggae carousel fixture."},"bin":{"desc":"This represents a bin that is a fixture."},"booth":{},"checkout":{},"countertop":{},"cubicle":{},"kiosk":{},"partition":{},"rack":{"desc":"This represents a rack that is a fixture."},"ramp":{"ks":[{"k":"disabled access","input":"boolean"}]},"shelf":{"desc":"This represents a shelf that is a fixture."},"stage":{},"stall":{},"true":{"desc":"This represents a generic fixture"}}},{"desc":"This represents a movable ojbect, like furniture.","k":"furnishing","input":"enum","v":{"bin":{"desc":"This represents a bin that is a furnishing."},"desk":{},"seat":{"ks":[{"k":"disabled access","input":"boolean"}]},"shelf":{"desc":"This represents a shelf that is a furnishing."},"table":{},"true":{"desc":"This represents a generic furnishing."}}},{"desc":"This represents a marker. It can be either physical, like a traffic line, or nonphysical, like a text label.","k":"marker","input":"enum","v":{"disabled access":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"entrance":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"large text":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"small text":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"true"}]},"traffic marker":{"ks":[{"k":"nonphysical","input":"fixed","fixed_value":"false"}]},"true":{"ks":[{"k":"nonphysical","input":"boolean"}]}}},{"desc":"This represents a meta data object. It is not a part of the map.","k":"meta","input":"enum","v":{"coordinates":{"ks":[{"k":"external_ref_object","input":"named_group"}]},"source":{"ks":[{"k":"external_ref_object","input":"named_group"}]},"guide":{},"level outline":{},"ground intersect":{}}},{"desc":"This is a generic object.","k":"object","input":"enum","v":{"true":{},"invalid":{},"unknown":{}}},{"k":"recreation","input":"enum","v":{"athletic field":{"ks":[{"k":"sport","input":"enum","v":{"baseball":{},"basketball":{},"cricket":{},"field hockey":{},"football":{},"hockey":{},"soccer":{},"tennis":{}}},{"k":"surface","input":"enum","v":{"grass":{},"asphalt":{},"concrete":{},"clay":{},"gravel":{},"sand":{},"dirt":{},"rubber":{},"artificial turf":{}}}]},"playground":{}}},{"desc":"This is a safety or emergency response service or object.","k":"safety","input":"enum","v":{"defibrillator":{},"emergency exit":{},"eyewash":{},"fire extinguisher":{},"fire hose":{},"fire pull":{},"first aid":{},"true":{"desc":"This is a generic safety object."}}},{"desc":"This is a service or amenity.","k":"service","input":"enum","v":{"atm":{"ks":[{"dep":true,"k":"currency","input":"enum","v":{"general":{},"yen":{},"dollar":{}}}]},"bike rack":{},"changing station":{},"flight monitor":{},"locker":{},"luggage cart":{},"mail":{},"massage chair":{},"paid parking":{},"power":{},"showers":{},"santa":{},"stroller":{},"telephone":{},"tv":{},"valet parking":{},"vending machine":{},"wifi":{},"true":{"desc":"This is a generic service"}}},{"k":"sign","input":"enum","v":{"stop sign":{},"yield sign":{},"true":{"desc":"This is a generic sign."}}},{"k":"signal","input":"enum","v":{"traffic light":{},"true":{"desc":"This is a generic signal."}}},{"desc":"This represents a building or other structure.","k":"structure","input":"enum","v":{"building":{"ks":[{"desc":"This is intended for unmapped buildings only, if the level count is available.","k":"levels","input":"text"}]},"parking structure":{"ks":[{"desc":"This is intended for unmapped buildings only, if the level count is available.","k":"levels","input":"text"}]},"subbuilding":{"desc":"This represents a part of a building which will be treated as an independent building."},"tent":{"desc":"This is intended for durable tents."},"true":{"desc":"This represents a generic structure."}}},{"k":"traffic","input":"enum","v":{"crosswalk":{},"parking lot":{},"parking spot":{"ks":[{"k":"disabled access","input":"boolean"}]},"railway":{},"railway rail":{},"railway tie":{},"road":{"ks":[{"k":"cat","input":"enum","v":{"access road":{},"alley":{},"municipal road":{},"parking access":{},"service road":{},"uncategorized":{}}},{"desc":"This is used for one way roads. The direction refers to the direction relative to the direction the road path is drawn. Applicable to line and linear area roads only.","k":"one way","input":"enum","v":{"fwd":{},"rev":{}}}]},"road intersection":{"desc":"This is used at in intersection when area roads are drawn."},"walkway":{"ks":[{"k":"covered","input":"boolean"}]},"walkway intersection":{"desc":"This is used at in intersection when area walkways are drawn.","ks":[{"k":"covered","input":"boolean"}]}}},{"k":"transit","input":"enum","v":{"bus":{},"ground transportation":{},"taxi":{},"train":{}}},{"k":"vegetation","input":"enum","v":{"earth":{},"garden":{},"grass":{},"greenery":{},"tree":{}}},{"k":"vehicle","input":"enum","v":{"airplane":{}}},{"k":"water","input":"enum","v":{"true":{}}}]},{"k":"name","input":"text","has_lang":true},{"k":"short name","input":"text","has_lang":true},{"k":"style keys","input":"named_group"},{"desc":"This is a textual description of the location, such as wold be given in a directory to help users find the object.","k":"location","input":"text","has_lang":true},{"desc":"This is used to give an additional information on an object, such as the type of object when it is not included in the classification.","k":"info","input":"text","has_lang":true}],"entity":[{"k":"name","input":"text","required":true,"has_lang":true},{"k":"short name","input":"text","has_lang":true},{"k":"entity1","input":"named_group"},{"k":"post address","input":"named_group"},{"k":"entity2","input":"named_group"},{"desc":"This field is used for storing geometry address information, before the geometry address is created. It should not be used for a descriptive location.","k":"location","input":"text"},{"k":"category","input":"text","is_array":true,"has_lang":true,"prop":{"detail":"true"}},{"k":"tags","input":"text","is_array":true,"has_lang":true,"prop":{"detail":"true"}},{"k":"style keys","input":"named_group"}],"chain":[{"k":"name","input":"text","required":true,"has_lang":true},{"k":"short name","input":"text","has_lang":true},{"k":"entity1","input":"named_group"}],"link":[{"k":"nav_class","input":"multikey","required":true,"prop":{"linkType":"class"},"ks":[{"k":"aisle","input":"enum","v":{"major":{},"minor":{}}},{"k":"corridor","input":"enum","v":{"major":{},"minor":{}}},{"k":"entry","input":"enum","v":{"doorway":{},"opening":{},"area":{}}},{"k":"level change","input":"enum","v":{"elevator":{},"escalator":{},"stairs":{},"ramp":{},"transition":{}}},{"k":"mechanical","input":"enum","v":{"moving walkway":{}}},{"k":"path","input":"enum","v":{"major":{},"minor":{}}},{"k":"traffic","input":"enum","v":{"parking lot":{},"shoulder":{},"street":{},"crosswalk":{}}},{"k":"walkway","input":"enum","v":{"major":{},"minor":{}}}]},{"k":"name","input":"text","has_lang":true,"prop":{"linkType":"class"}},{"k":"group","input":"text","prop":{"linkType":"class"}},{"k":"intersection","input":"boolean","prop":{"linkType":"class"}},{"k":"crossing","input":"boolean","prop":{"linkType":"class"}},{"k":"diversion","input":"boolean","prop":{"linkType":"class"}},{"k":"flag","input":"text","prop":{"linkType":"class"}},{"k":"start_to_image","input":"text","prop":{"linkType":"start","reverse":"end_to_image"}},{"k":"start_from_image","input":"text","prop":{"linkType":"start","reverse":"end_from_image"}},{"k":"end_to_image","input":"text","prop":{"linkType":"end","reverse":"start_to_image"}},{"k":"end_from_image","input":"text","prop":{"linkType":"end","reverse":"start_from_image"}},{"k":"start_to_desc","input":"text","prop":{"linkType":"start","reverse":"end_to_desc"}},{"k":"start_from_desc","input":"text","prop":{"linkType":"start","reverse":"end_from_desc"}},{"k":"end_to_desc","input":"text","prop":{"linkType":"end","reverse":"start_to_desc"}},{"k":"end_from_desc","input":"text","prop":{"linkType":"end","reverse":"start_from_desc"}}],"node":[{"k":"name","input":"text","has_lang":true},{"k":"intersection","input":"boolean"}]},"named_groups":{"post address":[{"k":"country","input":"enum","v":{"AD":{},"AE":{},"AF":{},"AG":{},"AI":{},"AL":{},"AM":{},"AN":{},"AO":{},"AQ":{},"AR":{},"AS":{},"AT":{},"AU":{"ks":[{"k":"main admin region","input":"fixed"},{"k":"territory","input":"enum","v":{"NSW":{},"QLD":{},"SA":{},"TAS":{},"VIC":{},"WA":{}}}]},"AW":{},"AX":{},"AZ":{},"BA":{},"BB":{},"BD":{},"BE":{},"BF":{},"BG":{},"BH":{},"BI":{},"BJ":{},"BM":{},"BN":{},"BO":{},"BR":{},"BS":{},"BT":{},"BV":{},"BW":{},"BY":{},"BZ":{},"CA":{"ks":[{"k":"main admin region","input":"fixed"},{"k":"province","input":"enum","v":{"AB":{},"BC":{},"MB":{},"NB":{},"NL":{},"NS":{},"ON":{},"PE":{},"QC":{},"SK":{}}}]},"CC":{},"CD":{},"CF":{},"CG":{},"CH":{},"CI":{},"CK":{},"CL":{},"CM":{},"CN":{},"CO":{},"CR":{},"CV":{},"CX":{},"CY":{},"CZ":{},"DE":{},"DJ":{},"DK":{},"DM":{},"DO":{},"DZ":{},"EC":{},"EE":{},"EG":{},"EH":{},"ER":{},"ES":{},"ET":{},"FI":{},"FJ":{},"FK":{},"FM":{},"FO":{},"FR":{},"GA":{},"GB":{},"GD":{},"GE":{},"GF":{},"GH":{},"GI":{},"GL":{},"GM":{},"GN":{},"GP":{},"GQ":{},"GR":{},"GT":{},"GU":{},"GW":{},"GY":{},"HK":{},"HM":{},"HN":{},"HR":{},"HT":{},"HU":{},"ID":{},"IE":{},"IL":{},"IN":{},"IO":{},"IQ":{},"IS":{},"IT":{},"JM":{},"JO":{},"JP":{"ks":[{"k":"main admin region","input":"fixed"},{"k":"prefecture","input":"enum","v":{"Aichi":{},"Akita":{},"Aomori":{},"Chiba":{},"Ehime":{},"Fukui":{},"Fukuoka":{},"Fukushima":{},"Gifu":{},"Gunma":{},"Hiroshima":{},"Hokkaido":{},"Hyōgo":{},"Ibaraki":{},"Ishikawa":{},"Iwate":{},"Kagawa":{},"Kagoshima":{},"Kanagawa":{},"Kōchi":{},"Kumamoto":{},"Kyoto":{},"Mie":{},"Miyagi":{},"Miyazaki":{},"Nagano":{},"Nagasaki":{},"Nara":{},"Niigata":{},"Ōita":{},"Okayama":{},"Okinawa":{},"Osaka":{},"Saga":{},"Saitama":{},"Shiga":{},"Shimane":{},"Shizuoka":{},"Tochigi":{},"Tokushima":{},"Tokyo":{},"Tottori":{},"Toyama":{},"Wakayama":{},"Yamagata":{},"Yamaguchi":{},"Yamanashi":{}}}]},"KE":{},"KG":{},"KH":{},"KI":{},"KM":{},"KN":{},"KR":{},"KW":{},"KY":{},"KZ":{},"LA":{},"LB":{},"LC":{},"LI":{},"LK":{},"LR":{},"LS":{},"LT":{},"LU":{},"LV":{},"LY":{},"MA":{},"MC":{},"MD":{},"MG":{},"MH":{},"MK":{},"ML":{},"MM":{},"MN":{},"MO":{},"MQ":{},"MR":{},"MS":{},"MT":{},"MU":{},"MV":{},"MW":{},"MX":{},"MY":{},"MZ":{},"NA":{},"NC":{},"NE":{},"NF":{},"NG":{},"NI":{},"NL":{},"NO":{},"NP":{},"NR":{},"NU":{},"NZ":{},"OM":{},"PA":{},"PE":{},"PF":{},"PG":{},"PH":{},"PK":{},"PL":{},"PM":{},"PN":{},"PR":{},"PS":{},"PT":{},"PW":{},"PY":{},"QA":{},"RE":{},"RO":{},"RU":{},"RW":{},"SA":{},"SB":{},"SC":{},"SE":{},"SG":{},"SH":{},"SI":{},"SJ":{},"SK":{},"SL":{},"SM":{},"SN":{},"SO":{},"SR":{},"ST":{},"SV":{},"SZ":{},"TC":{},"TD":{},"TF":{},"TG":{},"TH":{},"TJ":{},"TK":{},"TM":{},"TN":{},"TO":{},"TR":{},"TT":{},"TV":{},"TW":{},"TZ":{},"UA":{},"UG":{},"UM":{},"US":{"ks":[{"k":"main admin region","input":"fixed"},{"k":"state","input":"enum","v":{"AK":{},"AL":{},"AR":{},"AZ":{},"CA":{},"CO":{},"CT":{},"DC":{},"DE":{},"FL":{},"GA":{},"HI":{},"IA":{},"ID":{},"IL":{},"IN":{},"KS":{},"KY":{},"LA":{},"MA":{},"MD":{},"ME":{},"MI":{},"MN":{},"MO":{},"MS":{},"MT":{},"NC":{},"ND":{},"NE":{},"NH":{},"NJ":{},"NM":{},"NV":{},"NY":{},"OH":{},"OK":{},"OR":{},"PA":{},"RI":{},"SC":{},"SD":{},"TN":{},"TX":{},"UT":{},"VA":{},"VT":{},"WA":{},"WI":{},"WV":{},"WY":{}}}]},"UY":{},"UZ":{},"VC":{},"VE":{},"VG":{},"VI":{},"VN":{},"VU":{},"WF":{},"WS":{},"YE":{},"YT":{},"ZA":{},"ZM":{},"ZW":{}}},{"k":"main admin region","input":"multikey","ks":[{"k":"state","input":"text","has_lang":true},{"k":"province","input":"text","has_lang":true},{"k":"prefecture","input":"text","has_lang":true},{"k":"territory","input":"text","has_lang":true}]},{"k":"postal code","input":"text"},{"k":"city","input":"text","has_lang":true},{"k":"street address","input":"text","has_lang":true}],"names":[{"k":"name","input":"named_key"},{"k":"short name","input":"text","has_lang":true}],"entity1":[{"k":"phone","input":"text","prop":{"detail":"true"}},{"k":"email","input":"text","prop":{"detail":"true"}},{"k":"url","input":"text","prop":{"detail":"true"}},{"k":"fax","input":"text","prop":{"detail":"true"}},{"k":"description","input":"text","has_lang":true,"prop":{"detail":"true"}},{"k":"naics","input":"text","is_array":true,"prop":{"detail":"true"}}],"entity2":[{"k":"hours","input":"text","has_lang":true,"prop":{"detail":"true"}},{"k":"storeid","input":"text"},{"k":"prop_owner","input":"text"},{"k":"product","input":"text","has_lang":true,"prop":{"detail":"true"}}],"style keys":[{"k":"$icon","input":"text","has_lang":false},{"k":"$style","input":"text","has_lang":false},{"k":"$image_url","input":"text","has_lang":false},{"k":"$label_text","input":"text","has_lang":false},{"k":"$body_color","input":"text","has_lang":false},{"k":"$outline_color","input":"text","has_lang":false},{"k":"$outline_width","input":"text","has_lang":false},{"k":"$text_color","input":"text","has_lang":false}],"external_ref_object":[{"k":"ref","input":"text","has_lang":false},{"k":"xscale","input":"text","has_lang":false},{"k":"yscale","input":"text","has_lang":false},{"k":"units","input":"enum","v":{"m":{},"km":{},"cm":{},"ft":{},"yd":{},"in":{},"mile":{}}},{"k":"publish","input":"boolean"}]},"named_keys":{"address keys":{"k":"address keys","input":"enum","v":{"$id":{},"Booth":{},"Gate":{},"Meeting Room":{},"Unit":{},"#":{},"Section":{},"Space":{},"Region":{},"Zone":{},"Area":{},"Field":{},"Level":{},"Stair":{},"Escalator":{},"Elevator":{},"Door":{},"Ramp":{},"Cubicle":{},"Office":{},"Bathroom":{},"Entrance":{},"Store":{},"Apartment":{},"Apt":{},"Room":{},"Rm":{},"Suite":{},"Terminal":{},"Concourse":{},"Hanger":{},"Hall":{},"Aisle":{},"Shelf":{},"Bin":{},"Department":{},"Rack":{},"End Cap":{},"Display":{},"Row":{},"Box":{},"Seat":{},"Concession":{},"Locker":{},"Desk":{},"Chair":{},"Street":{},"Road":{},"Zip Code":{},"City":{},"Neighborhood":{},"Address":{},"Address 2":{},"State":{},"Country":{},"Exhibit":{},"Painting":{},"Sculpture":{},"Lane":{},"Exit":{},"Intersection":{},"Lot":{},"Mall":{},"Building":{},"Moving Walkway":{}}},"lang":{"k":"lang","input":"enum","v":{"en":{},"ja":{},"zh":{},"de":{},"fr":{},"es":{},"it":{},"ar":{},"da":{},"he":{},"hi":{},"id":{},"ko":{},"nl":{},"pt":{},"ro":{},"sv":{},"ru":{},"tr":{},"gu":{},"pl":{},"cs":{},"sk":{},"th":{}}}}},"description":""}},"abreviatedPresets":{"name":"abreviatedPresets","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nfor(var sectionName in presets) {\n    var section = presets[sectionName];\n    var outputSection = {}\n    output[sectionName] = outputSection;\n\n    for(var treeName in section) {\n        \n        \n        var tree = section[treeName];\n        if(apogee.util.getObjectType(tree) == \"Array\") {\n            outputTree = {};\n            outputSection[treeName] = outputTree;\n            for(var i = 0; i < tree.length; i++) {\n                var treeEntry = tree[i];\n                outputTree[treeEntry.k] = treeEntry.input;\n            }\n        }\n        else {\n            //in this case it is not a tree, just a key...\n            outputSection[treeName] = tree.input;\n        }\n    }\n}\n    \nreturn output;","supplementalCode":"","description":""}},"manualAbreviatedPresets":{"name":"manualAbreviatedPresets","type":"apogee.JsonTable","updateData":{"data":{"objects":{"community_map":{"com_type":"enum","default_lang":"named_key","names":"named_group","post address":"named_group"},"community_entity":{"alt_name":"text","names":"named_group","entity1":"named_group","entity2":"named_group"},"drawing":{"map_type":"enum","names":"named_group"},"level":{"type":"enum","elev_m":"text","elev_rel_m":"text","names":"named_group"},"geometry":{"geom_type":"multikey","location":"text","info":"text","names":"named_group","style keys":"named_group"},"entity":{"location":"text","category":"text","tags":"text","names":"named_group","entity1":"named_group","post address":"named_group","entity2":"named_group","style keys":"named_group"},"chain":{"names":"named_group","entity1":"named_group"},"link":{"nav_class":"multikey","group":"text","intersection":"boolean","crossing":"boolean","diversion":"boolean","flag":"text","start_to_image":"text","start_from_image":"text","end_to_image":"text","end_from_image":"text","start_to_desc":"text","start_from_desc":"text","end_to_desc":"text","end_from_desc":"text","names":"named_group"},"node":{"intersection":"boolean","names":"named_group"}},"named_groups":{"post address":{"country":"enum","main admin region":"multikey","postal code":"text","city":"text","street address":"text"},"names":{"name":"named_key","short name":"text"},"entity1":{"phone":"text","email":"text","url":"text","fax":"text","description":"text","naics":"text"},"entity2":{"hours":"text","storeid":"text","prop_owner":"text","product":"text"},"style keys":{"$icon":"text","$style":"text","$image_url":"text","$label_text":"text","$body_color":"text","$outline_color":"text","$outline_width":"text","$text_color":"text"},"external_ref_object":{"ref":"text","xscale":"text","yscale":"text","units":"enum","publish":"boolean"}},"named_keys":{"address keys":"enum","lang":"enum"}},"description":""}},"geomAnalysis":{"name":"geomAnalysis","type":"apogee.Folder","children":{"geometryTypes":{"name":"geometryTypes","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return presets.property_trees.geometry[0];","supplementalCode":"","description":""}},"featureTypes":{"name":"featureTypes","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"var output = {};\n\nvar keys = geometryTypes.ks;\nfor(var i = 0; i < keys.length; i++) {\n    var keyEntry = keys[i];\n    \n    var key = keyEntry.k;\n    \n    //check if this is a type key\n    var keyAsType = keyTypesMap[key];\n    if(keyAsType !== true) {\n        var keysAsClass = keyClassMap[key];\n        if(keysAsClass !== true) {\n            throw new Error(\"Missing key from types or classes: \" + key);\n        }\n    }\n    var addedKeyType = false;\n    \n    var keyValues = keyEntry.v;\n    for(var valueName in keyValues) {\n        \n        //check if we should delete this type\n        var keyValueName = key + \":\" + valueName;\n        if(typesToDeleteMap[keyValueName]) {\n            console.log(\"type removed: \" + keyValueName);\n            continue;\n        }\n        \n        //process the value entry\n        var valueEntry = keyValues[valueName];\n        var featureName = valueName;\n        \n        //special processin for the \"true\" entries\n        //keep these only if there are a key as a type.\n        if(valueName == \"true\") {\n            if(keyAsType) {\n                featureName = key;\n                addedKeyType = true;\n            }\n            else {\n                console.log(\"type removed: \" + keyValueName);\n                continue;\n            }\n        }\n        \n        //check for repeats!\n        var existingEntry = output[featureName];\n        if(existingEntry) {\n            console.log(\"Repeat entry: \" + featureName);\n            \n            var newFeatureName = featureName + \"-\" + key;\n            \n            //replace the old object\n            var otherFeatureName = featureName + \"-\" + existingEntry.legacyKey;\n            //this is an embergency check - hopefully it won't happen\n            if(output[replacedName]) throw new Error(\"Non unique name: \" + replacedName);\n            \n            output[otherFeatureName] = existingEntry;\n            delete output[featureName];\n            \n            featureName = newFeatureName;\n        }\n        \n        var dataEntry = apogee.util.deepJsonCopy(valueEntry);\n        dataEntry.legacyKey = key;\n        if(keysAsType === true) {\n            dataEntry.parent = key\n        }\n        output[featureName] = dataEntry;\n    }\n    \n    if((keyAsType)&&(!addedKeyType)) {\n        throw new Error(\"Key type not added: \" + key);\n    }\n}\n\nreturn output;","supplementalCode":"","description":""}},"notes":{"name":"notes","type":"apogee.JsonTable","updateData":{"data":"Key Notes\n- barrier - does not have a generic type (barrier:true)\n- facility - has included generic types area/detail/element\n- marker - includes physical and non-physical. Maybe we should separate?\n- meta - figure out what to do with this\n- safety - has a \"true\", but it should probably be renamed \n- service - has a true, but this is not too descriptive.\n- transit - is a class, but also stands for transit stop, I guess.\n- vegetation - has not true, but could (or maybe put it as a non type?)\n- vehicle - is a type, but we can get rid of it and put airplane under object.\n\nOther Notes\n- I need to has add some parents - like room for bathroom.\n- I should add some other tyeps, like \"space\"\n- I might need to do something for those deleted types.\n","description":""}},"arrayToMap":{"name":"arrayToMap","type":"apogee.FunctionTable","updateData":{"argList":["array"],"functionBody":"var output = {};\nfor(var i = 0; i < array.length; i++) {\n    output[array[i]] = true;\n}\nreturn output;","supplementalCode":"","description":""}},"keyTypesArray":{"name":"keyTypesArray","type":"apogee.JsonTable","updateData":{"data":["area","equipment","fixture","furnishing","marker","object","service","sign","signal","structure","","water"],"description":""}},"keyTypesMap":{"name":"keyTypesMap","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return arrayToMap(keyTypesArray);","supplementalCode":"","description":""}},"typesToDeleteArray":{"name":"typesToDeleteArray","type":"apogee.JsonTable","updateData":{"data":["facility:area","facility:detail","facility:element"],"description":""}},"typesToDeleteMap":{"name":"typesToDeleteMap","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return arrayToMap(typesToDeleteArray);","supplementalCode":"","description":""}},"keyClassMap":{"name":"keyClassMap","type":"apogee.JsonTable","updateData":{"argList":[],"functionBody":"return arrayToMap(keyClassArray);","supplementalCode":"","description":""}},"keyClassArray":{"name":"keyClassArray","type":"apogee.JsonTable","updateData":{"data":["facility","meta","recreation","safety","traffic","transit","vehicle","barrier","vegetation"],"description":""}},"consoleOutput":{"name":"consoleOutput","type":"apogee.JsonTable","updateData":{"data":"type removed: facility:element\ntype removed: facility:area\ntype removed: facility:detail\nRepeat entry: ramp\nRepeat entry: bin\nRepeat entry: shelf\ntype removed: safety:true","description":""}}}}}}},"components":{"presets":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":652,"height":784},"posInfo":{"x":0,"y":165},"state":0,"viewType":"JSON"}},"abreviatedPresets":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":560,"height":858},"posInfo":{"x":589,"y":144},"state":0,"viewType":"JSON"}},"manualAbreviatedPresets":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":700,"height":845},"posInfo":{"x":724,"y":8},"state":0,"viewType":"JSON"}},"geomAnalysis":{"type":"apogeeapp.app.FolderComponent","windowState":{"posInfo":{"x":375,"y":375}},"children":{"geometryTypes":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":780,"height":680},"posInfo":{"x":479,"y":36},"state":0,"viewType":"JSON"}},"featureTypes":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":797,"height":708},"posInfo":{"x":481,"y":68},"state":0,"viewType":"Formula"}},"notes":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":564,"height":300},"posInfo":{"x":642,"y":352},"state":0,"viewType":"Text"}},"arrayToMap":{"type":"apogeeapp.app.FunctionComponent","windowState":{"sizeInfo":{"width":543,"height":497},"posInfo":{"x":429,"y":820},"state":-1,"viewType":"Code"}},"keyTypesArray":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":261,"height":405},"posInfo":{"x":32,"y":283},"state":0,"viewType":"Form"}},"keyTypesMap":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":211,"y":346},"state":-1,"viewType":"Text"}},"typesToDeleteArray":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":316,"height":199},"posInfo":{"x":30,"y":691},"state":0,"viewType":"Form"}},"typesToDeleteMap":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":196,"y":763},"state":-1,"viewType":"Text"}},"keyClassMap":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":300,"height":300},"posInfo":{"x":208,"y":91},"state":-1,"viewType":"Text"}},"keyClassArray":{"type":"apogeeapp.app.JsonTableComponent","windowState":{"sizeInfo":{"width":233,"height":268},"posInfo":{"x":31,"y":28},"state":0,"viewType":"Form"}},"consoleOutput":{"type":"apogeeapp.app.TextComponent","windowState":{"sizeInfo":{"width":369,"height":180},"posInfo":{"x":85,"y":412},"state":0,"viewType":"Text"}}}}}}