{"name":"test","fileType":"hax workspace","jsLinks":[],"cssLinks":[],"workspace":{"name":"test","fileType":"hax workspace","version":0.2,"data":{"name":"test","type":"hax.Folder","children":{"customerGrants":{"name":"customerGrants","type":"hax.JsonTable","updateData":{"data":[["Account","Micello Key","Project","Product Type","Product SKU","Community ID"],[null,null,null,null,null,null]]}},"grantByCustomer":{"name":"grantByCustomer","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = {};\n\nvar entry;\n\nentry = customerGrants[0];\nif(entry[ACCOUNT_INDEX] !== \"Account\") {\n    throw new Error(\"Header row missing!\");\n}\nif(entry[PRODUCT_INDEX] !== \"Product Type\") {\n    throw new Error(\"Header row missing!\");\n}\nif(entry[CID_INDEX] !== \"Community ID\") {\n    throw new Error(\"Header row missing!\");\n}\n\nfor(var i = 1; i < customerGrants.length; i++) {\n    var entry = customerGrants[i];\n    var customer = entry[0];\n    \n    if(isExcluded(customer)) {\n        continue;\n    }\n    \n    var customerEntry = value[customer];\n    if(!customerEntry) {\n        customerEntry = [];\n        value[customer] = customerEntry;\n    }\n    customerEntry.push(entry);\n}\nreturn value;\n\n","supplementalCode":"function isExcluded(customer) {\n    return (exclusionAccounts.indexOf(customer) >= 0);\n}"}},"exclusionAccounts":{"name":"exclusionAccounts","type":"hax.JsonTable","updateData":{"data":["Micello Inc Primary","Micello Customer"]}},"customerAccounts":{"name":"customerAccounts","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = [];\nfor(var key in grantByCustomer) {\n    value.push(key);\n}\nreturn value;\n\n","supplementalCode":""}},"activeCommunities":{"name":"activeCommunities","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvar cidList = [];\n\nvar cidMap = {};\nfor(var customerKey in grantByCustomer) {\n    var grantList = grantByCustomer[customerKey];\n    for(var i = 0; i < grantList.length; i++) {\n        var grantEntry = grantList[i];\n        var cid = grantEntry[CID_INDEX];\n        cidMap[cid] = true;\n    }\n}\n\n//add cids to array\nfor(var cidKey in cidMap) {\n    cidList.push(Number(cidKey));\n}\n\n//sort low to high\nvar numericSortFunction = function(a,b) {\n    return a-b;\n}\ncidList.sort(numericSortFunction);\n\nvalue = cidList;\nreturn value;\n\n","supplementalCode":""}},"CID_INDEX":{"name":"CID_INDEX","type":"hax.JsonTable","updateData":{"data":5}},"PRODUCT_INDEX":{"name":"PRODUCT_INDEX","type":"hax.JsonTable","updateData":{"data":3}},"ACCOUNT_INDEX":{"name":"ACCOUNT_INDEX","type":"hax.JsonTable","updateData":{"data":0}},"customerProducts":{"name":"customerProducts","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = {};\nfor(var key in grantByCustomer) {\n    var entry = grantByCustomer[key];\n    value[key] = getCidEntry(entry);\n}\nreturn value;\n\n","supplementalCode":"function getCidEntry(grantList) {\n    //create a temp structure of cid/prudcts for this customer\n    var map = {};\n    var cidEntry;\n    for(var i = 0; i < grantList.length; i++) {\n        var grantRow = grantList[i];\n        var cid = grantRow[CID_INDEX];\n        var product = grantRow[PRODUCT_INDEX];\n        \n        cidEntry = map[cid];\n        if(cidEntry === undefined) {\n            cidEntry = {};\n            map[cid] = cidEntry;\n        }\n        \n        cidEntry[product] = true;\n    }\n    \n    //convert to a map from cids to list of products\n    resultEntry = {};\n    for(var ckey in map) {\n        cidEntry = map[ckey];\n        var productList = [];\n        for(pkey in cidEntry) {\n            productList.push(pkey);\n        }\n        resultEntry[ckey] = productList;\n    }\n    \n    return resultEntry;\n}"}},"lookupFolder":{"name":"lookupFolder","type":"hax.Folder","children":{"customerName":{"name":"customerName","type":"hax.JsonTable","updateData":{"data":"Indoo.rs"}},"customerProductGrid":{"name":"customerProductGrid","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = [];\n\n//header row\nvar header = [];\nvalue.push(header);\n\n//header row must be as long as longest row\nvar maxRowLength = 0;\nvar customerEntry = customerProducts[customerName];\nfor(var cid in customerEntry) {\n    var row = [];\n    row.push(cid);\n    row = row.concat(customerEntry[cid]);\n    value.push(row);\n    if(row.length > maxRowLength) {\n        maxRowLength= row.length;\n    }\n}\n\n//fill header row\nheader.length = maxRowLength;\nheader.fill(\"Product\");\nheader[0] = \"CID\";\nreturn value;\n\n","supplementalCode":""}}}},"queryFolder":{"name":"queryFolder","type":"hax.Folder","children":{"updateCutoffDate":{"name":"updateCutoffDate","type":"hax.JsonTable","updateData":{"data":"2016-07-05"}},"getQuery":{"name":"getQuery","type":"hax.FunctionTable","updateData":{"argList":["productPrefix"],"functionBody":"var string1 = \"select release_name, from_unixtime(max(commit.timestamp)/1000) as latest_update, max(commit.timestamp)/1000 < unix_timestamp('\";\nvar string2 = updateCutoffDate;\nvar string3 = \"') as needs_update from commit_release join commit on commit_release.commit_id = commit.commit_id where commit_release.release_name in (\";\nvar string4 = getReleaseList(productPrefix,activeCommunities);\nvar string5 = \") group by release_name order by needs_update desc, release_name\";\n\nreturn string1 + string2 + string3 + string4 + string5;","supplementalCode":"function getReleaseList(productPrefix,activeCommunities) {\n    var text = \"\";\n    for(var i = 0; i < activeCommunities.length; i++) {\n        if(i > 0) text += \",\";\n        text += getEntry(productPrefix,activeCommunities[i]);\n    }\n    return text;\n}\n\nfunction getEntry(prefix,cid) {\n    return \"'\" + prefix + cid + \"'\";\n}"}},"micemapsQuery":{"name":"micemapsQuery","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = getQuery(\"community_map|\")\nreturn value;\n\n","supplementalCode":""}},"micentityQuery":{"name":"micentityQuery","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = getQuery(\"community_entity_active|\");\nreturn value;\n\n","supplementalCode":""}}}},"cidList":{"name":"cidList","type":"hax.JsonTable","updateData":{"data":[78,6418,9662,23903,20544,15]}},"cidLookupResult":{"name":"cidLookupResult","type":"hax.JsonTable","updateData":{"argList":[],"functionBody":"var value;\nvalue = {};\n\nentry = customerGrants[0];\nif(entry[ACCOUNT_INDEX] !== \"Account\") {\n    throw new Error(\"Header row missing!\");\n}\nif(entry[PRODUCT_INDEX] !== \"Product Type\") {\n    throw new Error(\"Header row missing!\");\n}\nif(entry[CID_INDEX] !== \"Community ID\") {\n    throw new Error(\"Header row missing!\");\n}\n\nfor(var c=0; c<cidList.length; c++) {\n    var cid = cidList[c];\n    var cidEntry =[];\n    for (var i = 1; i < customerGrants.length; i++) {\n        var entry = customerGrants[i];\n        var customer = entry[ACCOUNT_INDEX];\n        \n        if(accountExcluded(customer)) {\n            continue;\n        }\n        \n        if(cid == entry[CID_INDEX]) {\n            if(cidEntry.indexOf(customer) < 0) {\n                // console.log(value);\n                cidEntry.push(customer);\n            }\n        }\n    }\n    if(!value[cid]) value[cid] = [];\n    value[cid].push(cidEntry);\n\n}\nreturn value;\n\n","supplementalCode":""}},"accountExcluded":{"name":"accountExcluded","type":"hax.FunctionTable","updateData":{"argList":["account"],"functionBody":"for(var i=0; i<exclusionAccounts.length; i++) {\n    if(exclusionAccounts[i] == account) {\n        return true;\n    }\n}","supplementalCode":""}}}}},"components":{"customerGrants":{"key":"test:customerGrants","type":"haxapp.app.GridTableComponent","coordInfo":{"x":32,"y":276,"width":618,"height":514},"windowState":0},"grantByCustomer":{"key":"test:grantByCustomer","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":693,"y":217,"width":645,"height":357},"windowState":-1},"exclusionAccounts":{"key":"test:exclusionAccounts","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":38,"y":13,"height":249},"windowState":0},"customerAccounts":{"key":"test:customerAccounts","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":698,"y":454,"height":513},"windowState":0},"activeCommunities":{"key":"test:activeCommunities","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":678,"y":59,"width":284,"height":605},"windowState":-1},"CID_INDEX":{"key":"test:CID_INDEX","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":350,"y":180,"width":216,"height":80},"windowState":0},"PRODUCT_INDEX":{"key":"test:PRODUCT_INDEX","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":351,"y":96,"height":72,"width":254},"windowState":0},"ACCOUNT_INDEX":{"key":"test:ACCOUNT_INDEX","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":351,"y":13,"width":260,"height":73},"windowState":0},"customerProducts":{"key":"test:customerProducts","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":687,"y":162,"width":595,"height":832},"windowState":-1},"lookupFolder":{"key":"test:lookupFolder","type":"haxapp.app.FolderComponent","coordInfo":{"x":681,"y":8,"width":560,"height":245},"windowState":-1,"children":{"customerName":{"key":"test:lookupFolder.customerName","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":27,"y":11,"width":319,"height":130},"windowState":0},"customerProductGrid":{"key":"test:lookupFolder.customerProductGrid","type":"haxapp.app.GridTableComponent","coordInfo":{"x":31,"y":163,"width":903},"windowState":0}}},"queryFolder":{"key":"test:queryFolder","type":"haxapp.app.FolderComponent","coordInfo":{"x":685,"y":111,"width":704,"height":339},"windowState":-1,"children":{"updateCutoffDate":{"key":"test:queryFolder.updateCutoffDate","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":21,"y":20,"width":205,"height":83},"windowState":0},"getQuery":{"key":"test:queryFolder.getQuery","type":"haxapp.app.FunctionComponent","coordInfo":{"x":283,"y":23,"width":677},"windowState":-1},"micemapsQuery":{"key":"test:queryFolder.micemapsQuery","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":23,"y":155,"width":313,"height":102},"windowState":0},"micentityQuery":{"key":"test:queryFolder.micentityQuery","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":353,"y":156,"width":296,"height":101},"windowState":0}}},"cidList":{"key":"test:cidList","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":995,"y":6,"height":166},"windowState":0},"cidLookupResult":{"key":"test:cidLookupResult","type":"haxapp.app.JsonTableComponent","coordInfo":{"x":1310,"y":4,"height":791,"width":525},"windowState":0},"accountExcluded":{"key":"test:accountExcluded","type":"haxapp.app.FunctionComponent","coordInfo":{"x":1000,"y":198,"width":303,"height":129},"windowState":0}}}
