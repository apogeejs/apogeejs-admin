{"name":"CloudTest","fileType":"hax workspace","jsLinks":["https://apis.google.com/js/client.js"],"cssLinks":[],"workspace":{"name":"CloudTest","fileType":"hax workspace","version":0.1,"data":{"name":"CloudTest","type":"hax.core.Folder","children":{"Load":{"name":"Load","type":"hax.core.Control","updateData":{"argList":["resource"],"functionBody":"resource.setCallbacks(onDownloadPress,onUploadPress);","supplementalCode":"\r\nvar client = null;\r\nvar doAfterClientLoad = null;\r\n\r\nfunction onDownloadPress() {\r\n    if(client === null) {\r\n        doAfterClientLoad = doDownload;\r\n        loadClient();\r\n    }\r\n    else {\r\n        client.then(doDownload);\r\n    }\r\n}\r\n\r\nfunction onUploadPress() {\r\n    if(client === null) {\r\n        doAfterClientLoad = doUpload;\r\n        loadClient();\r\n    }\r\n    else {\r\n        client.then(doUpload);\r\n    }\r\n}\r\n\r\n// Your Client ID can be retrieved from your project in the Google\r\n// Developer Console, https://console.developers.google.com\r\nvar CLIENT_ID = '105795106133-2s6hcm7d2hoombjmkjgo4a86bi2gsnj9.apps.googleusercontent.com';\r\n\r\nvar SCOPES = [\"https://www.googleapis.com/auth/spreadsheets\"];\r\n\r\nfunction loadClient() {\r\n    checkAuth();\r\n}\r\n\r\n/**\r\n * Check if current user has authorized this application.\r\n */\r\nfunction checkAuth() {\r\n    gapi.auth.authorize(\r\n            {\r\n                \"client_id\": CLIENT_ID,\r\n                \"scope\": SCOPES.join(' '),\r\n                \"immediate\": true\r\n            },\r\n            handleAuthResult);\r\n}\r\n\r\n/**\r\n * Handle response from authorization server.\r\n *\r\n * @param {Object} authResult Authorization result.\r\n */\r\nfunction handleAuthResult(authResult) {\r\n    if (authResult && !authResult.error) {\r\n        loadSheetsApi();\r\n    } else {\r\n        getAuth();\r\n    }\r\n}\r\n\r\n/**\r\n * Initiate auth flow in response to user clicking authorize button.\r\n *\r\n * @param {Event} event Button click event.\r\n */\r\nfunction getAuth(event) {\r\n    gapi.auth.authorize(\r\n            {\"client_id\": CLIENT_ID, \"scope\": SCOPES, \"immediate\": false},\r\n            handleAuthResult);\r\n    return false;\r\n}\r\n\r\n/**\r\n * Load Sheets API client library.\r\n */\r\nfunction loadSheetsApi(afterLoad) {\r\n    var discoveryUrl =\r\n            'https://sheets.googleapis.com/$discovery/rest?version=v4';\r\n    client = gapi.client.load(discoveryUrl);\r\n    if(doAfterClientLoad) {\r\n        client.then(doAfterClientLoad);\r\n    }\r\n    doAfterClientLoad = null;\r\n}\r\n\r\nfunction doDownload() {\r\n    var loadData = gapi.client.sheets.spreadsheets.values.get({\r\n        \"spreadsheetId\": '1xM9hFvTs69baR6v9jI3eMa2SLuDBTFkNRIEdUJh58xY',\r\n        \"range\": 'Sheet1!A1:G',\r\n    });\r\n    loadData.then(downloadResult,errorResult);\r\n}\r\n\r\nfunction doUpload() {\r\n    var uploadData = {};\r\n    uploadData.spreadsheetId = '1xM9hFvTs69baR6v9jI3eMa2SLuDBTFkNRIEdUJh58xY';\r\n    uploadData.valueInputOption=\"USER_ENTERED\";\r\n    uploadData.range = 'Sheet1!A1:G';\r\n    uploadData.values = grid;\r\n    var loadData = gapi.client.sheets.spreadsheets.values.update(uploadData);\r\n    loadData.then(uploadResult,errorResult);\r\n}\r\n\r\n\r\n\r\nfunction downloadResult(response) {\r\n    var range = response.result;\r\n    if (range.values.length > 0) {\r\n        setTableData(range.values);\r\n    } else {\r\n        alert('No data found.');\r\n    }\r\n}\r\n\r\nfunction uploadResult(response) {\r\n    alert(JSON.stringify(response));\r\n}\r\n\r\nfunction errorResult(response) {\r\n    alert('Error: ' + response.result.error.message);\r\n}\r\n\r\nfunction setTableData(data) {\r\n    var workspace = app.getWorkspace(\"CloudTest\");\r\n    var rootFolder = workspace.getRoot();\r\n    var gridTable = rootFolder.lookupChildFromPath([\"grid\"]);\r\n    if(gridTable) {\r\n        var actionResponse = hax.core.updatemember.updateData(gridTable,data);\r\n        if(actionResponse.getSuccess()) {\r\n            //alert(\"Data loaded!\");\r\n        }\r\n        else {\r\n            alert(actionResponse.getErrorMsg());\r\n        }\r\n    }\r\n    \r\n}"}},"grid":{"name":"grid","type":"hax.core.JsonTable","updateData":{"data":[["ICON","GEOM TYPE","COUNT","","NEW GEOM TYPE","MATCH","CORRECT OLD TAG"]]}}}}},"components":{"Load":{"key":"CloudTest:Load","type":"hax.app.visiui.CustomControlComponent","coordInfo":{"x":51,"y":110,"width":213,"height":105},"windowState":0,"resource":{"html":"","customizeScript":"var resource = {};\r\n\r\nresource.setComponent = function(component) {\r\n    var loadButton = document.createElement(\"input\");\r\n    loadButton.setAttribute(\"type\",\"button\");\r\n    loadButton.value = \"Download\";\r\n    loadButton.onclick = function() {\r\n        if(resource.onDownload) {\r\n            resource.onDownload();\r\n        }\r\n    }\r\n    \r\n    var saveButton = document.createElement(\"input\");\r\n    saveButton.setAttribute(\"type\",\"button\");\r\n    saveButton.value = \"Upload\";\r\n    saveButton.onclick = function() {\r\n        if(resource.onUpload) {\r\n            resource.onUpload();\r\n        }\r\n    }\r\n    \r\n    var container = component.getOutputElement();\r\n    container.innerHTML = \"\";\r\n    container.appendChild(loadButton);\r\n    container.appendChild(saveButton);\r\n}\r\n\r\nresource.setCallbacks = function(onDownload,onUpload) {\r\n    resource.onDownload = onDownload;\r\n    resource.onUpload = onUpload;\r\n}\r\n\r\nreturn resource;\r\n","supplementalCode":"","css":""}},"grid":{"key":"CloudTest:grid","type":"hax.app.visiui.GridTableComponent","coordInfo":{"x":287,"y":20,"width":805,"height":637},"windowState":0}}}