{"fileType":"apogee app js workspace","version":"0.60","references":{"viewState":{"treeState":1,"lists":{"es module":{"treeState":0},"js link":{"treeState":0},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":0.3,"name":"FormsCreator","children":{"main":{"name":"main","type":"apogee.Folder","children":{"formElements":{"name":"formElements","type":"apogee.Folder","children":{"checkbox":{"name":"checkbox","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"checkbox\", //REQUIRED\n        label: \"My Checkbox: \", //OPTIONAL\n        hint: \"This is a checkbox\", //OPTIONAL\n        help: \"The value of the checkbox is true if checked and false if not checked.\", //OPTIONAL\n        value: true, //OPTIONAL, defaults to false\n        key: \"myCheckbox\" //REQUIRED\n    }  \n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"myCheckbox":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"outputForm":{"name":"outputForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"if(creator.data) {\n    let layout = getElementLayout(creator.data);\n    return [layout];\n}\nelse {\n    return [];\n}\n","supplementalCode":""}},"creator":{"name":"creator","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return getMakerLayout(formInfo);","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"type":"checkbox","label":"My Checkbox","value":true,"key":"myCheckbox","hint":"boolean, of course","help":"This is a sample checkbox","useSelector":"none"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"checkbox","label":"Checkbox","makerFlags":["hasLabel","valueBoolean","hasKey","hasHint","hasHelp","hasSelector"]}}}}},"panel":{"name":"panel","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Parent Form\"\n    },\n    {\n        type: \"panel\", //REQUIRED\n        formData: [ //REQUIRED\n            {\n                type: \"heading\",\n                level: 2,\n                text: \"This is a Form inside a Form.\"\n            },\n            {\n                type: \"textField\",\n                label: \"Name: \",\n                key: \"name\"\n            },\n            {\n                type: \"checkbox\",\n                label: \"Hungry: \",\n                key: \"hungry\" //its almost lunch time\n            } \n        ],\n        key: \"myPanel\" //REQUIRED\n        \n        //NOTE - the following standard elements are not available here\n        //hint: \"This is a panel\", //NOT AVAILABLE!\n        //help: \"The value of the panel...\", //NOT AVAILABLE\n    },\n    {\n        type: \"checkbox\",\n        label: \"Gratuitious element: \",\n        key: \"gratuitous\"\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"myPanel":{"name":"Dave","hungry":true},"gratuitous":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"panel","label":"Panel","makerFlags":["hasChildren","hasKey"]}}},"topLevelFormInfo":{"name":"topLevelFormInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"panel","label":"Configurable Form","makerFlags":["hasChildren"]}}}}},"list":{"name":"list","type":"apogee.Folder","children":{"multiElementList":{"name":"multiElementList","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Stuff I Have\"\n    },\n    {\n        type: \"list\", //REQUIRED\n        label: \"Stuff: \", //OPTIONAL\n        entryTypes: [ //REQUIRED. Notice how this is \"entryTypes\" instead of \"entryType\" as in the single element list. Here we inlcude one or more elements that can be added to the list.\n            {\n                label: \"Car\", //OPTIONAL (but highly recommended), this is the text that goes on the \"add\" button!\n                layout: { //REQUIRED\n                    type: \"panel\",\n                    formData: [ \n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Make: \",\n                            entries: [\"Honda\",\"BMW\",\"Other\"],\n                            key: \"make\"\n                        },\n                        {\n                            type: \"textField\",\n                            label: \"Model: \",\n                            key: \"model\"\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Year: \",\n                            entries: [2015,1997,\"Other\"],\n                            key: \"year\"\n                        }\n                    ],\n                    key: \"carEntry\" //REQUIRED - this is used to identify the object type\n                }\n            },\n            {\n                label: \"Pet\",\n                layout: {\n                    type: \"panel\",\n                    formData: [\n                        {\n                            type: \"textField\",\n                            label: \"Name: \",\n                            key: \"name\",\n                        },\n                        {\n                            type: \"radioButtonGroup\",\n                            label: \"Type: \",\n                            entries: [\"Dog\",\"Cat\",\"Emu\"],\n                            key: \"type\"\n                        }\n                    ],\n                    key: \"petEntry\"\n                }\n            }\n        ],\n        key: \"stuff\", //REQUIRED\n\n        //NOTE - the following standard elements are not available here\n        //hint: \"This is a panel\", //NOT AVAILABLE!\n        //help: \"The value of the panel...\", //NOT AVAILABLE\n    },\n    {\n        type: \"checkbox\",\n        label: \"Gratuitious element: \",\n        key: \"gratuitous\"\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"stuff":[{"key":"carEntry","value":{"make":"Other","model":"CX-5","year":"Other"}},{"key":"petEntry","value":{"name":"Fido","type":"Dog"}},{"key":"petEntry","value":{"name":"George","type":"Emu"}}],"gratuitous":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"singleElementList":{"name":"singleElementList","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Parent Form\"\n    },\n    {\n        type: \"list\", //REQUIRED\n        label: \"Names: \", //OPTIONAL\n        entryType: { //REQUIRED\n            label: \"Name\", //OPTIONAL this is the text that goes on the \"add\" button!\n            layout: { //REQUIRED this is the layout of each element in the list. It must be a single element. It often will be a \"panel\" to allow multiple child elements\n                type: \"textField\",\n                key: \"nameEntry\" //This top level key is not actually used on the single-element list type, but it is on the mutli-element list type.\n            }\n        },\n        key: \"names\", //REQUIRED\n\n        //NOTE - the following standard elements are not available here\n        //hint: \"This is a panel\", //NOT AVAILABLE!\n        //help: \"The value of the panel...\", //NOT AVAILABLE\n    },\n    {\n        type: \"checkbox\",\n        label: \"Gratuitious element: \",\n        key: \"gratuitous\"\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"names":["John","Jacob","Jingleheimer","Smith"],"gratuitous":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"test":{"name":"test","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Test\"\n    },\n    {\n        type: \"list\",\n        label: \"Test List: \",\n        entryTypes: [\n            {\n                label: \"Dummy Entry\",\n                layout: {\n                    type: \"textField\",\n                    key: \"dummy\"\n                }\n            }\n        ],\n        key: \"entryTypes\"\n    },\n    {\n        type: \"radioButtonGroup\",\n        label: \"List Type: \",\n        entries: [[\"Single Entry Type\",\"single\"],[\"Multi Entry Type\",\"multi\"]],\n        key: \"listType\",\n        selector: {\n            parentKeys: [\"entryTypes\"],\n            actionFunction: (childElement,entryTypeElement) => {\n                let entryTypes = entryTypeElement.getValue();\n                if((entryTypes)&&(entryTypes.length > 1)) {\n                    if(childElement.getState() != \"disabled\") {\n                        childElement.setValue(\"multi\");\n                        childElement.setState(\"disabled\");\n                    }\n                }\n                else {\n                    if(childElement.getState() != \"normal\") {\n                        childElement.setState(\"normal\");\n                    }\n                }\n            }\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"entryTypes":[{"key":"dummy","value":"one"},{"key":"dummy","value":"two"}],"listType":"multi"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return {\n\t\"type\": \"list\",\n\t\"label\": \"List\",\n\t\"customLayout\": [{\n        type: \"radioButtonGroup\",\n        label: \"List Type: \",\n        entries: [[\"Single Entry Type\",\"single\"],[\"Multi Entry Type\",\"multi\"]],\n        key: \"listType\",\n        selector: {\n            parentKey: \"entryTypes\",\n            actionFunction: (childElement,entryTypeElement) => {\n                let entryTypes = entryTypeElement.getValue();\n                if((entryTypes)&&(entryTypes.length > 1)) {\n                    if(childElement.getState() != \"disabled\") {\n                        childElement.setValue(\"multi\");\n                        childElement.setState(\"disabled\");\n                    }\n                }\n                else {\n                    if(childElement.getState() != \"normal\") {\n                        childElement.setState(\"normal\");\n                    }\n                }\n            }\n        }\n    }],\n\t\"makerFlags\": [\n\t\t\"hasLabel\",\n\t\t\"hasList\",\n\t\t\"hasKey\"\n\t]\n}","supplementalCode":""}},"makerCustomProcessing":{"name":"makerCustomProcessing","type":"apogee.FunctionMember","updateData":{"argList":["formResult","elementConfig"],"functionBody":"if(formResult.listType == \"single\") {\n    let entryTypes = elementConfig.entryTypes;\n    delete elementConfig.entryTypes;\n    if(entryTypes.length > 0) {\n        elementConfig.entryType = entryTypes[0];\n    }\n}","supplementalCode":""}}}},"colorPicker":{"name":"colorPicker","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"colorPicker\", //REQUIRED\n\t\tlabel: \"Border Color: \", //OPTIONAL\n\t\tkey: \"borderColor\", //REQUIRED\n\t\tvalue: \"#0000ff\", //OPTIONAL This is the initial value. In this case it is overwridden with the saved value.\n\t\thint: \"pick a color\", //OPTIONAL\n        help: \"This element allows you to select a color.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"borderColor":"#54bb5a"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"creator":{"name":"creator","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return getMakerLayout(formInfo);","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"type":"colorPicker","label":"Color: ","valueString":"#00ff00","key":"color","hint":"HTML color string","help":"This will give an HTML color string","useSelector":"none"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"outputForm":{"name":"outputForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"if(creator.data) {\n    let layout = getElementLayout(creator.data,_processInstanceLayout);\n    return [layout];\n}\nelse {\n    return [];\n}\n","supplementalCode":"function _processInstanceLayout(formResult,outElementConfig) {\n    if(formResult.size) {\n        let sizeString = formResult.size;\n        try {\n            let size = parseInt(formResult.size);\n            outElementConfig.size = size;\n        }\n        catch(error) {\n            throw Error(\"Invalid text field size: \" + sizeString);\n        }\n    }\n}"}},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"colorPicker","label":"Color Picker","makerFlags":["hasLabel","valueString","hasKey","hasHint","hasHelp","hasSelector"]}}}}},"dropdown":{"name":"dropdown","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"dropdown\", //REQUIRED\n\t\tlabel: \"Age: \", //OPTIONAL\n\t\tentries: [23,42,19,\"Other\"], //REQUIRED\n\t\tvalue: 19, //OPTIONAL - This is the initial value, which in this case can be overridden by saved data.\n\t\tkey: \"age\", //REQUIRED\n\t\thint: \"age in years\", //OPTIONAL\n        help: \"This element allows you to select an age.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"age":23}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"creator":{"name":"creator","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return getMakerLayout(formInfo);","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"type":"dropdown","label":"My Dropdown","entries":"[1,2,3,[\"Rabbit\",\"rabbit\"],4,5,6]","valueStringOrJson":"rabbit","valueType":"string","key":"myDropdown","hint":"make a selection","help":"This is a sample dropdown","useSelector":"none"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"dropdown","label":"Dropdown","makerFlags":["hasLabel","hasEntries","valueStringOrJson","hasKey","hasHint","hasHelp","hasSelector"]}}},"outputForm":{"name":"outputForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"if(creator.data) {\n    let layout = getElementLayout(creator.data);\n    return [layout];\n}\nelse {\n    return [];\n}\n","supplementalCode":""}}}},"heading":{"name":"heading","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"heading\", //REQUIRED\n\t\ttext: \"This is a heading!\", //REQUIRED\n\t\tlevel: 1, //OPTIONAL this is a value from 1 to 6. The default value is 2.\n\t\t\n\t\t//The value and key are not applicable since this is a non-interactive element.\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"heading","label":"Heading","customLayout":[{"type":"panel","formData":[{"type":"textField","label":"Text: ","key":"text"},{"type":"dropdown","label":"Level: ","entries":[["Default","default"],1,2,3,4,5,6],"value":"default","key":"level"}],"key":"customLayout"}],"makerFlags":["hasSelector"]}}},"makerCustomProcessing":{"name":"makerCustomProcessing","type":"apogee.FunctionMember","updateData":{"argList":["formResult","elementConfig"],"functionBody":"let customLayoutResult = formResult.customLayout;\nif(customLayoutResult) {\n    if(customLayoutResult.text) {\n        elementConfig.text = customLayoutResult.text;\n    }\n    if((customLayoutResult.level)&&(customLayoutResult.level != \"default\")) {\n        elementConfig.level = customLayoutResult.level;\n    }\n}","supplementalCode":""}}}},"htmlDisplay":{"name":"htmlDisplay","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"htmlDisplay\", //REQUIRED\n\t\thtml: \"<div style='border: 2px solid red; background-color: lightblue'>This is <b>html</b>.<br>This element is not <span style='color: orange'>interactive</span>.<br>It is only for <em>display</em></div>\",\n\t\n        //The standard elements key and value are not applicable since this is not an interactive element\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"myCheckbox":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"invisible":{"name":"invisible","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"checkbox\",\n        label: \"Gratuitous Element : \",\n        value: true,\n        key: \"gratuitous\",\n        hint: \"This is not the invisible element!\"\n    },\n    {\n\t\ttype: \"invisible\", //REQUIRED\n\t\tvalue: 37, //REQUIRED\n\t\tkey: \"invisibleValue\" //REQUIRED \n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"gratuitous":true,"invisibleValue":37}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"radioButtonGroup":{"name":"radioButtonGroup","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"radioButtonGroup\", //REQUIRED\n\t\tlabel: \"Age: \", //OPTIONAL\n\t\thorizontal: true, //OPTIONAL - this indicates if the radio buttons should be arraned horizontally or vertically.\n\t\tentries: [23,42,19,\"Other\"], //REQUIRED\n\t\tvalue: 19, //OPTIONAL - This is the initial value, which in this case can be overridden by saved data.\n\t\tkey: \"age\", //REQUIRED\n\t\thint: \"pick your age\", //OPTIONAL\n        help: \"This element allows you to select your age.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"age":42}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"sliderElement":{"name":"sliderElement","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"slider\", //REQUIRED\n\t\tlabel: \"Satisfaction: \", //OPTIONAL\n\t\tmin: 0, //OPTIONAL\n\t\tmax: 10, //OPTIONAL\n\t\tstep: .1, //OPTIONAL\n\t\tkey: \"satisfaction\", //REQUIRED\n\t\tvalue: 10, //OPTIONAL - this is the initial value, whcih can be overwritten in the saved data, as is done here.\n\t\thint: \"in furlongs per fortnight\", //OPTIONAL\n        help: \"This element allows you to select your satisfaction with the status quo.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"satisfaction":6.2}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"spacerElement":{"name":"spacerElement","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Ready: \",\n\t\tkey: \"check1\"\n\t},\n\t{\n\t\ttype: \"spacer\", //REQUIRED\n\t\theight: 30 //OPTIONAL, vertical space in pixels, defaults to 15\n\t},\n\t{\n\t\ttype: \"checkbox\",\n\t\tlabel: \"Are you sure? \",\n\t\tkey: \"check2\"\n\t}\n    \n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"check1":true,"check2":false}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"textField":{"name":"textField","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"textField\", //REQUIRED\n\t\tlabel: \"Favorite Color: \", //OPTIONAL\n\t\tsize: 50, //OPTIONAL\n\t\tvalue: \"blue\", //OPTIONAL - This is the initial value. It may be overridden by saved data, as it is here.\n\t\tkey: \"favColor\" //REQUIRED\n    }\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"favColor":"red"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"creator":{"name":"creator","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return getMakerLayout(formInfo);","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"type":"textField","label":"My Text Field: ","instanceSpecificConfig":{"size":"40"},"valueString":"Hello!","key":"myTextField","hint":"this is a text field","help":"Type text in to the text field.","useSelector":"none"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"outputForm":{"name":"outputForm","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"if(creator.data) {\n    let layout = getElementLayout(creator.data);\n    return [layout];\n}\nelse {\n    return [];\n}\n","supplementalCode":""}},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"textField","label":"Text Field","customLayout":[{"type":"panel","formData":[{"type":"textField","label":"Size in pixels: ","key":"size","hint":"optional"}],"key":"customLayout"}],"makerFlags":["hasLabel","valueString","hasKey","hasHint","hasHelp","hasSelector"]}}},"makerCustomProcessing":{"name":"makerCustomProcessing","type":"apogee.FunctionMember","updateData":{"argList":["formResult","elementConfig"],"functionBody":"let customLayoutResult = formResult.customLayout;\nif(customLayoutResult) {\n    if(customLayoutResult.size) {\n        try {\n            elementConfig.size = parseInt(customLayoutResult.size);\n        }\n        catch(error) {\n            throw Error(\"Invalid text field size: \" + customLayoutResult.size);\n        }\n    }\n}","supplementalCode":""}}}},"textarea":{"name":"textarea","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"textarea\", //REQUIRED\n\t\tlabel: \"Intro: \", //OPTIONAL\n\t\trows: 15, //OPTIONAL\n\t\tcols: 100, //OPTIONAL\n\t\tkey: \"intro\", //REQUIRED\n\t\tvalue: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\", //OPTIONAL, this is the initial value. It can be overridden, as it is here by saved data.\n\t\thint: \"text\", //OPTIONAL\n        help: \"This will be used as the initial crawl in your movie.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"intro":"Four score and seven years ago our fathers brought forth on this continent a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.\n\nNow we are engaged in a great civil war, testing whether that nation or any nation so conceived and so dedicated, can long endure. Rebel spaceships, striking from a hidden base, have won their first victory against the evil Galactic Empire.\n\nDuring the battle, Rebel spies managed to steal secret plans to the Empire's ultimate weapon, the DEATH STAR, an armored space station with enough power to destroy an entire planet.\n\nPursued by the Empire's sinister agents, Princess Leia races home aboard her starship, custodian of the stolen plans that can save her people and restore freedom to the galaxy."}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"creator":{"name":"creator","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return getMakerLayout(formInfo);","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"type":"textarea","label":"My Text Area: ","instanceSpecificConfig":{"cols":"40","rows":"5"},"valueString":"The rain in spain...","key":"myTextarea","hint":"this is a text field","help":"Type text in to the text field.","useSelector":"none"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"textarea","label":"Text Area","customLayout":[{"type":"panel","formData":[{"type":"textField","label":"Number Columns: ","key":"cols","hint":"optional"},{"type":"textField","label":"Number Rows: ","key":"rows","hint":"optional"}],"key":"customLayout"}],"makerFlags":["hasLabel","valueString","hasKey","hasHint","hasHelp","hasSelector"]}}},"makerCustomProcessing":{"name":"makerCustomProcessing","type":"apogee.FunctionMember","updateData":{"argList":["formResult","elementConfig"],"functionBody":"if(formResult.customLayout) {\n    if(formResult.customLayout.cols) {\n        try {\n            elementConfig.cols = parseInt(formResult.customLayout.cols);\n        }\n        catch(error) {\n            throw Error(\"Invalid text field size: \" + formResult.customLayout.cols);\n        }\n    }\n    if(formResult.customLayout.rows) {\n        try {\n            elementConfig = parseInt(formResult.customLayout.rows);\n        }\n        catch(error) {\n            throw Error(\"Invalid text field size: \" + formResult.customLayout.rows);\n        }\n    }\n}","supplementalCode":""}}}},"checkboxGroup":{"name":"checkboxGroup","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n\t\ttype: \"checkboxGroup\", //REQUIRED\n\t\tlabel: \"Aching Joints: \", //OPTIONAL\n\t\tvertical: true, //OPTIONAL - this indicates if the radio buttons should be arraned horizontally or vertically.\n\t\t//entries: [\"knee\",\"elbow\",\"wrist\",\"neck\"], //REQUIRED\n\t\tentries: [[\"Knee\",\"knee\"],[\"Elbow\",\"elbow\"],[\"Wrist\",\"wrist\"],[\"Neck\",\"neck\"]], //Alternate method for entering entries, [Display Data,Associated Element Value]\n\t\tvalue: [\"elbow\",\"wrist\"], //OPTIONAL - This is the initial value, which in this case can be overridden by saved data.\n\t\tkey: \"achingJoints\", //REQUIRED\n\t\thint: \"Joints that ache\", //OPTIONAL\n        help: \"This element allows you to select your joints that ache.\", //OPTIONAL\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"achingJoints":["elbow","wrist"]}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"creator":{"name":"creator","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return getMakerLayout(formInfo);","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"type":"checkboxGroup","label":"My Checkbox Group: ","entries":"[\"a\",\"b\",\"c\"]","valueStringOrJson":"c","valueType":"string","key":"myCheckboxGroup","hint":"choose","help":"This is a sample checkbox group","useSelector":"none"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"checkboxGroup","label":"Checkbox Group","customLayout":[{"type":"panel","formData":[{"type":"checkbox","label":"Vertical: ","key":"vertical"}],"key":"customLayout"}],"makerFlags":["hasLabel","hasEntries","valueStringOrJson","hasKey","hasHint","hasHelp","hasSelector"]}}},"makerCustomProcessing":{"name":"makerCustomProcessing","type":"apogee.FunctionMember","updateData":{"argList":["formResult","elementConfig"],"functionBody":"if((formResult.customLayout)&&(formResult.customLayout.vertical)) {\n    elementConfig.vertical = true;\n}","supplementalCode":""}}}}}},"formLayouts":{"name":"formLayouts","type":"apogee.Folder","children":{"showHideLayout":{"name":"showHideLayout","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        level: 1,\n        text: \"This is the Parent Form\"\n    },\n    {\n        type: \"textField\",\n        label: \"Name: \",\n        key: \"name\"\n    },\n    {\n\t\ttype: \"showHideLayout\", //REQUIRED\n\t\theading: \"Advanced\", //OPTIONAL\n\t\t//level: 4, //OPTIONAL\n\t\tclosed: true, //OPTIONAL - This gives the initial state\n\t\tformData: [ //REQUIRED - These are elements in the layout. They still appead as children in the parent form.\n\t\t    {\n\t\t        type: \"textField\",\n\t\t        label: \"Phone: \",\n\t\t        key: \"phone\"\n\t\t    },\n\t\t    {\n\t\t        type: \"textField\",\n\t\t        label: \"Suitor: \",\n\t\t        key: \"suitor\"\n\t\t    }\n\t\t]\n\t}\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"name":"Jenny","phone":"867-5309","suitor":"Tommy Tutone"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"showHideLayout","label":"Show Hide Layout","customLayout":[{"type":"panel","formData":[{"type":"textField","label":"Text: ","key":"heading"},{"type":"dropdown","label":"Level: ","entries":[["Default","default"],1,2,3,4,5,6],"value":"default","key":"level"},{"type":"checkbox","label":"Initially Closed: ","key":"closed"}],"key":"customLayout"}],"makerFlags":["hasChildren"]}}},"makerCustomProcessing":{"name":"makerCustomProcessing","type":"apogee.FunctionMember","updateData":{"argList":["formResult","elementConfig"],"functionBody":"let customLayoutResult = formResult.customLayout;\nif(customLayoutResult) {\n    if(customLayoutResult.heading) {\n        elementConfig.heading = customLayoutResult.heading;\n    }\n    if((customLayoutResult.level)&&(customLayoutResult.level != \"default\")) {\n        elementConfig.level = customLayoutResult.level;\n    }\n    if(customLayoutResult.closed) {\n        elementConfig.closed = customLayoutResult.closed;\n    }\n}","supplementalCode":""}}}},"horizontalLayout":{"name":"horizontalLayout","type":"apogee.Folder","children":{"sampleElement":{"name":"sampleElement","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"textField\",\n        label: \"Name: \",\n        size: 40,\n        key: \"name\"\n    },\n    {\n        type: \"textField\",\n        label: \"Addess Line 1: \",\n        size: 100,\n        key: \"addess1\"\n    },\n    {\n        type: \"textField\",\n        label: \"Addess Line 2: \",\n        size: 100,\n        key: \"address2\"\n    },\n    {\n\t\t\"type\": \"horizontalLayout\",\n\t\t\"formData\": [\n\t\t    {\n\t\t\t\ttype: \"textField\",\n\t\t\t\tlabel: \"City: \",\n\t\t\t\tsize: 30,\n\t\t\t\tkey: \"city\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"textField\",\n\t\t\t\tlabel: \"State: \",\n\t\t\t\tsize: 30,\n\t\t\t\tkey: \"state\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"textField\",\n\t\t\t\tlabel: \"Zipcode: \",\n\t\t\t\tsize: 10,\n\t\t\t\tkey: \"zip\"\n\t\t\t}\n\t\t]\n\t},\n];","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":""}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"formInfo":{"name":"formInfo","type":"apogee.JsonMember","updateData":{"data":{"type":"horizontalLayout","label":"Horizontal Layout","makerFlags":["hasChildren"]}}}}}}},"selectors":{"name":"selectors","type":"apogee.Folder","children":{"aSimpleSelection":{"name":"aSimpleSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Simple Selector Example\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\"],\n        key: \"petType\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\" //This is the value of the parent element where this element is visible\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Abyssinian\",\"American Bobtail\",\"American Curl\",\"Other\"],\n        key: \"catBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Cat\" //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"petType":"Dog","dogBreed":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"bMultiValueSelection":{"name":"bMultiValueSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Selector Multi-value Example \"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\",\"Cow\"],\n        key: \"petType\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValues: [\"Dog\",\"Cat\"] //Here we use \"parentValues\" with an s, and have an array.\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Holstein\",\"Braham\",\"Other\"],\n        key: \"catBreed\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Cow\" //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"petType":"Cat","dogBreed":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"cMultiOptionSelection":{"name":"cMultiOptionSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [  \n    {\n        type: \"heading\",\n        text: \"Simple Selector with Multi-value Parent\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        //here we can select multiple values.\n        type: \"checkboxGroup\",\n        label: \"Pets: \",\n        entries: [\"Dog\",\"Cat\",\"Cow\"],\n        key: \"pets\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"checkbox\",\n        label: \"Verify if you are a dog person: \",\n        key: \"isDogPerson\",\n        selector: {\n            parentKey: \"pets\", //This is the key for the parent element\n            parentValue: \"Dog\" //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"pets":["Dog","Cat"],"isDogPerson":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"dMultiValueMultiOptionSelection":{"name":"dMultiValueMultiOptionSelection","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [  \n    {\n        type: \"heading\",\n        text: \"Multi-value Selector with Multi-value Parent\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        //here we can select multiple values.\n        type: \"checkboxGroup\",\n        label: \"Pets: \",\n        entries: [\"Dog\",\"Cat\",\"Cow\"],\n        key: \"pets\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"checkbox\",\n        label: \"Verify you do have a dog and/or cat: \",\n        key: \"doesHaveDogAndOrCat\",\n        selector: {\n            parentKey: \"pets\", //This is the key for the parent element\n            parentValues: [\"Dog\",\"Cat\"] //This is the value of the parent element where this element is visible\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"pets":["Dog","Cow"],"doesHaveDogAndOrCat":true}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"eAbsoluteParentPath":{"name":"eAbsoluteParentPath","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Parent Panel\"\n    },\n    {\n        type: \"htmlDisplay\",\n        html: \"--- start of child panel ---\"\n    },\n    {\n        type: \"panel\",\n        formData: [\n            {\n                type: \"heading\",\n                text: \"Child Panel\"\n            },\n            {\n                type: \"checkbox\",\n                label: \"Show Other Element: \",\n                key: \"showElement\"\n            }\n        ],\n        key: \"childPanel\"\n    },\n    {\n        type: \"htmlDisplay\",\n        html: \"--- rest of parent panel ---\"\n    },\n    {\n        type: \"textField\",\n        label: \"Other Element: \",\n        key: \"otherElement\",\n        selector: {\n            parentKey: [\"childPanel\",\"showElement\"], //This selects an absolute path within the form, meaning \"showElement\" on \"childPanel\"\n            parentValue: true\n        }\n    }\n    \n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"childPanel":{"showElement":true},"otherElement":""}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"fOtherActions":{"name":"fOtherActions","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Different Selector Actions\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\"],\n        key: \"petType\",\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed Element #1: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed1\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\",\n            action: \"normalInvactive\" //Here we toggle between the states normal and inactive. This is the default action.\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed Element #2: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed3\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\",\n            action: \"normalHidden\" //Here we toggle between the states normal and hidden.\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed Element #3: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed4\",\n        selector: {\n            parentKey: \"petType\", //This is the key for the parent element\n            parentValue: \"Dog\",\n            action: \"normalDisabled\" //Here we toggle between the states normal and disabled\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"petType":"Dog","dogBreed1":"Mutt","dogBreed2":"Mutt","dogBreed3":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true},"gCustomAction":{"name":"gCustomAction","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return [\n    {\n        type: \"heading\",\n        text: \"Custom Action Example\"\n    },\n    {\n        type: \"checkbox\",\n        label: \"Has Pet\",\n        key: \"hasPet\"\n    },\n    {\n        //this is our parent element that controls some elements below\n        type: \"radioButtonGroup\",\n        label: \"Pet Type: \",\n        entries: [\"Dog\",\"Cat\"],\n        key: \"petType\",\n        selector: {\n            parentKey: \"hasPet\",\n            parentValue: true\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed1\",\n        selector: {\n            parentKey: \"petType\", //For custom actions, you can have a single parentKey, or multiple parentKeys.\n            actionFunction: (childElement,petTypeElement) => {\n                if((petTypeElement.getState() == \"normal\")&&(petTypeElement.getValue() == \"Dog\")) {\n                    childElement.setState(\"normal\");\n                }\n                else {\n                    childElement.setState(\"inactive\");\n                }\n            }\n        }\n    },\n    {\n        //This is a child element with a selector\n        type: \"dropdown\",\n        label: \"Breed: \",\n        entries: [\"Mutt\",\"Other\"],\n        key: \"dogBreed2\",\n        selector: {\n            parentKeys: [\"hasPet\",\"petType\"], //For custom actions, you can have a single parentKey, or multiple parentKeys.\n            actionFunction: (childElement,hasPetElement,petTypeElement) => {\n                if((hasPetElement.getValue() === true)&&(petTypeElement.getValue() == \"Dog\")) {\n                    childElement.setState(\"normal\");\n                }\n                else {\n                    childElement.setState(\"inactive\");\n                }\n            }\n        }\n    }\n]","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"hasPet":true,"petType":"Dog","dogBreed1":"Mutt","dogBreed2":"Mutt"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}},"childrenNotWriteable":true}}},"expressionForms":{"name":"expressionForms","type":"apogee.Folder","children":{"expressionForm2":{"name":"expressionForm2","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    let formMeta = formObject.getMeta();\n    let functionBody = apogeeui.getFormResultFunctionBody(formValue,formMeta);\n    admin.getCommandMessenger().dataCommand(\"formFunctionBody2\",functionBody);\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Simple Expression Form\",\n    },\n    {\n        type: \"list\",\n        label: \"List: \",\n        entryType: {\n            label: \"Entry\",\n            layout: {\n                type: \"panel\",\n                formData: [\n                    {\n                        type: \"textField\",\n                        label: \"Expression: \",\n                        size: 60,\n                        key: \"expressionField\",\n                        hint: \"expression\",\n                        meta: {\n                            expression: \"simple\", //we make this field into an expression\n                            excludeValue: \"\" //if the value of the field is \"\", we exclude it\n                        }\n                    },\n                    {\n                        type: \"textField\",\n                        label: \"Plain String: \",\n                        size: 60,\n                        key: \"textField\",\n                        hint: \"text\",\n                        meta: {\n                            //here, we do not specify an expression value. If will be kept as a normal string\n                            excludeValue: \"\" //if the value of the field is \"\", we exclude it\n                        }\n                    },\n                    {\n                        type: \"checkbox\",\n                        label: \"Checkbox1\",\n                        key: \"checkbox1\"\n                        //here we do not specify any meta data. This will be saved as is\n                    },\n                    {\n                        type: \"checkbox\",\n                        label: \"Checkbox2\",\n                        key: \"checkbox2\",\n                        meta: {\n                            //here we do not specify any expression type since it can not be converted.\n                            //however we can specify to exclude a value from the form, which we do in the case it is false.\n                            excludeValue: false\n                        }\n                    }\n                ],\n                meta: {\n                    //if there are child values on the panel that will be converted to expressions on the form, we must speciy this\n                    //otherwise we can leave it blank\n                    expression: \"object\" \n                }\n            }\n        },\n        key: \"sampleList\",\n        meta: {\n            //if there are child values in the list that will be converted to expressions on the form, we must speciy this\n            //otherwise we can leave it blank\n            expression: \"array\"\n        }\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Submit\"\n    }\n];\n","supplementalCode":""}},"formFunctionBody1":{"name":"formFunctionBody1","type":"apogee.JsonMember","updateData":{"data":"let output = {};\noutput[\"expressionField\"] = dummy\noutput[\"textField\"] = \"dummy\"\nreturn output;"}},"formResult1":{"name":"formResult1","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"expressionField\"] = dummy\noutput[\"textField\"] = \"dummy\"\nreturn output;","supplementalCode":""}},"formFunctionBody2":{"name":"formFunctionBody2","type":"apogee.JsonMember","updateData":{"data":"let output = {};\noutput[\"sampleList\"]= []\noutput[\"sampleList\"][0]= {};\noutput[\"sampleList\"][0][\"expressionField\"] = [1,2,3]\noutput[\"sampleList\"][0][\"textField\"] = \"[1,2,3]\"\nreturn output;"}},"formResult2":{"name":"formResult2","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"let output = {};\noutput[\"sampleList\"]= []\noutput[\"sampleList\"][0]= {};\noutput[\"sampleList\"][0][\"expressionField\"] = [1,2,3]\noutput[\"sampleList\"][0][\"textField\"] = \"[1,2,3]\"\nreturn output;","supplementalCode":""}},"expressionForm1":{"name":"expressionForm1","type":"apogee.FunctionMember","updateData":{"argList":["admin"],"functionBody":"let onSubmit = (formValue,formObject) => {\n    let formMeta = formObject.getMeta();\n    let functionBody = apogeeui.getFormResultFunctionBody(formValue,formMeta);\n    admin.getCommandMessenger().dataCommand(\"formFunctionBody1\",functionBody);\n}\n\nreturn [\n    {\n        type: \"heading\",\n        text: \"Simple Expression Form\",\n    },\n    {\n        type: \"textField\",\n        label: \"Expression: \",\n        size: 60,\n        key: \"expressionField\",\n        hint: \"expression\",\n        meta: {\n            expression: \"simple\",\n            excludeValue: \"\"\n        }\n    },\n    {\n        type: \"textField\",\n        label: \"Plain String: \",\n        size: 60,\n        key: \"textField\",\n        hint: \"text\",\n        meta: {\n            excludeValue: \"\"\n        }\n    },\n    {\n        type: \"submit\",\n        onSubmit: onSubmit,\n        submitLabel: \"Submit\"\n    }\n];\n","supplementalCode":""}},"dummy":{"name":"dummy","type":"apogee.JsonMember","updateData":{"data":956}}}},"getElementLayout":{"name":"getElementLayout","type":"apogee.FunctionMember","updateData":{"argList":["elementFormResult"],"functionBody":"let customLayoutProcessingMap = {}\r\n//customLayoutProcessingMap[formElements.checkbox.formInfo.type] = formElements.checkbox.makerCustomProcessing;\r\ncustomLayoutProcessingMap[formElements.checkboxGroup.formInfo.type] =  formElements.checkboxGroup.makerCustomProcessing;\r\n//customLayoutProcessingMap[formElements.colorPicker.formInfo.type] = formElements.colorPicker.makerCustomProcessing;\r\n//customLayoutProcessingMap[formElements.dropdown.formInfo.type] = formElements.dropdown.makerCustomProcessing;\r\ncustomLayoutProcessingMap[formElements.heading.formInfo.type] = formElements.heading.makerCustomProcessing;\r\ncustomLayoutProcessingMap[formElements.textField.formInfo.type] =  formElements.textField.makerCustomProcessing;\r\ncustomLayoutProcessingMap[formElements.textarea.formInfo.type] = formElements.textarea.makerCustomProcessing;\r\ncustomLayoutProcessingMap[formElements.panel.formInfo.type] = formElements.panel.makerCustomProcessing;\r\ncustomLayoutProcessingMap[formElements.list.formInfo.type] = formElements.list.makerCustomProcessing;\r\ncustomLayoutProcessingMap[formLayouts.showHideLayout.formInfo.type] = formLayouts.showHideLayout.makerCustomProcessing;\r\n\r\n\r\nlet customLayoutProcessing = customLayoutProcessingMap[elementFormResult.type];\r\n///////////////////////////////////////////////////////////////////\r\n\r\n\r\n//make a copy - we wil modify it\r\n//I want to change this to just do a copy line by line\r\nlet elementConfig = {};\r\n\r\nif(elementFormResult.type) {\r\n    if(elementFormResult.type !== \"\") {\r\n        elementConfig.type = elementFormResult.type;\r\n    }\r\n}\r\nif(elementFormResult.label) {\r\n    if(elementFormResult.label !== \"\") {\r\n        elementConfig.label = elementFormResult.label;\r\n    }\r\n}\r\n\r\n//---------------\r\n//process entries\r\n//---------------\r\nif(elementFormResult.entries !== undefined) {\r\n\tif(elementFormResult.entries !== \"\") {\r\n\t\telementConfig.entries = JSON.parse(elementFormResult.entries);\r\n\t}\r\n}\r\n\r\n//----------\r\n//process values\r\n//----------\r\nif(elementFormResult.valueJson !== undefined) {\r\n\tif(elementFormResult.valueJson !== \"\") {\r\n\t\telementConfig.value = JSON.parse(elementFormResult.valueJson);\r\n\t}\r\n}\r\nif(elementFormResult.valueString !== undefined) {\r\n\tif(elementFormResult.valueString !== \"\") {\r\n\t\telementConfig.value = elementFormResult.valueString;\r\n\t}\r\n}\r\nif(elementFormResult.valueStringOrJson !== undefined) {\r\n\tif(elementFormResult.valueType == \"string\") {\r\n\t\telementConfig.value = elementFormResult.valueStringOrJson;\r\n\t}\r\n\telse if(elementFormResult.valueType == \"json\") {\r\n\t\telementConfig.value = JSON.parse(elementFormResult.valueStringOrJson);\r\n\t}\r\n}\r\nif(elementFormResult.valueBoolean !== undefined) {\r\n\tif(elementFormResult.valueBoolean !== null) {\r\n\t\telementConfig.value = elementFormResult.valueBoolean;\r\n\t}\r\n}\r\n\r\n//-------------------\r\n//child data\r\n//-------------------\r\nif(elementFormResult.formData) {\r\n    elementConfig.formData = elementFormResult.formData.map(elementInfo => getElementLayout(elementInfo.value));\r\n}\r\nif(elementFormResult.entryTypes) {\r\n    elementConfig.entryTypes = elementFormResult.entryTypes.map(elementInfo => {\r\n        let entryType = {};\r\n        if(elementInfo.value.label) entryType.label = elementInfo.value._listButtonText;\r\n        entryType.layout = getElementLayout(elementInfo.value);\r\n        return entryType;\r\n    });\r\n}\r\n\r\n//-------------------\r\n//other simple values\r\n//-------------------\r\nif(elementFormResult.key) {\r\n    if(elementFormResult.key !== \"\") {\r\n        elementConfig.key = elementFormResult.key;\r\n    }\r\n}\r\nif(elementFormResult.hint) {\r\n    if(elementFormResult.hint !== \"\") {\r\n        elementConfig.hint = elementFormResult.hint;\r\n    }\r\n}\r\nif(elementFormResult.help) {\r\n    if(elementFormResult.help !== \"\") {\r\n        elemenConfig.help = elementFormResult.help;\r\n    }\r\n}\r\n\r\n//--------------------\r\n//process the selector\r\n//--------------------\r\n\r\nif(elementFormResult.simpleSelector) {\r\n    let selectorInput = elementFormResult.simpleSelector;\r\n    let selectorOutput = {};\r\n    selectorOutput.parentKey = selectorInput.parentKey;\r\n    \r\n    if(selectorInput.valueType == \"string\") {\r\n        selectorOutput.parentValue = selectorInput.parentValue;\r\n    }\r\n    else if(selectorInput.valueType == \"literal\") {\r\n        selectorOutput.parentValue = JSON.parse(selectorInput.parentValue);\r\n    }\r\n    else {\r\n        throw new Error(\"Unknown selector value type: \" + selectorInput.valueType);\r\n    }\r\n    \r\n    elementConfig.selector = selectorOutput;\r\n}\r\nelse if(elementFormResult.advancedSelector) {\r\n    let selectorInput = elementConfig.advancedSelector;\r\n    let selectorOutput = {};\r\n    \r\n    if(selectorInput.keyType == \"relative\") {\r\n        selectorOutput.parentKey = selectorInput.parentKey;\r\n    }\r\n    else if(selectorInput.keyType == \"absolute\") {\r\n        selectorOutput.parentKey = JSON.parse(selectorInput.parentKey);\r\n    }\r\n    else if(selectorInput.keyType == \"multi\") {\r\n        selectorOutput.parentKeys = JSON.parse(selectorInput.parentKeys);\r\n    }\r\n    else {\r\n        throw new Error(\"Unknown selector parent key type: \" + selectorInput.keyType);\r\n    }\r\n    \r\n    if(selectorInput.action == \"custom\") {\r\n        //create the function\r\n        let args = selectorInput.argList;\r\n        let body = selectorInput.actionFunction;\r\n        selectorOutput.actionFunction = new Function(args,body);\r\n    }\r\n    else {\r\n        \r\n        if(!selectorInput.valuePanel) {\r\n            throw new Error(\"Missing values from form input!\");\r\n        }\r\n        \r\n        if(selectorInput.valuePanel.valueType == \"string\") {\r\n            selectorOutput.parentValue = selectorInput.valuePanel.parentValue;\r\n        }\r\n        else if(selectorInput.valuePanel.valueType == \"literal\") {\r\n            selectorOutput.parentValue = JSON.parse(selectorInput.valuePanel.parentValue);\r\n        }\r\n        else if(selectorInput.valuePanel.valueType == \"multi\") {\r\n            selectorOutput.parentValues = JSON.parse(selectorInput.valuePanel.parentValues);   \r\n        }\r\n        delete selectorInput.valuePanel;\r\n        \r\n        selectorOutput.action = selectorInput.action;\r\n    }\r\n    \r\n    elementConfig.selector = selectorOutput;\r\n}\r\n\r\n//-----------------\r\n//custom processing\r\n//-----------------\r\nif(customLayoutProcessing) {\r\n    customLayoutProcessing(elementFormResult,elementConfig);\r\n}\r\n\r\n//console.log(JSON.stringify(elementConfig,null,\"\\t\"));\r\n\r\nreturn elementConfig;","supplementalCode":""}},"getMakerLayout":{"name":"getMakerLayout","type":"apogee.FunctionMember","updateData":{"argList":["elementInfo","childPanelElementsLayout","childListElementsLayout"],"functionBody":"let layout = [];\r\n\r\n//type field - always\r\nlayout.push({\r\n    type: \"invisible\",\r\n    value: elementInfo.type,\r\n    key: \"type\"\r\n});\r\n    \r\n//heading\r\nlayout.push({\r\n    type: \"heading\",\r\n    text: elementInfo.label\r\n});\r\n\r\n//label\r\nif(elementInfo.makerFlags.indexOf(\"hasLabel\") >= 0) {\r\n\tlayout.push(LABEL_ELEMENT_CONFIG);\r\n}\r\n\r\n//entries\r\nif(elementInfo.makerFlags.indexOf(\"hasEntries\") >= 0) {\r\n\tlayout.push(ENTRIES_ELEMENTS_CONFIG);\r\n}\r\n\r\n//element specific layout\r\nif(elementInfo.customLayout) {\r\n    layout.push(...elementInfo.customLayout);\r\n}\r\n\r\n//children - this makes a form data entry or, formatted for a panel or list\r\nif(elementInfo.makerFlags.indexOf(\"hasChildren\") >= 0) {\r\n    layout.push(childPanelElementsLayout);\r\n}\r\nelse if(elementInfo.makerFlags.indexOf(\"hasList\") >= 0) {\r\n    layout.push(childListElementsLayout)\r\n}\r\n\r\n//value - string format\r\nif(elementInfo.makerFlags.indexOf(\"valueString\") >= 0) {\r\n\tlayout.push(VALUE_STRING_ELEMENT_CONFIG);\r\n}\r\n\r\n//value - json literal format\r\nif(elementInfo.makerFlags.indexOf(\"valueJson\") >= 0) {\r\n\tlayout.push(VALUE_JSON_ELEMENT_CONFIG);\r\n}\r\n\r\n//value - string or json literal format\r\nif(elementInfo.makerFlags.indexOf(\"valueStringOrJson\") >= 0) {\r\n\tlayout.push(VALUE_EITHER_ELEMENT_CONFIG);\r\n}\r\n\r\n//value - boolean format\r\nif(elementInfo.makerFlags.indexOf(\"valueBoolean\") >= 0) {\r\n\tlayout.push(VALUE_BOOLEAN_ELEMENT_CONFIG);\r\n}\r\n\r\n//key\r\nif(elementInfo.makerFlags.indexOf(\"hasKey\") >= 0) {\r\n    layout.push(KEY_ELEMENT_CONFIG);\r\n}\r\n\t\r\n//additional options\r\nlet hasHint = (elementInfo.makerFlags.indexOf(\"hasHint\") >= 0);\r\nlet hasHelp = (elementInfo.makerFlags.indexOf(\"hasHelp\") >= 0);\r\nlet hasSelector = (elementInfo.makerFlags.indexOf(\"hasSelector\") >= 0);\r\n\r\nif((hasHint)||(hasHelp)||(hasSelector)) {\r\n    let additionalOptionsElement = {\r\n    \ttype: \"showHideLayout\",\r\n    \theading: \"More Options\",\r\n    \tclosed: true,\r\n    \tformData: []\r\n    }\r\n    if(hasHint) {\r\n    \tadditionalOptionsElement.formData.push(HINT_ELEMENT_CONFIG);\r\n    }\r\n    if(hasHelp) {\r\n    \tadditionalOptionsElement.formData.push(HELP_ELEMENT_CONFIG);\r\n    }\r\n    if(hasSelector) {\r\n        additionalOptionsElement.formData.push(...SELECTOR_ELEMENT_CONFIG_LIST);\r\n    }\r\n\r\n    layout.push(additionalOptionsElement);\r\n}\r\n\t\r\n\r\nreturn layout;","supplementalCode":"\r\nconst LABEL_ELEMENT_CONFIG = {\r\n    type: \"textField\",\r\n    label: \"Label: \",\r\n    size: 30,\r\n    key: \"label\",\r\n    hint: \"optional\"\r\n}\r\n\r\nconst ENTRIES_ELEMENTS_CONFIG = {\r\n\ttype: \"textField\",\r\n\tlabel: \"Entries: \",\r\n\tkey: \"entries\",\r\n\thint: \"optional, array of values (use quotes on strings)\"\r\n}\r\n\r\nconst VALUE_STRING_ELEMENT_CONFIG = {\r\n\ttype: \"textField\",\r\n\tlabel: \"Initial Value: \",\r\n\tkey: \"valueString\",\r\n\thint: \"optional, text\"\r\n}\r\n\t\t\t\r\nconst VALUE_JSON_ELEMENT_CONFIG = {\r\n\ttype: \"textField\",\r\n\tlabel: \"Initial Value: \",\r\n\tkey: \"valueJson\",\r\n\thint: \"optional, JSON literal - Number, boolean, quoted string, JSON array...\"\r\n}\r\n\t\t\t\r\nconst VALUE_EITHER_ELEMENT_CONFIG = {\r\n\ttype: \"horizontalLayout\",\r\n\tformData: [\r\n\t\t{\r\n\t\t\ttype: \"textField\",\r\n\t\t\tlabel: \"Initial Value: \",\r\n\t\t\tkey: \"valueStringOrJson\"\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: \"radioButtonGroup\",\r\n\t\t\tlabel: \"Value Type: \",\r\n\t\t\tentries: [[\"String\",\"string\"],[\"JSON literal - Number, boolean, quoted string, JSON array...\",\"json\"]],\r\n\t\t\tkey: \"valueType\",\r\n\t\t\thint: \"optional\"\r\n\t\t}\r\n\t]\r\n}\r\n\t\t\t\r\nconst VALUE_BOOLEAN_ELEMENT_CONFIG = {\r\n\ttype: \"radioButtonGroup\",\r\n\tlabel: \"Initial Value: \",\r\n\tentries: [[\"true\",true],[\"false\",false],[\"Not Set\",null]],\r\n\tkey: \"booleanValue\",\r\n    hint: \"optional\"\r\n}\r\n\r\nconst KEY_ELEMENT_CONFIG = {\r\n\ttype: \"textField\",\r\n\tlabel: \"Key: \",\r\n\tsize: 30,\r\n\tkey: \"key\",\r\n\thint: \"required\"\r\n}\r\n\r\nconst HINT_ELEMENT_CONFIG = {\r\n\ttype: \"textField\",\r\n\tlabel: \"Hint: \",\r\n\tsize: 40,\r\n\tkey: \"hint\",\r\n    hint: \"optional\"\r\n}\r\n\r\nconst HELP_ELEMENT_CONFIG = {\r\n\ttype: \"textarea\",\r\n\tlabel: \"Help: \",\r\n\tcols: 50,\r\n\trows: 5,\r\n\tkey: \"help\",\r\n    hint: \"optional\"\r\n}\r\n\t\r\nconst SELECTOR_ELEMENT_CONFIG_LIST = [\r\n\t{\r\n\t\ttype: \"radioButtonGroup\",\r\n\t\tlabel: \"Selector: \",\r\n\t\tentries: [[\"None\",\"none\"],[\"Simple Selector\",\"simple\"],[\"Advanced Selector\",\"advanced\"]],\r\n\t\tvalue: \"none\",\r\n\t\tkey: \"useSelector\"\r\n\t},\r\n\t{\r\n\t\ttype: \"panel\",\r\n\t\tformData: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"textField\",\r\n\t\t\t\tlabel: \"Selector Parent Key: \",\r\n\t\t\t\tsize: 30,\r\n\t\t\t\tkey: \"parentKey\",\r\n\t\t\t\thint: \"required\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"horizontalLayout\",\r\n\t\t\t\tformData: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"textField\",\r\n\t\t\t\t\t\tlabel: \"Selector Parent Value: \",\r\n\t\t\t\t\t\tsize: 30,\r\n\t\t\t\t\t\tkey: \"parentValue\",\r\n\t\t\t\t\t\tselector: {\r\n\t\t\t\t\t\t\tparentKey: \"valueType\",\r\n\t\t\t\t\t\t\tparentValues: [\"string\",\"literal\"]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"radioButtonGroup\",\r\n\t\t\t\t\t\tlabel: \"Value Type: \",\r\n\t\t\t\t\t\tentries: [[\"String\",\"string\"],[\"Literal - Number, Boolean, null\",\"literal\"]],\r\n\t\t\t\t\t\tvalue: \"string\",\r\n\t\t\t\t\t\tkey: \"valueType\",\r\n\t\t\t\t\t\thint: \"required\",\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t\r\n\t\t],\r\n\t\tkey: \"simpleSelector\",\r\n\t\tselector: {\r\n\t\t\tparentKey: \"useSelector\",\r\n\t\t\tparentValue: \"simple\"\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttype: \"panel\",\r\n\t\tformData: [\r\n\t\t\t//key type\r\n\t\t\t{\r\n\t\t\t\ttype: \"radioButtonGroup\",\r\n\t\t\t\tlabel: \"Selector Parent Key Type: \",\r\n\t\t\t\tvertical: true,\r\n\t\t\t\tentries: [\r\n\t\t\t\t\t[\"Local Key - Enter the parent key\",\"relative\"],\r\n\t\t\t\t\t[\"Absolute Path - Enter an array of quoted keys\",\"absolute\"],\r\n\t\t\t\t\t[\"Multiple Parents - Enter an array containing the quoted keys (for local keys) and/or arrays of quoted keys (for absolute paths)\",\"multi\"]\r\n\t\t\t\t],\r\n\t\t\t\tvalue: \"relative\",\r\n\t\t\t\tkey: \"keyType\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"textField\",\r\n\t\t\t\tlabel: \"Selector Parent Key: \",\r\n\t\t\t\tsize: 30,\r\n\t\t\t\tkey: \"parentKey\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tparentKey: \"keyType\",\r\n\t\t\t\t\tparentValues: [\"relative\",\"absolute\"]\r\n\t\t\t\t},\r\n\t\t\t\thint: \"required\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"textField\",\r\n\t\t\t\tlabel: \"Selector Parent Keys: \",\r\n\t\t\t\tsize: 60,\r\n\t\t\t\tkey: \"parentKeys\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tparentKey: \"keyType\",\r\n\t\t\t\t\tparentValue: \"multi\"\r\n\t\t\t\t},\r\n\t\t\t\thint: \"required\"\r\n\t\t\t},\r\n\t\t\t//value type\r\n\t\t\t{\r\n\t\t\t\ttype: \"panel\",\r\n\t\t\t\tformData: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"radioButtonGroup\",\r\n\t\t\t\t\t\tlabel: \"Selector Parent Value Type: \",\r\n\t\t\t\t\t\tvertical: true,\r\n\t\t\t\t\t\tentries: [[\"String\",\"string\"],[\"Literal - Number, Boolean, null\",\"literal\"],[\"Multiple Values - Enter an array of literals or quoted strings\",\"multi\"]],\r\n\t\t\t\t\t\tvalue: \"string\",\r\n\t\t\t\t\t\tkey: \"valueType\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"textField\",\r\n\t\t\t\t\t\tlabel: \"Selector Parent Value: \",\r\n\t\t\t\t\t\tsize: 30,\r\n\t\t\t\t\t\tkey: \"parentValue\",\r\n\t\t\t\t\t\tselector: {\r\n\t\t\t\t\t\t\tparentKey: \"valueType\",\r\n\t\t\t\t\t\t\tparentValues: [\"string\",\"literal\"]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t        hint: \"required\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttype: \"textField\",\r\n\t\t\t\t\t\tlabel: \"Selector Parent Values: \",\r\n\t\t\t\t\t\tsize: 60,\r\n\t\t\t\t\t\tkey: \"parentValues\",\r\n\t\t\t\t\t\tselector: {\r\n\t\t\t\t\t\t\tparentKey: \"valueType\",\r\n\t\t\t\t\t\t\tparentValue: \"multi\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t        hint: \"required\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\tkey: \"valuePanel\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\tparentKey: \"action\",\r\n\t\t\t\t\tparentValues: [\"normalInactive\",\"normalHidden\",\"normalDisabled\"]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"dropdown\",\r\n\t\t\t\tlabel: \"Selector Action: \",\r\n\t\t\t\tentries: [\r\n\t\t\t\t\t\t[\"Normal / Hidden and Inactive\",\"normalInactive\"],\r\n\t\t\t\t\t\t[\"Normal / Hidden but Active\",\"normalHidden\"],\r\n\t\t\t\t\t\t[\"Normal / Disabled\",\"normalDisabled\"],\r\n\t\t\t\t\t\t[\"Custom Action\",\"custom\"]],\r\n\t\t\t\tvalue: \"normalInactive\",\r\n\t\t\t\tkey: \"action\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"textField\",\r\n\t\t\t\tlabel: \"Selector Action Arg List: \",\r\n\t\t\t\tsize: 60,\r\n\t\t\t\tkey: \"argList\",\r\n\t\t\t\thint: \"required\",\r\n\t\t\t\thelp: \"The first argument is this child element object. The next arguments are the parent element objects, in order they are specified.\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"textarea\",\r\n\t\t\t\tlabel: \"Selector Action Function: \",\r\n\t\t\t\tcols: 80,\r\n\t\t\t\trows: 10,\r\n\t\t\t\tkey: \"actionFunction\",\r\n\t\t\t\tselector: {\r\n\t\t\t\t\t\"parentKey\": \"action\",\r\n\t\t\t\t\t\"parentValue\": \"custom\"\r\n\t\t\t\t},\r\n\t\t\t\thint: \"required\",\r\n\t\t\t\thelp: \"This is a function that takes the arg list above and does the desired action on this child element.\"\r\n\t\t\t}\r\n\t\t\t\r\n\t\t],\r\n\t\tkey: \"advancedSelector\",\r\n\t\tselector: {\r\n\t\t\tparentKey: \"useSelector\",\r\n\t\t\tparentValue: \"advanced\"\r\n\t\t}\r\n\t}\r\n]\r\n"}},"createMakerFormLayout":{"name":"createMakerFormLayout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"let elementFolders = [\n    formElements.checkbox,\n    formElements.checkboxGroup,\n    formElements.colorPicker,\n    formElements.dropdown,\n    formElements.heading,\n    formElements.textField,\n    formElements.textarea,\n    formElements.panel,\n    formElements.list,\n    formLayouts.horizontalLayout,\n    formLayouts.showHideLayout\n]\n\nlet childPanelElementsLayout = {\n    type: \"list\",\n    key: \"formData\"\n}\nlet childListElementsLayout = {\n    type: \"list\",\n    label: \"List Entry Elements: \",\n    key: \"entryTypes\"\n}\nlet listLayoutAddition = [\n    {\n        type: \"htmlDisplay\",\n        html: \"<hr style='border-top: 1px dashed darkgray'>\"\n    },\n    {\n        type: \"textField\",\n        label: \"List Entry Button Text: \",\n        key: \"_listButtonText\"\n    }\n];\n\nchildPanelElementsLayout.entryTypes = elementFolders.map( elementFolder => {\n    let elementInfo = elementFolder.formInfo;\n    let layoutListEntry = {};\n    layoutListEntry.label = elementInfo.label;\n    let panelLayout = getMakerLayout(elementInfo,childPanelElementsLayout,childListElementsLayout);\n    layoutListEntry.layout = {\n        type: \"panel\",\n        formData: panelLayout,\n        key: elementInfo.type\n    }\n    return layoutListEntry;\n})\nchildListElementsLayout.entryTypes = elementFolders.map( elementFolder => {\n    let elementInfo = elementFolder.formInfo;\n    let layoutListEntry = {};\n    layoutListEntry.label = elementInfo.label;\n    let panelLayout = getMakerLayout(elementInfo,childPanelElementsLayout,childListElementsLayout);\n    let modifiedPanelLayout = panelLayout.concat(listLayoutAddition);\n    layoutListEntry.layout = {\n        type: \"panel\",\n        formData: modifiedPanelLayout,\n        key: elementInfo.type\n    }\n    return layoutListEntry;\n})\n\nreturn getMakerLayout(formElements.panel.topLevelFormInfo,childPanelElementsLayout,childListElementsLayout);","supplementalCode":""}},"test":{"name":"test","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return createMakerFormLayout();","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"type":"panel","formData":[{"key":"checkbox","value":{"type":"checkbox","label":"xxx: ","booleanValue":true,"key":"yyy","hint":"","help":"","useSelector":"none"}},{"key":"dropdown","value":{"type":"dropdown","label":"Choices: ","entries":"[1,2,\"asdf\"]","valueStringOrJson":"2","valueType":"json","key":"zzz","hint":"","help":"","useSelector":"none"}},{"key":"panel","value":{"type":"panel","formData":[{"key":"heading","value":{"type":"heading","customLayout":{"text":"Child Panel","level":6},"useSelector":"none"}},{"key":"colorPicker","value":{"type":"colorPicker","label":"Color: ","valueString":"","key":"color","hint":"","help":"","useSelector":"none"}},{"key":"checkbox","value":{"type":"checkbox","label":"Valid: ","booleanValue":true,"key":"isValid","hint":"","help":"","useSelector":"none"}},{"key":"list","value":{"type":"list","label":"Simple List: ","listType":"single","entryTypes":[{"key":"textField","value":{"type":"textField","label":"Name: ","customLayout":{"size":""},"valueString":"","key":"name","hint":"","help":"","useSelector":"none","_listButtonText":"Name"}}],"key":"sl"}},{"key":"list","value":{"type":"list","label":"Multi Entry List: ","listType":"multi","entryTypes":[{"key":"textField","value":{"type":"textField","label":"Name: ","customLayout":{"size":""},"valueString":"","key":"littleName","hint":"","help":"","useSelector":"none","_listButtonText":"Short Name Entry"}},{"key":"textarea","value":{"type":"textarea","label":"Name: ","customLayout":{"cols":"","rows":""},"valueString":"","key":"bigName","hint":"","help":"","useSelector":"none","_listButtonText":"Big Name Entry"}}],"key":"ml"}},{"key":"checkboxGroup","value":{"type":"checkboxGroup","label":"Test Group: ","entries":"[1,2,3]","customLayout":{"vertical":false},"valueStringOrJson":"","key":"testGroup","hint":"","help":"","useSelector":"none"}}],"key":"more"}},{"key":"textField","value":{"type":"textField","label":"Name: ","customLayout":{"size":"80"},"valueString":"","key":"name","hint":"","help":"","useSelector":"none"}},{"key":"showHideLayout","value":{"type":"showHideLayout","customLayout":{"heading":"Hidden Address Form","level":1,"closed":true},"formData":[{"key":"textField","value":{"type":"textField","label":"Name:","customLayout":{"size":"80"},"valueString":"","key":"name","hint":"","help":"","useSelector":"none"}},{"key":"textField","value":{"type":"textField","label":"Street: ","customLayout":{"size":"80"},"valueString":"","key":"street","hint":"","help":"","useSelector":"none"}},{"key":"horizontalLayout","value":{"type":"horizontalLayout","formData":[{"key":"textField","value":{"type":"textField","label":"City:","customLayout":{"size":"30"},"valueString":"","key":"city","hint":"","help":"","useSelector":"none"}},{"key":"textField","value":{"type":"textField","label":"State: ","customLayout":{"size":"30"},"valueString":"","key":"state","hint":"","help":"","useSelector":"none"}},{"key":"textField","value":{"type":"textField","label":"Zipcode: ","customLayout":{"size":"10"},"valueString":"","key":"zo[","hint":"","help":"","useSelector":"none"}}]}}]}}]}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"testResult":{"name":"testResult","type":"apogee.Folder","children":{"layout":{"name":"layout","type":"apogee.FunctionMember","updateData":{"argList":[],"functionBody":"return test.data.formData.map(elementResult => getElementLayout(elementResult.value))","supplementalCode":""}},"data":{"name":"data","type":"apogee.JsonMember","updateData":{"data":{"yyy":false,"zzz":1,"more":{"color":"#da2b2b","isValid":true,"sl":["Tom"],"ml":[{"key":"littleName","value":"Tom"},{"key":"bigName","value":"Thomas"}],"testGroup":[1]},"name":"T"}}},"isInputValid":{"name":"isInputValid","type":"apogee.FunctionMember","updateData":{"argList":["formValue"],"functionBody":"//If data valid, return true. If data is invalid, return an error message.\nreturn true;","supplementalCode":""}}}},"testLayout":{"name":"testLayout","type":"apogee.JsonMember","updateData":{"argList":[],"functionBody":"return test.data.formData.map(elementResult => getElementLayout(elementResult.value))","supplementalCode":""}}}}}},"components":{"main":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Apogee Forms Reference - v1.2"}]},{"type":"paragraph","content":[{"type":"text","text":"Apogee has a configurable form widget for easily creating forms. This reference illustrates how to create these forms. "}]},{"type":"heading2","content":[{"type":"text","marks":[{"type":"bold"}],"text":"Components Using the Configurable Form"}]},{"type":"paragraph","content":[{"type":"text","text":"Two examples where the form widget is used are the components "},{"type":"text","marks":[{"type":"italic"}],"text":"Action Form Cell"},{"type":"text","text":" and "},{"type":"text","marks":[{"type":"italic"}],"text":"Data Form Cell"},{"type":"text","text":"."}]},{"type":"paragraph","content":[{"type":"text","text":"A "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Form Action Cell"},{"type":"text","text":" is like a non-modal dialog box. Here the programmer configures the layout of the form, including a submit button to take action. The programmer defines a handler for the save button which defines the action. There is no saved data associated with the "},{"type":"text","marks":[{"type":"italic"}],"text":"Form Action Cell"},{"type":"text","text":"."}]},{"type":"paragraph","content":[{"type":"text","text":"A "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"Form Data Cell"},{"type":"text","text":" is similar to a "},{"type":"text","marks":[{"type":"italic"}],"text":"Data Cell"},{"type":"text","text":" except the user enters data into a form rather than text editor. The configurable form format is defined by the programmer. When the user changes the value, the "},{"type":"text","marks":[{"type":"italic"}],"text":"save bar"},{"type":"text","text":" appears just as if the user changed the value of a data table. When the user saves, the data is saved to an internal data table which can be accessed from the code."}]},{"type":"paragraph","content":[{"type":"text","text":"In either of these components, the programmer must define the layout for the form, which is described in this document."}]},{"type":"heading2","content":[{"type":"text","text":"Index of this Workspace"}]},{"type":"heading3","content":[{"type":"text","text":"Form Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formElements"},{"type":"text","text":" shows each standard form element, which you can access from the tree panel on the left."}]},{"type":"heading3","content":[{"type":"text","text":"Form Layouts"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formLayouts"},{"type":"text","text":" shows each standard form layout, which you can access from the tree panel on the left."}]},{"type":"heading3","content":[{"type":"text","text":"Selectors"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"selectors "},{"type":"text","text":"shows how to use selectors, which control one form element based on the value of another form element."}]},{"type":"heading3","content":[{"type":"text","text":"Using Expressions in Forms"}]},{"type":"paragraph","content":[{"type":"text","text":"The page "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"expressionForms"},{"type":"text","text":" shows how to use javascript expressions in forms. This requires the use of the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"meta"},{"type":"text","text":" tag."}]},{"type":"heading1","content":[{"type":"text","text":"Creator Helper Functions"}]},{"type":"paragraph","content":[{"type":"text","text":"TO DO:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"make this work with layouts (just a little rearrangement) "}]},{"type":"listItem","content":[{"type":"text","text":"?: add a visual representation of the final element (non-interactive; custom element with a config form in it, using a selector)"}]}]},{"type":"paragraph"},{"type":"paragraph","content":[{"type":"text","text":"These functions below help make the form creation widget."}]},{"type":"apogeeComponent","attrs":{"name":"createMakerFormLayout","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"test","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"testResult","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"testLayout","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Element Maker Layout"}]},{"type":"apogeeComponent","attrs":{"name":"getMakerLayout","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Element Creator Layout"}]},{"type":"paragraph","content":[{"type":"text","text":"Element Trait Strings:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"hasLabel - If this is present, the "},{"type":"text","marks":[{"type":"bold"}],"text":"label"},{"type":"text","text":" element will be included"}]},{"type":"listItem","content":[{"type":"text","text":"hasEntries - If this is present, the "},{"type":"text","marks":[{"type":"bold"}],"text":"entries"},{"type":"text","text":" element will be included"}]},{"type":"listItem","content":[{"type":"text","text":"hasChildren - If this is present, the user can select a list of child elements for a panel type element"}]},{"type":"listItem","content":[{"type":"text","text":"hasChildren - If this is present, the user can select a list of child elements for a list type element"}]},{"type":"listItem","content":[{"type":"text","text":"valueString - If this is present, the "},{"type":"text","marks":[{"type":"bold"}],"text":"initial value - string"},{"type":"text","text":" entry will be present."}]},{"type":"listItem","content":[{"type":"text","text":"valueJson - If this is present, the "},{"type":"text","marks":[{"type":"bold"}],"text":"initial value - json"},{"type":"text","text":" entry will be present."}]},{"type":"listItem","content":[{"type":"text","text":"valueStringOrJson - If this is present, the "},{"type":"text","marks":[{"type":"bold"}],"text":"initial value - string or json"},{"type":"text","text":" entry will be present."}]},{"type":"listItem","content":[{"type":"text","text":"valueBoolean - If this is present, the"},{"type":"text","marks":[{"type":"bold"}],"text":" initial value - boolean"},{"type":"text","text":" entry will be present."}]},{"type":"listItem","content":[{"type":"text","text":"hasKey"}]},{"type":"listItem","content":[{"type":"text","text":"hasHint"}]},{"type":"listItem","content":[{"type":"text","text":"hasHelp"}]},{"type":"listItem","content":[{"type":"text","text":"hasSelector"}]}]},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Element Layout"}]},{"type":"paragraph","content":[{"type":"text","text":"Arguments:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"elementFormResult - This is the output value of the \"element creator\" element."}]},{"type":"listItem","content":[{"type":"text","text":"processImplementationLayout - this is use to process the elementSpecificLayout value. The arguments are (elementSpecificLayoutValue,outElementConfig), where elementSpecificLayoutValue is the value returned from the elementSpecificLayou passed to the element creator. outElementConfig is the output elementConfig to create the element."}]}]},{"type":"apogeeComponent","attrs":{"name":"getElementLayout","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"formElements":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Form Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we show all the standard "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"ConfigurableElements"},{"type":"text","text":", each defined with all type specific properties included, shown on pages defined beneath this one."}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"yellow"}}],"text":"OTHER FEATURES - show how to see them!!!"}]},{"type":"paragraph","content":[{"type":"text","text":"See the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formLayouts"},{"type":"text","text":" section to see the standard "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"ConfigurableLayoutContainers"},{"type":"text","text":"."}]}]}},"children":{"checkbox":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"checkbox\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample checkbox with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"creator","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"outputForm","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"outputForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"creator":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"panel":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"panel\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample panel with all type-specific elements present. The panel element here is one of three inside the parent form."}]},{"type":"paragraph","content":[{"type":"text","text":"This is basically another ConfigurableForm wrapped inside an element. The appearance of the output form looks as if we just defined to checkboxes in our top level form. However, they are wrapped in a child form. This can be seen by looking at the form value."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the form info used when we are processing the top level form."}]},{"type":"apogeeComponent","attrs":{"name":"topLevelFormInfo","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"topLevelFormInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"list":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"list\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we show two forms containing list elements. The list element allows the end user to add an arbitrary number of elements to the list."}]},{"type":"heading2","content":[{"type":"text","text":"Single Element List"}]},{"type":"paragraph","content":[{"type":"text","text":"The list can be defined so there is a single element type, or in other words all elements are the same type. This must be a single configurable element. Because of this, it is often a "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"panel"},{"type":"text","text":" object. Here however we used a "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"textField"},{"type":"text","text":"."}]},{"type":"apogeeComponent","attrs":{"name":"singleElementList","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Multi Element List"}]},{"type":"paragraph","content":[{"type":"text","text":"The list can be defined so there are multiple element types. Again, each must be composed of a single configurable element object."}]},{"type":"paragraph","content":[{"type":"text","text":"There is an important difference between the multi-element list and the single element list. In the multi-element list, the entries in the output value list contains the type of element and the element value. In the single element list, the entries in the output list are just the contained element values. This is why there are two distinct list types."}]},{"type":"paragraph","content":[{"type":"text","text":"It is possible to make a multi-element list that only has a single entry, but this will be different from a single element list."}]},{"type":"apogeeComponent","attrs":{"name":"multiElementList","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"paragraph","content":[{"type":"text","text":"This form Info has a function, since it has a custom selector."}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"makerCustomProcessing","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"test","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"multiElementList":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":7000}}}}},"singleElementList":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"test":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"height":280,"isViewActive":false}}}}},"formInfo":{"type":"apogeeapp.ExtendedJsonCell","viewState":{"childDisplayState":{"views":{"Data":{"height":280,"isViewActive":false},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"makerCustomProcessing":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"colorPicker":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"colorPicker\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"colorPicker"},{"type":"text","text":" with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"creator","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"outputForm","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"creator":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false,"height":7000},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false,"height":280}}}}},"outputForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false,"height":7000}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"dropdown":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"dropdown\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"dropdown"},{"type":"text","text":" with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Maker Entries:"}]},{"type":"paragraph","content":[{"type":"text","text":"Item Specific:"}]},{"type":"paragraph","content":[{"type":"text","text":"Standard Elements:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"label"}]},{"type":"listItem","content":[{"type":"text","text":"value - literal or string?"}]},{"type":"listItem","content":[{"type":"text","text":"entries - array of literals"}]},{"type":"listItem","content":[{"type":"text","text":"key"}]},{"type":"listItem","content":[{"type":"text","text":"hint"}]},{"type":"listItem","content":[{"type":"text","text":"help"}]},{"type":"listItem","content":[{"type":"text","text":"selector"}]}]},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"creator","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"outputForm","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"creator":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false,"height":280}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"outputForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"heading":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"heading\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"heading"},{"type":"text","text":" with all type-specific elements present. This is a non-interactive element."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"makerCustomProcessing","id":0,"state":""}}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"makerCustomProcessing":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"htmlDisplay":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"htmlDisplay\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"htmlDisplay"},{"type":"text","text":" with all type-specific elements present. This is a non-interactive element that allows you to place any raw HTML. Below we inserted a div with some text."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Maker Entries:"}]},{"type":"paragraph","content":[{"type":"text","text":"Item Specific:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"html"}]}]},{"type":"paragraph","content":[{"type":"text","text":"Standard Elements:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"label"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"value - string"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"key"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"hint"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"help"}]},{"type":"listItem","content":[{"type":"text","text":"selector (?)"}]}]},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"invisible":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"invisible\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"invisible"},{"type":"text","text":" with all type-specific elements present. This is usually used to carry some payload value with the form."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Maker Entries:"}]},{"type":"paragraph","content":[{"type":"text","text":"Item Specific:"}]},{"type":"paragraph","content":[{"type":"text","text":"Standard Elements:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"label"}]},{"type":"listItem","content":[{"type":"text","text":"value - any"}]},{"type":"listItem","content":[{"type":"text","text":"key"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"hint"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"help"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"selector"}]}]},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"radioButtonGroup":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"radioButtonGroup\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"radioButtonGroup "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Maker Entries:"}]},{"type":"paragraph","content":[{"type":"text","text":"Item Specific:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"horizontal: true/false/missing"}]}]},{"type":"paragraph","content":[{"type":"text","text":"Standard Elements:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"label"}]},{"type":"listItem","content":[{"type":"text","text":"entries - literal array"}]},{"type":"listItem","content":[{"type":"text","text":"value - any"}]},{"type":"listItem","content":[{"type":"text","text":"key"}]},{"type":"listItem","content":[{"type":"text","text":"hint"}]},{"type":"listItem","content":[{"type":"text","text":"help"}]},{"type":"listItem","content":[{"type":"text","text":"selector"}]}]}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"sliderElement":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"slider\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"slider "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Maker Entries:"}]},{"type":"paragraph","content":[{"type":"text","text":"Item Specific:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"min"}]},{"type":"listItem","content":[{"type":"text","text":"max"}]},{"type":"listItem","content":[{"type":"text","text":"step"}]}]},{"type":"paragraph","content":[{"type":"text","text":"Standard Elements:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"label"}]},{"type":"listItem","content":[{"type":"text","text":"value - number"}]},{"type":"listItem","content":[{"type":"text","text":"key"}]},{"type":"listItem","content":[{"type":"text","text":"hint"}]},{"type":"listItem","content":[{"type":"text","text":"help"}]},{"type":"listItem","content":[{"type":"text","text":"selector"}]}]}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"spacerElement":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"spacer\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"spacer"},{"type":"text","text":" with all type-specific elements present. This adds a specified amount of vertical space in pixels. This is a non-interactive element."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Maker Entries:"}]},{"type":"paragraph","content":[{"type":"text","text":"Item Specific:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"height"}]}]},{"type":"paragraph","content":[{"type":"text","text":"Standard Elements:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"label"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"entries - literal array"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"value - any"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"key"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"hint"}]},{"type":"listItem","content":[{"type":"text","marks":[{"type":"highlight","attrs":{"color":"#a0a0a0"}}],"text":"help"}]},{"type":"listItem","content":[{"type":"text","text":"selector (?)"}]}]},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"textField":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"textField\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"textField"},{"type":"text","text":" with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"makerCustomProcessing","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"creator","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"outputForm","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"creator":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false,"height":7000},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false,"height":280}}}}},"outputForm":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"height":7000,"isViewActive":true},"Private":{"isViewActive":false,"height":7000}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"makerCustomProcessing":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"textarea":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"textarea\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"textarea "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"makerCustomProcessing","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"creator","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"creator":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":false},"Layout Private":{"isViewActive":false,"height":7000},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false,"height":280}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"makerCustomProcessing":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"checkboxGroup":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"checkboxGroup\" Element"}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show a sample "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"checkboxGroup "},{"type":"text","text":"with all type-specific elements present."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"makerCustomProcessing","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"creator","id":0,"state":""}},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"creator":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"makerCustomProcessing":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}}},"viewState":{"childDisplayState":null,"treeState":-1}},"formLayouts":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"paragraph"}]}},"children":{"showHideLayout":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"showHideLayout\" Layout"}]},{"type":"paragraph","content":[{"type":"text","text":"The "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"showHideLayout"},{"type":"text","text":" has a heading element that allows the end user to show or hide all the elements in the layout. The values of all the hidden elements are still in the form value when the layout is hidden."}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"showHideLayout"},{"type":"text","text":" with all type-specific elements present. Below we start the layout in the closed (or hidden) state. You can open it with the arrow that appears in the layout heading."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"makerCustomProcessing","id":0,"state":""}}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"makerCustomProcessing":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"horizontalLayout":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"The \"horizontalLayout\" Layout"}]},{"type":"paragraph","content":[{"type":"text","text":"The "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"horizontalLayout"},{"type":"text","text":" aligns the child elements horizontally. Below we put the city, state and zipcode fields in a horizontal layout."}]},{"type":"apogeeComponent","attrs":{"name":"sampleElement","id":0,"state":""}},{"type":"paragraph"},{"type":"heading2","content":[{"type":"text","text":"Form Creator"}]},{"type":"apogeeComponent","attrs":{"name":"formInfo","id":0,"state":""}},{"type":"paragraph"}]}},"children":{"sampleElement":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"formInfo":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}}},"viewState":{"childDisplayState":null,"treeState":1}},"selectors":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Selectors"}]},{"type":"paragraph","content":[{"type":"text","text":"Using "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"selectors"},{"type":"text","text":", you can control the state of one element based on the value of another element."}]},{"type":"heading2","content":[{"type":"text","text":"Simple Example"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a simple example where we can set the state of an element to \"normal\" or \"inactive\" based on a parent value."}]},{"type":"paragraph","content":[{"type":"text","text":"Here, we control the elements for the dog breed and the cat breed based on whether we have a dog or cat."}]},{"type":"apogeeComponent","attrs":{"name":"aSimpleSelection","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Multi-value Selection Example"}]},{"type":"paragraph","content":[{"type":"text","text":"In this example, we have a selector that makes the element visible if the parent value has one of multiple values."}]},{"type":"apogeeComponent","attrs":{"name":"bMultiValueSelection","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Simple Selection, Multi-value Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"There is another case we should illustrate. A checkbox group has a list of output values. It is an example of a multi-value element. In this case, a selector will work if any of the selector values are selected. See the example below."}]},{"type":"apogeeComponent","attrs":{"name":"cMultiOptionSelection","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"And, for completeness..."}]},{"type":"paragraph","content":[{"type":"text","text":"Here we allow any or multiple values to be selected in a parent will multi value selection."}]},{"type":"apogeeComponent","attrs":{"name":"dMultiValueMultiOptionSelection","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Absolute Paths"}]},{"type":"paragraph","content":[{"type":"text","text":"Above, we specified a parent key as a simple string. Doing that you can select any key in your current panel. You can also use an array of strings, in which you are specifying a key path from the root panel."}]},{"type":"paragraph","content":[{"type":"text","text":"In this example, the checkbox element labeled \"Show Other Element\" on a child panel controls the visibility of the text field labeled \"Other Element\""}]},{"type":"apogeeComponent","attrs":{"name":"eAbsoluteParentPath","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Other Selector Actions"}]},{"type":"paragraph","content":[{"type":"text","text":"The default selector action is to set the state to normal or inactive based on the value of the parent. There are other actions:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"Toggle state \"normal\" / \"inactive\" - This is the default case."}]},{"type":"listItem","content":[{"type":"text","text":"Toggle state \"normal\" / \"hidden\" - With this option, the element is hidden if the parent value is not met, AND the value still appears in the form result."}]},{"type":"listItem","content":[{"type":"text","text":"Toggle state \"normal\" / \"disabled\" - With this option, the element is disabled if the parent value is not met."}]}]},{"type":"apogeeComponent","attrs":{"name":"fOtherActions","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Custom Action"}]},{"type":"paragraph","content":[{"type":"text","text":"It is also possible to construct a custom action."}]},{"type":"paragraph","content":[{"type":"text","text":"Here you can specify a single parent OR multiple parents."}]},{"type":"paragraph","content":[{"type":"text","text":"The action function you include has the following arguments:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"childElement - This is a javascript object representing the child element"}]},{"type":"listItem","content":[{"type":"text","text":"parentElement1 - This is a javascript object representing the first parent element."}]},{"type":"listItem","content":[{"type":"text","text":"parentElement2 - If there are multiple parents, this is a javascript object representing the second parent"}]},{"type":"listItem","content":[{"type":"text","text":"... (All other specified parent elements are included too)"}]}]},{"type":"paragraph","content":[{"type":"text","text":"The main accessors you will be using from the elements are:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"getValue()"}]},{"type":"listItem","content":[{"type":"text","text":"getState()"}]},{"type":"listItem","content":[{"type":"text","text":"setValue(value)"}]},{"type":"listItem","content":[{"type":"text","text":"setState(state)"}]}]},{"type":"paragraph","content":[{"type":"text","text":"Below we show two examples of custom accessors, one with a single parent and one with multiple parents. "}]},{"type":"paragraph","content":[{"type":"text","text":"See the note below for more information on this example."}]},{"type":"apogeeComponent","attrs":{"name":"gCustomAction","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"In this example, we triggered the state of the dog breed element on the pet type being \"Dog\". However, we had some extra work to do."}]},{"type":"paragraph","content":[{"type":"text","text":"Unlike in the returned value of a form, in a selector, the value used is the value of the element whether or not the element is visible."}]},{"type":"paragraph","content":[{"type":"text","text":"Here, we show or hide the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"petType"},{"type":"text","text":" element based on whether or not the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"hasPet"},{"type":"text","text":" element is checked. So here we don't only check its value we check if it is also active."}]}]}},"children":{"aSimpleSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"bMultiValueSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"cMultiOptionSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"dMultiValueMultiOptionSelection":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"eAbsoluteParentPath":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}},"fOtherActions":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"gCustomAction":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"height":7000,"isViewActive":true},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"expressionForms":{"type":"apogeeapp.PageComponent","data":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Using Expressions in Forms"}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"},{"type":"textcolor","attrs":{"color":"red"}}],"text":"For the time being, this page is meant only for developers creating new cells."}]},{"type":"paragraph","content":[{"type":"text","text":"There is a library function which takes a form value and converts it into an a function, with appropriately annotated elements compiled as javascript expressions rather than just simple strings."}]},{"type":"paragraph","content":[{"type":"text","text":"This is done when creating some custom components. The Chart.js component, for example, uses expression on its \"Configuration\" form."}]},{"type":"paragraph","content":[{"type":"text","text":"This page shows how to set up the form to support expressions. As shown on this page, this is not intended for use in normal workspaces."}]},{"type":"heading2","content":[{"type":"text","text":"Data For Examples"}]},{"type":"apogeeComponent","attrs":{"name":"dummy","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Simple Example"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we create a simple action form. In the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"onSubmit"},{"type":"text","text":" function we call the library method to convert the form into a function body that will evaluate the expressions."}]},{"type":"paragraph","content":[{"type":"text","text":"The form must include some \"meta\" tags to properly do this. "}]},{"type":"paragraph","content":[{"type":"text","text":"In the example below we convert the first text field into an expression and the second remains as text. In addition, we \"exclude\" the value from the resulting formula if it is an empty string."}]},{"type":"paragraph","content":[{"type":"text","text":"On pressing submit, the created function body is passed into the data for the cell \"formFunctionBody\", which displays it as plain text."}]},{"type":"paragraph","content":[{"type":"text","text":"To try this example, do the following:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"In the cell "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"expressionForm1"},{"type":"text","text":", type values into the two text fields. For now, try to type "},{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"blue"}},{"type":"fontfamily","attrs":{"fontfamily":"Monospace"}}],"text":"[1,2,3]"},{"type":"text","text":" or the word "},{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"blue"}},{"type":"fontfamily","attrs":{"fontfamily":"Monospace"}}],"text":"dummy"},{"type":"text","text":" into each field."}]},{"type":"listItem","content":[{"type":"text","text":"Press submit."}]},{"type":"listItem","content":[{"type":"text","text":"View the output displayed as text in the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody1"},{"type":"text","text":" cell below. "}]},{"type":"listItem","content":[{"type":"text","text":"Copy the text from  "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody1"},{"type":"text","text":" into the formula for "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formResult1"},{"type":"text","text":". When you save it, it should have the first text field evaluated as an expression and the second as a plain string."}]}]},{"type":"apogeeComponent","attrs":{"name":"expressionForm1","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The function body for the form result is sent here."}]},{"type":"apogeeComponent","attrs":{"name":"formFunctionBody1","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"We must manually copy this into the formula for the table below, where it can be evaluated. (Again, this is not for standard workspaces, but instead for cell development.)"}]},{"type":"apogeeComponent","attrs":{"name":"formResult1","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Another Example"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is a more involved example to illustrate a few things:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"On text fields, we can specify it be an expression or we can omit this and it will be saved as a plain string."}]},{"type":"listItem","content":[{"type":"text","text":"On a panel, if there are child values that we want to convert to an expression, we must include the meta field given in here."}]},{"type":"listItem","content":[{"type":"text","text":"On  a list, if there are child values that we want to convert to an expression, we must include the meta field given below."}]},{"type":"listItem","content":[{"type":"text","text":"On an element, we can add the \"excludeValue\" meta field."}]}]},{"type":"paragraph","content":[{"type":"text","text":"To try this example, do the following:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"In the cell "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"expressionForm2"},{"type":"text","text":", as new a new entry into the list."}]},{"type":"listItem","content":[{"type":"text","text":"In the cell "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"expressionForm1"},{"type":"text","text":", type values into the two text fields. For now, try to type "},{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"blue"}},{"type":"fontfamily","attrs":{"fontfamily":"Sans-serif"}}],"text":"[1,2,3]"},{"type":"text","text":" or the word "},{"type":"text","marks":[{"type":"textcolor","attrs":{"color":"blue"}},{"type":"fontfamily","attrs":{"fontfamily":"Sans-serif"}}],"text":"dummy"},{"type":"text","text":" into each field."}]},{"type":"listItem","content":[{"type":"text","text":"Press submit."}]},{"type":"listItem","content":[{"type":"text","text":"View the output displayed as text in the "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody2"},{"type":"text","text":" cell below. "}]},{"type":"listItem","content":[{"type":"text","text":"Copy the text from  "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formFunctionBody2"},{"type":"text","text":" into the formula for "},{"type":"text","marks":[{"type":"italic"},{"type":"bold"}],"text":"formResult2"},{"type":"text","text":". When you save it, it should have the first text field evaluated as an expression and the second as a plain string."}]}]},{"type":"apogeeComponent","attrs":{"name":"expressionForm2","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"The function body for the form result is sent here."}]},{"type":"apogeeComponent","attrs":{"name":"formFunctionBody2","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"We must manually copy this into the formula for the table below, where it can be evaluated. (Again, this is not for standard workspaces, but instead for cell development.)"}]},{"type":"apogeeComponent","attrs":{"name":"formResult2","id":0,"state":""}},{"type":"heading2"}]}},"children":{"expressionForm2":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"formFunctionBody1":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"formResult1":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"formFunctionBody2":{"type":"apogeeapp.JsonCell","dataView":"Text Data","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"formResult2":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"expressionForm1":{"type":"apogeeapp.ActionFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"dummy":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"getElementLayout":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"getMakerLayout":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false,"height":7000}}}}},"createMakerFormLayout":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Code":{"height":7000,"isViewActive":false},"Private":{"isViewActive":false}}}}},"test":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":false,"height":7000},"Layout Private":{"isViewActive":false,"height":7000},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":true,"height":280}}}}},"testResult":{"type":"apogeeapp.DataFormCell","viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Layout Code":{"isViewActive":true,"height":7000},"Layout Private":{"isViewActive":false},"isInputValid(formValue)":{"isViewActive":false},"isInputValid Private":{"isViewActive":false},"Form Value":{"isViewActive":false,"height":280}}}}},"testLayout":{"type":"apogeeapp.JsonCell","dataView":"Colorized","viewState":{"childDisplayState":{"views":{"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true,"tabShowing":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}