{"fileType":"apogee app js workspace","version":"1.0","references":{"refEntries":[{"entryType":"js link","data":{"url":"http://localhost:8888/apogeejs-admin/dev/jsxModule/lib/react.development.js","name":"react.development.js"}},{"entryType":"js link","data":{"url":"http://localhost:8888/apogeejs-admin/dev/jsxModule/lib/react-dom.development.js","name":"react-dom.development.js"}}],"viewState":{"treeState":1,"lists":{"apogee module":{"treeState":0},"es module":{"treeState":0},"js link":{"treeState":1},"css link":{"treeState":0}}}},"code":{"model":{"fileType":"apogee model","version":"1.0","name":"Workspace","children":{"modules":{"name":"modules","type":"apogee.Folder","children":{"App":{"name":"App","type":"apogee.Folder","childrenNotWriteable":true,"children":{"jsx":{"name":"jsx","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  //props: moduleInfoArray\n  const moduleInfoArray = props.moduleInfoArray;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", null, \"Module Manager\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"moduleListContainer\"\n  }, props.moduleInfoArray.map(moduleInfo => /*#__PURE__*/React.createElement(ModuleElement, {\n    moduleInfo: moduleInfo,\n    key: moduleInfo.name\n  }))));\n}\nreturn __createJsx(props)\n","supplementalCode":""}},"props":{"name":"props","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"return {\n    moduleInfoArray: initialization.moduleInfoArray\n}","supplementalCode":""}}}},"ModuleElement":{"name":"ModuleElement","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //properties moduleInfo\n\n  const moduleInfo = props.moduleInfo;\n  const expandedStateArray = React.useState(false);\n  const expanded = expandedStateArray[0];\n  const setExpanded = expandedStateArray[1];\n  const selectedStateArray = React.useState(() => getDefaultSelectedVersion(moduleInfo));\n  const selectedVersion = selectedStateArray[0];\n  const setSelectedVersion = selectedStateArray[1];\n  const selectedVersionInfo = moduleInfo.versions.find(versionInfo => versionInfo.version == selectedVersion);\n  const title = selectedVersionInfo.displayName ? `${selectedVersionInfo.displayName}: ${moduleInfo.name}` : moduleInfo.name;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"moduleCell\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headerCell\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titleField\"\n  }, title), /*#__PURE__*/React.createElement(StatusElement, {\n    moduleInfo: moduleInfo\n  }), selectedVersionInfo.desc ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shortDescField\"\n  }, selectedVersionInfo.desc) : \"\", /*#__PURE__*/React.createElement(React.Fragment, null, expanded ? /*#__PURE__*/React.createElement(BodyElement, {\n    moduleInfo: moduleInfo,\n    selectedVersion: selectedVersion,\n    setSelectedVersion: setSelectedVersion\n  }) : \"\", /*#__PURE__*/React.createElement(MoreLessElement, {\n    expanded: expanded,\n    setExpanded: setExpanded\n  }))));\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"BodyElement":{"name":"BodyElement","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\";\n\n  const moduleInfo = props.moduleInfo;\n  const selectedVersion = props.selectedVersion;\n  const setSelectedVersion = props.setSelectedVersion;\n  const selectedVersionInfo = moduleInfo.versions.find(versionInfo => versionInfo.version == selectedVersion);\n  const demoWorkspaces = selectedVersionInfo.demoWorkspaces;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bodyCell\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftCell\"\n  }, /*#__PURE__*/React.createElement(VersionSelector, {\n    moduleInfo: moduleInfo,\n    selectedVersion: selectedVersion,\n    setSelectedVersion: setSelectedVersion\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightCell\"\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModuleCommands, {\n    moduleInfo: moduleInfo,\n    selectedVersion: selectedVersion\n  }), demoWorkspaces && demoWorkspaces.length > 0 ? /*#__PURE__*/React.createElement(DemoWorkspaces, {\n    demoWorkspaces: demoWorkspaces\n  }) : \"\", selectedVersionInfo.webLink ? /*#__PURE__*/React.createElement(ModuleWebLink, {\n    url: selectedVersionInfo.webLink\n  }) : \"\")));\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"MoreLessElement":{"name":"MoreLessElement","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //props setExpanded\n\n  const expanded = props.expanded;\n  const setExpanded = props.setExpanded;\n  const msg = expanded ? 'Show Less' : 'Show More';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"moreOrLessContainer\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    className: \"moreOrLessLink\",\n    onClick: () => setExpanded(!expanded)\n  }, msg));\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"DemoWorkspaces":{"name":"DemoWorkspaces","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //props versionInfo\n\n  const demoWorkspaces = props.demoWorkspaces;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referenceCommandSetContainer\"\n  }, demoWorkspaces.map(workspaceInfo => /*#__PURE__*/React.createElement(DemoWorkspaceLink, {\n    workspaceInfo: workspaceInfo\n  })));\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"DemoWorkspaceLink":{"name":"DemoWorkspaceLink","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //props workspace info\n\n  const workspaceInfo = props.workspaceInfo;\n  let linkText = \"Open Sample Workspace\";\n  if (workspaceInfo.name) linkText += \": \" + workspaceInfo.name;\n\n  const onClick = () => messageCommands.openWebWorkspace(workspaceInfo.url);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referenceCommandContainer\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    key: workspaceInfo.url,\n    className: \"referenceCommandLink\",\n    href: \"#\",\n    onClick: onClick\n  }, linkText));\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"ModuleWebLink":{"name":"ModuleWebLink","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //props url\n\n  const url = props.url;\n\n  const onClick = () => messageCommands.openWebLink(url);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"referenceCommandSetContainer\"\n  }, /*#__PURE__*/React.createElement(\"label\", null, \"Module Web Site: \"), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"referenceCommandLink\",\n    href: \"#\",\n    onClick: onClick\n  }, url));\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"VersionSelector":{"name":"VersionSelector","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //props moduleInfo\n\n  const moduleInfo = props.moduleInfo;\n  const selectedVersion = props.selectedVersion;\n  const setSelectedVersion = props.setSelectedVersion;\n  const latestVersion = moduleInfo.versions[moduleInfo.versions.length - 1].version;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"versionContainer\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"versionLabel\"\n  }, \"Version: \"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setSelectedVersion(event.target.value),\n    value: selectedVersion\n  }, moduleInfo.versions.map(versionInfo => /*#__PURE__*/React.createElement(\"option\", {\n    value: versionInfo.version\n  }, versionInfo.version))), selectedVersion != latestVersion ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notLatestContainer\"\n  }, \"Not Latest Version!\") : \"\");\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"ModuleCommands":{"name":"ModuleCommands","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //props moduleInfo\n\n  const moduleInfo = props.moduleInfo;\n  const selectedVersion = props.selectedVersion;\n  const commandArray = getCommandArray(moduleInfo, selectedVersion);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"moduleCommandSetContainer\"\n  }, commandArray.map(command => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"moduleCommandContainer\",\n      key: command.msg\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"moduleCommandLink\",\n      onClick: command.callback\n    }, command.msg));\n  }));\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"getCommandArray":{"name":"getCommandArray","type":"apogee.FunctionMember","fields":{"argList":["moduleInfo","selectedVersion"],"functionBody":"const loadedInfo = moduleInfo.loaded;\nconst loadedVersion = loadedInfo ? loadedInfo.version : undefined\nconst installedVersion = moduleInfo.installed;\nconst selectedVersionEntry = moduleInfo.versions.find(versionEntry => versionEntry.version == selectedVersion)\n\nconst platform = initialization.initModuleData.platform;\n\nlet commands = [];\n\nif(selectedVersionEntry) {\n    if(platform == \"es\") {\n        if(loadedVersion) {\n            //unload command\n            commands.push({\n                msg: \"Unload Module\",\n                callback: () => messageCommands.unloadApogeeModule(loadedInfo.entryId)\n            });\n            \n            //upgrade downgrade command\n            if(selectedVersion != loadedVersion) {\n                let versionChangeMsg;\n                \n                if(isFirstVersionNewer(selectedVersion,loadedVersion)) {\n                    versionChangeMsg = \"Upgrade to this Version\"\n                    //I should probably add a note if this is not the latest version\n                }\n                else {\n                    versionChangeMsg = \"Downgrade to this Older Version\"\n                }\n                \n                commands.push({\n                    msg: versionChangeMsg,\n                    callback: () => messageCommands.updateApogeeModule(loadedInfo.entryId,moduleInfo.name,selectedVersionEntry)\n                })\n            }\n        }\n        else {\n            commands.push({\n                msg: \"Load Module\",\n                callback: () => messageCommands.loadApogeeModule(moduleInfo.name,selectedVersionEntry)\n            });\n        }\n    }\n    else if(platform == \"npm\") {\n        if(installedVersion) {\n            //unload command\n            commands.push({\n                msg: \"Uninstall Module from App\",\n                callback: () => apogeeUserAlert(`Uninstall Module from App ${moduleInfo.name} ${selectedVersion}`)\n            });\n            \n            //upgrade downgrade command\n            if(selectedVersion != installedVersion) {\n                let versionChangeMsg;\n                \n                if(isFirstVersionNewer(selectedVersion,installedVersion)) {\n                    versionChangeMsg = \"Upgrade Installed to this Version\"\n                    //I should probably add a note if this is not the latest version\n                }\n                else {\n                    versionChangeMsg = \"Downgrade Installed to this Older Version\"\n                }\n                \n                commands.push({\n                    msg: versionChangeMsg,\n                    callback: () => apogeeUserAlert(`${moduleInfo.name} - ${versionChangeMsg}: ${selectedVersion}`)\n                })\n            }\n        }\n        else {\n            commands.push({\n                msg: \"Install Module into App\",\n                callback: () => apogeeUserAlert(`Install Module into App ${moduleInfo.name} ${selectedVersion}`)\n            });\n        }\n        \n        if(loadedVersion) {\n            //unload command\n            commands.push({\n                msg: \"Unload Module from Workspace\",\n                callback: () => apogeeUserAlert(`Unload Module from Workspace ${moduleInfo.name} ${selectedVersion}`)\n            });\n            \n            //upgrade downgrade command\n            if(selectedVersion != loadedVersion) {\n                let versionChangeMsg;\n                \n                if(isFirstVersionNewer(selectedVersion,loadedVersion)) {\n                    versionChangeMsg = \"Upgrade Loaded to this Version\"\n                    //I should probably add a note if this is not the latest version\n                }\n                else {\n                    versionChangeMsg = \"Downgrade Loaded to this Older Version\"\n                }\n                \n                commands.push({\n                    msg: versionChangeMsg,\n                    callback: () => apogeeUserAlert(`${moduleInfo.name} - ${versionChangeMsg}: ${selectedVersion}`)\n                })\n            }\n        }\n        else {\n            commands.push({\n                msg: \"Load Module into Workspace\",\n                callback: () => apogeeUserAlert(`Load Module into Workspace ${moduleInfo.name} ${selectedVersion}`)\n            });\n        }\n    }\n    else {\n        //unrecognized platform - no commands!\n    }\n}\nelse {\n    //selected version entry not found! we should print some error message or something\n}\n\nreturn commands","supplementalCode":""}},"StatusElement":{"name":"StatusElement","type":"apogee.FunctionMember","fields":{"argList":["props"],"functionBody":"\nfunction __createJsx(props) {\n  \"//>//\"; //props moduleInfo\n\n  const moduleInfo = props.moduleInfo;\n  const platform = initialization.initModuleData.platform;\n  let msg;\n\n  if (platform == \"es\") {\n    if (moduleInfo.loaded) {\n      msg = `Loaded in Workspace: ${moduleInfo.loaded.version}`;\n    } else {\n      msg = \"Not Loaded in Workspace\";\n    }\n  } else if (platform == \"npm\") {\n    if (moduleInfo.loaded && moduleInfo.installed) {\n      msg = `Loaded in Workspace: ${moduleInfo.loaded}; Installed in app: ${moduleInfo.installed}`;\n    } else if (moduleInfo.installed) {\n      msg = `Not Loaded in Workspace. Installed in app: ${moduleInfo.installed}`;\n    } else if (moduleInfo.loaded) {\n      msg = `Loaded in Workspace: ${moduleInfo.loaded.version}, Not installed in app!`;\n    } else {\n      msg = \"Not Loaded in Workspace or Installed in App\";\n    }\n  } else {\n    msg = `Platform expected 'es' or 'npm', found: ${platform}`;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statusField\"\n  }, msg);\n  \"//>//\";\n}\nreturn __createJsx(props)\n"}},"getDefaultSelectedVersion":{"name":"getDefaultSelectedVersion","type":"apogee.FunctionMember","fields":{"argList":["moduleInfo"],"functionBody":"if(moduleInfo.loaded) {\n    return moduleInfo.loaded.version\n}\nelse if(moduleInfo.installed) {\n    return moduleInfo.installed\n}\nelse {\n    return moduleInfo.versions[moduleInfo.versions.length-1].version\n}","supplementalCode":""}},"isFirstVersionNewer":{"name":"isFirstVersionNewer","type":"apogee.FunctionMember","fields":{"argList":["firstVersion","secondVersion"],"functionBody":"//TEMPORARY IMPLEMENTATION - not correct\nconsole.log(`version compare: ${firstVersion} ${secondVersion} ${(firstVersion > secondVersion)}`)\nreturn (firstVersion > secondVersion); ","supplementalCode":""}}}},"initialization":{"name":"initialization","type":"apogee.Folder","children":{"globalStuff":{"name":"globalStuff","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"//data.onInitModulesMsg;\n//data.onAppStatusMsg;\n","supplementalCode":""}},"initModuleData":{"name":"initModuleData","type":"apogee.DataMember","fields":{"invalidValue":true}},"appStatusData":{"name":"appStatusData","type":"apogee.DataMember","fields":{"invalidValue":true}},"moduleInfoArray":{"name":"moduleInfoArray","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"//insert the loaded and installed info in the the modules list\n\n//make a writeable version\nlet moduleArray = apogeeutil.jsonCopy(combinedModuleListFile.modules);\n\nappStatusData.loaded.forEach(loadedModuleEntry => {\n    let refFileEntry = moduleArray.find(moduleEntry => moduleEntry.name == loadedModuleEntry.referenceData.moduleName)\n    if(!refFileEntry) {\n        throw new Error(\"Unknown Error: Module entry from app not found in combined module entries!\")\n    }\n    \n    refFileEntry.loaded = {\n        entryId: loadedModuleEntry.entryId,\n        version: loadedModuleEntry.referenceData.version\n    }\n})\n\nreturn moduleArray;\n\n","supplementalCode":""}},"sendMessage":{"name":"sendMessage","type":"apogee.FunctionMember","fields":{"argList":["messageType","commandData"],"functionBody":"let messageData = {};\nmessageData.commandData = commandData;\n\n//this identifies the window sending the message\nmessageData.windowId = callerInfo.windowId;\n\nif(window.opener) {\n    console.log(\"sending message: \" + messageType);\n    window.opener.postMessage({message: messageType, value: messageData},callerInfo.callingUrl);\n}","supplementalCode":""}},"callerInfo":{"name":"callerInfo","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"//lod the url params\nvar params = new URLSearchParams(window.location.search);\n\nlet callingUrl = params.get(\"callingUrl\");\n// if(!callingUrl) {\n//     throw new Error(\"CallingUrl not found in input.\");\n// }\n\nlet windowId = params.get(\"windowId\");\n// if(!windowId) {\n//     throw new Error(\"Window ID not found in input.\");\n// }\n\nreturn { callingUrl, windowId }","supplementalCode":""}},"initPage":{"name":"initPage","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"window.onmessage = receiveMessage\nconsole.log(\"Message listener started!\");\nsendMessage(\"opened\",{});\nreturn \"OK\";","supplementalCode":""}},"receiveMessage":{"name":"receiveMessage","type":"apogee.FunctionMember","fields":{"argList":["event"],"functionBody":"console.log(\"received message: \" + event.data.message);\nswitch(event.data.message) {\n    case \"initModules\": \n        apogeeMessenger.dataUpdate(\"initModuleData\",event.data.value)\n        break;\n\n    case \"appStatus\": \n        apogeeMessenger.dataUpdate(\"appStatusData\",event.data.value)\n        break;\n\n    case \"appClosed\": \n        window.close();\n        break;\n}","supplementalCode":""}},"extraModuleSearchCell":{"name":"extraModuleSearchCell","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"\ndebugger\nif(appStatusData.loaded) {\n    let unaccountedModules = []\n    \n    appStatusData.loaded.forEach(statusEntry => {\n        let appLoadedData = statusEntry.referenceData;\n        \n        //find module\n        let repoModuleEntry = combinedModuleListFile.modules.find(moduleEntry => moduleEntry.name == appLoadedData.moduleName)\n        let repoVersionEntry;\n        if(repoModuleEntry) {\n            repoVersionEntry = repoModuleEntry.versions.find(versionEntry => versionEntriesEqual(versionEntry,appLoadedData))\n        }\n        \n        //add an extraModuleEntry if a matching repo version entry was not found\n        if(!repoVersionEntry) {\n            let unaccountedModuleEntry = {};\n            unaccountedModuleEntry.name = appLoadedData.moduleName\n            unaccountedModuleEntry.versions = [];\n            \n            let versionData = {};\n            Object.assign(versionData,appLoadedData)\n            delete versionData.moduleName\n            unaccountedModuleEntry.versions.push(versionData);\n            \n            unaccountedModules.push(unaccountedModuleEntry)\n        }\n    })\n    \n    if(unaccountedModules.length > 0) {\n        let unaccountedModulesFile = {modules: unaccountedModules};\n        let newExtraModuleListFile = mergeRepoModuleListFile(extraModuleListFile,unaccountedModulesFile);\n        if(!_.isEqual(newExtraModuleListFile,extraModuleListFile)) {\n            apogeeMessenger.dataUpdate(\"extraModuleListFile\",newExtraModuleListFile);\n        }\n    }\n}\n\n//not supporting installed now!!!\n\nreturn \"OK\";","supplementalCode":""}},"mergeRepoModuleListFile":{"name":"mergeRepoModuleListFile","type":"apogee.FunctionMember","fields":{"argList":["file1","file2"],"functionBody":"let newFile = apogeeutil.jsonCopy(file1);\n\nfile2.modules.forEach(moduleEntry2 => {\n    let moduleEntry1 = newFile.modules.find(moduleEntry1 => moduleEntry1.name == moduleEntry2.name);\n    if(moduleEntry1) {\n        moduleEntry2.versions.forEach(versionEntry2 => {\n            let versionEntry1 = moduleEntry1.versions.find(versionEntry1 => versionEntriesEqual(versionEntry1,versionEntry2))\n            if(!versionEntry1) {\n                moduleEntry1.versions.push(versionEntry2)\n            }\n        })\n    }\n    else {\n        newFile.modules.push(moduleEntry2)\n    }\n})\n\nreturn newFile;","supplementalCode":""}},"extraModuleListFile":{"name":"extraModuleListFile","type":"apogee.DataMember","fields":{"data":{"modules":[]}}},"repoModuleListFiles":{"name":"repoModuleListFiles","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"return Promise.all(initModuleData.repositories.map(url => apogeeutil.jsonRequest(url)))","supplementalCode":""}},"versionEntriesEqual":{"name":"versionEntriesEqual","type":"apogee.FunctionMember","fields":{"argList":["versionEntry1","versionEntry2"],"functionBody":"return (\n    (versionEntry1.version == versionEntry2.version) &&\n    (versionEntry1.url == versionEntry2.url) &&\n    (versionEntry1.loadFromNpm == versionEntry2.loadFromNpm)\n)","supplementalCode":""}},"combinedModuleListFile":{"name":"combinedModuleListFile","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"//merge the repo files\nlet combinedFile\n\nif(repoModuleListFiles.length == 1) {\n    combinedFile = repoModuleListFiles[0]\n}\nelse {\n    repoModuleListFiles.forEach( (repoModuleFile,index) => {\n        if(index == 0) {\n            combinedFile = repoModuleFile\n        }\n        else {\n            combinedFile = mergeRepoModuleListFile(combinedFile,repoModuleFile)\n        }\n    })\n}\n\n//add the list file\nif((extraModuleListFile.modules)&&(extraModuleListFile.modules.length > 0)) {\n    combinedFile = mergeRepoModuleListFile(combinedFile,extraModuleListFile)\n}\n\nreturn combinedFile","supplementalCode":""}}}},"CSS":{"name":"CSS","type":"apogee.Folder","children":{"dummyCustomComponent":{"name":"dummyCustomComponent","type":"apogee.DataMember","fields":{"data":""}}}},"testing":{"name":"testing","type":"apogee.Folder","children":{"esInitModuleData":{"name":"esInitModuleData","type":"apogee.DataMember","fields":{"data":{"platform":"es","repositories":["http://localhost:8888/apogeejs-admin/dev/moduleManager/moduleDataTest.json"]}}},"npmInitModuleData":{"name":"npmInitModuleData","type":"apogee.DataMember","fields":{"data":{"platform":"npm","repositories":["http://localhost:8888/apogeejs-admin/dev/moduleManager/moduleDataTest.json"]}}},"testForm":{"name":"testForm","type":"apogee.Folder","childrenNotWriteable":true,"children":{"formData":{"name":"formData","type":"apogee.DataMember","fields":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicRadioGroup","value":{"uniqueKey":"basicRadioGroup","type":"radioButtonGroup","label":"Init Module Data","entriesList":[{"valueMixed":"esInitModuleData","valueType":"expressionReference","displayLabel":"esInitModuleData"},{"valueMixed":"npmInitModuleData","valueType":"expressionReference","displayLabel":"npmInitModuleData"},{"valueMixed":"apogeeutil.INVALID_VALUE","valueType":"expressionReference","displayLabel":"Invalid Value"}],"entriesType":"value","customLayout":{"vertical":true},"valueMixed":"apogeeutil.INVALID_VALUE","valueType":"expressionReference","hint":"","help":"","useSelector":"none","key":"initModuleData"}},{"key":"basicRadioGroup","value":{"uniqueKey":"basicRadioGroup","type":"radioButtonGroup","label":"App Status Data","entriesList":[{"valueMixed":"esAppStatusData","valueType":"expressionReference","displayLabel":"esAppStatusData"},{"valueMixed":"npmAppStatusData","valueType":"expressionReference","displayLabel":"npmAppStatusData"},{"valueMixed":"apogeeutil.INVALID_VALUE","valueType":"expressionReference","displayLabel":"Invalid Value"}],"entriesType":"value","customLayout":{"vertical":true},"valueMixed":"apogeeutil.INVALID_VALUE","valueType":"expressionReference","hint":"","help":"","useSelector":"none","key":"appStatusData"}},{"key":"basicSubmit","value":{"uniqueKey":"basicSubmit","type":"submit","customLayout":{"useSubmit":true,"submitLabel":"OK","onSubmit":"apogeeMessenger.compoundDataUpdate([\n    [\"initialization.initModuleData\",formValue.initModuleData],\n    [\"initialization.appStatusData\",formValue.appStatusData]\n])","useCancel":false},"hint":"","help":""}}]}}},"formResult":{"name":"formResult","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"let output = {};\noutput[\"uniqueKey\"] = \"topLevelDataPanel\"\noutput[\"type\"] = \"panel\"\noutput[\"formData\"]= []\noutput[\"formData\"][0]= {};\noutput[\"formData\"][0][\"key\"] = \"basicRadioGroup\"\noutput[\"formData\"][0][\"value\"]= {};\noutput[\"formData\"][0][\"value\"][\"uniqueKey\"] = \"basicRadioGroup\"\noutput[\"formData\"][0][\"value\"][\"type\"] = \"radioButtonGroup\"\noutput[\"formData\"][0][\"value\"][\"label\"] = \"Init Module Data\"\noutput[\"formData\"][0][\"value\"][\"entriesList\"]= []\noutput[\"formData\"][0][\"value\"][\"entriesList\"][0]= {};\noutput[\"formData\"][0][\"value\"][\"entriesList\"][0][\"valueMixed\"] = esInitModuleData\noutput[\"formData\"][0][\"value\"][\"entriesList\"][0][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][0][\"value\"][\"entriesList\"][0][\"displayLabel\"] = \"esInitModuleData\"\noutput[\"formData\"][0][\"value\"][\"entriesList\"][1]= {};\noutput[\"formData\"][0][\"value\"][\"entriesList\"][1][\"valueMixed\"] = npmInitModuleData\noutput[\"formData\"][0][\"value\"][\"entriesList\"][1][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][0][\"value\"][\"entriesList\"][1][\"displayLabel\"] = \"npmInitModuleData\"\noutput[\"formData\"][0][\"value\"][\"entriesList\"][2]= {};\noutput[\"formData\"][0][\"value\"][\"entriesList\"][2][\"valueMixed\"] = apogeeutil.INVALID_VALUE\noutput[\"formData\"][0][\"value\"][\"entriesList\"][2][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][0][\"value\"][\"entriesList\"][2][\"displayLabel\"] = \"Invalid Value\"\noutput[\"formData\"][0][\"value\"][\"entriesType\"] = \"value\"\noutput[\"formData\"][0][\"value\"][\"customLayout\"]= {};\noutput[\"formData\"][0][\"value\"][\"customLayout\"][\"vertical\"] = true\noutput[\"formData\"][0][\"value\"][\"valueMixed\"] = apogeeutil.INVALID_VALUE\noutput[\"formData\"][0][\"value\"][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][0][\"value\"][\"hint\"] = \"\"\noutput[\"formData\"][0][\"value\"][\"help\"] = \"\"\noutput[\"formData\"][0][\"value\"][\"useSelector\"] = \"none\"\noutput[\"formData\"][0][\"value\"][\"key\"] = \"initModuleData\"\noutput[\"formData\"][1]= {};\noutput[\"formData\"][1][\"key\"] = \"basicRadioGroup\"\noutput[\"formData\"][1][\"value\"]= {};\noutput[\"formData\"][1][\"value\"][\"uniqueKey\"] = \"basicRadioGroup\"\noutput[\"formData\"][1][\"value\"][\"type\"] = \"radioButtonGroup\"\noutput[\"formData\"][1][\"value\"][\"label\"] = \"App Status Data\"\noutput[\"formData\"][1][\"value\"][\"entriesList\"]= []\noutput[\"formData\"][1][\"value\"][\"entriesList\"][0]= {};\noutput[\"formData\"][1][\"value\"][\"entriesList\"][0][\"valueMixed\"] = esAppStatusData\noutput[\"formData\"][1][\"value\"][\"entriesList\"][0][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][1][\"value\"][\"entriesList\"][0][\"displayLabel\"] = \"esAppStatusData\"\noutput[\"formData\"][1][\"value\"][\"entriesList\"][1]= {};\noutput[\"formData\"][1][\"value\"][\"entriesList\"][1][\"valueMixed\"] = npmAppStatusData\noutput[\"formData\"][1][\"value\"][\"entriesList\"][1][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][1][\"value\"][\"entriesList\"][1][\"displayLabel\"] = \"npmAppStatusData\"\noutput[\"formData\"][1][\"value\"][\"entriesList\"][2]= {};\noutput[\"formData\"][1][\"value\"][\"entriesList\"][2][\"valueMixed\"] = apogeeutil.INVALID_VALUE\noutput[\"formData\"][1][\"value\"][\"entriesList\"][2][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][1][\"value\"][\"entriesList\"][2][\"displayLabel\"] = \"Invalid Value\"\noutput[\"formData\"][1][\"value\"][\"entriesType\"] = \"value\"\noutput[\"formData\"][1][\"value\"][\"customLayout\"]= {};\noutput[\"formData\"][1][\"value\"][\"customLayout\"][\"vertical\"] = true\noutput[\"formData\"][1][\"value\"][\"valueMixed\"] = apogeeutil.INVALID_VALUE\noutput[\"formData\"][1][\"value\"][\"valueType\"] = \"expressionReference\"\noutput[\"formData\"][1][\"value\"][\"hint\"] = \"\"\noutput[\"formData\"][1][\"value\"][\"help\"] = \"\"\noutput[\"formData\"][1][\"value\"][\"useSelector\"] = \"none\"\noutput[\"formData\"][1][\"value\"][\"key\"] = \"appStatusData\"\noutput[\"formData\"][2]= {};\noutput[\"formData\"][2][\"key\"] = \"basicSubmit\"\noutput[\"formData\"][2][\"value\"]= {};\noutput[\"formData\"][2][\"value\"][\"uniqueKey\"] = \"basicSubmit\"\noutput[\"formData\"][2][\"value\"][\"type\"] = \"submit\"\noutput[\"formData\"][2][\"value\"][\"customLayout\"]= {};\noutput[\"formData\"][2][\"value\"][\"customLayout\"][\"useSubmit\"] = true\noutput[\"formData\"][2][\"value\"][\"customLayout\"][\"submitLabel\"] = \"OK\"\noutput[\"formData\"][2][\"value\"][\"customLayout\"][\"onSubmit\"] = function(formValue){\napogeeMessenger.compoundDataUpdate([\n    [\"initialization.initModuleData\",formValue.initModuleData],\n    [\"initialization.appStatusData\",formValue.appStatusData]\n])\n}\noutput[\"formData\"][2][\"value\"][\"customLayout\"][\"useCancel\"] = false\noutput[\"formData\"][2][\"value\"][\"hint\"] = \"\"\noutput[\"formData\"][2][\"value\"][\"help\"] = \"\"\nreturn output;","supplementalCode":""}},"data":{"name":"data","type":"apogee.DesignerActionFormMember"}}},"esAppStatusData":{"name":"esAppStatusData","type":"apogee.DataMember","fields":{"data":{"loaded":[{"entryId":1,"referenceData":{"moduleName":"apogeejs-module-chartjs","version":"4.0.0-p.2","url":"http://localhost:8888/apogeejs-module-chartjs/src/ChartJSComponentModule2.js","demoWorkspaces":[{"url":"http://localhost:8888/apogeejs-module-chartjs/chartDemoWorkspaceLocal.json"}],"webLink":"https://apogeejs.com"}},{"entryId":2,"referenceData":{"moduleName":"multi-login-component","version":"2.0.0-p.1","url":"http://localhost:8888/apogeejs-admin/dev/moduleCreator/multiComponent/MultiLoginComponentModule.js"}},{"entryId":3,"referenceData":{"moduleName":"apogeejs-module-csv","version":"3.0.0","displayName":"CSV Module - Papaparse","desc":"This module parses CSV text into JSON. It uses the Papaparse CSV library.","url":"http://localhost:8888/apogeejs-module-csv/src/CSVComponentModule.js","demoWorkspaces":[{"url":"http://localhost:8888/apogeejs-module-csv/csvParseWorkspaceLocal.json"}],"webLink":"https://apogeejs.com"}},{"entryId":4,"referenceData":{"moduleName":"apogeejs-module-dummy","version":"1.0.0","displayName":"Dummy Module","url":"http://localhost:8888/apogeejs-module-dummy/dummy/DummyModule.js","demoWorkspaces":[{"url":"http://localhost:8888/apogeejs-module-csv/XXXcsvParseWorkspaceLocal.json"}],"webLink":"https://apogeejs.com"}}]}}},"npmAppStatusData":{"name":"npmAppStatusData","type":"apogee.DataMember","fields":{"data":{"app":"TBD","version":"TBD","loaded":[]}}},"resetCachedExtraModulesForm":{"name":"resetCachedExtraModulesForm","type":"apogee.Folder","childrenNotWriteable":true,"children":{"formData":{"name":"formData","type":"apogee.DataMember","fields":{"data":{"uniqueKey":"topLevelDataPanel","type":"panel","formData":[{"key":"basicSubmit","value":{"uniqueKey":"basicSubmit","type":"submit","customLayout":{"useSubmit":true,"submitLabel":"OK","onSubmit":"let clearedValue = {\n    modules: []\n}\napogeeMessenger.dataUpdate(\"initialization.extraModuleListFile\",clearedValue)","useCancel":false},"hint":"","help":""}}]}}},"formResult":{"name":"formResult","type":"apogee.DataMember","fields":{"argList":[],"functionBody":"let output = {};\noutput[\"uniqueKey\"] = \"topLevelDataPanel\"\noutput[\"type\"] = \"panel\"\noutput[\"formData\"]= []\noutput[\"formData\"][0]= {};\noutput[\"formData\"][0][\"key\"] = \"basicSubmit\"\noutput[\"formData\"][0][\"value\"]= {};\noutput[\"formData\"][0][\"value\"][\"uniqueKey\"] = \"basicSubmit\"\noutput[\"formData\"][0][\"value\"][\"type\"] = \"submit\"\noutput[\"formData\"][0][\"value\"][\"customLayout\"]= {};\noutput[\"formData\"][0][\"value\"][\"customLayout\"][\"useSubmit\"] = true\noutput[\"formData\"][0][\"value\"][\"customLayout\"][\"submitLabel\"] = \"OK\"\noutput[\"formData\"][0][\"value\"][\"customLayout\"][\"onSubmit\"] = function(formValue){\nlet clearedValue = {\n    modules: []\n}\napogeeMessenger.dataUpdate(\"initialization.extraModuleListFile\",clearedValue)\n}\noutput[\"formData\"][0][\"value\"][\"customLayout\"][\"useCancel\"] = false\noutput[\"formData\"][0][\"value\"][\"hint\"] = \"\"\noutput[\"formData\"][0][\"value\"][\"help\"] = \"\"\nreturn output;","supplementalCode":""}},"data":{"name":"data","type":"apogee.DesignerActionFormMember"}}}}},"messageCommands":{"name":"messageCommands","type":"apogee.Folder","children":{"openWebLink":{"name":"openWebLink","type":"apogee.FunctionMember","fields":{"argList":["url"],"functionBody":"if(initialization.initModuleData.openLinkFromApp) {\r\n    //let the app open the link\r\n    let commandData = {\r\n        linkUrl: url\r\n    }\r\n    initialization.sendMessage(\"openLink\",commandData);\r\n}\r\nelse {\r\n    //open the link in a browser\r\n    window.open(url)\r\n    window.opener = null;\r\n}","supplementalCode":""}},"openWebWorkspace":{"name":"openWebWorkspace","type":"apogee.FunctionMember","fields":{"argList":["workspaceUrl"],"functionBody":"if(initialization.initModuleData.openLinkFromApp) {\n    //let the app open the workspace\n    let commandData = {                   \n        workspaceUrl: workspaceUrl\n    }\n    initialization.sendMessage(\"openWorkspace\",commandData);\n}\nelse {\n    //open the workspace in a browser\n    if(__globals__.mmGlobals.callingUrl) {\n        let url = initialization.callerInfo.callingUrl + \"?url=\" + workspaceUrl; \n        openWebLink(url);\n    }\n} ","supplementalCode":""}},"loadApogeeModule":{"name":"loadApogeeModule","type":"apogee.FunctionMember","fields":{"argList":["moduleName","moduleRepoVersionEntry"],"functionBody":"let commandData = {moduleName}\r\nObject.assign(commandData,moduleRepoVersionEntry);\r\n\r\ninitialization.sendMessage(\"loadApogeeModule\",commandData);","supplementalCode":""}},"updateApogeeModule":{"name":"updateApogeeModule","type":"apogee.FunctionMember","fields":{"argList":["entryId","moduleName","moduleRepoVersionEntry"],"functionBody":"let referenceData = {moduleName}\r\nObject.assign(referenceData,moduleRepoVersionEntry);\r\n\r\nlet commandData = {\r\n    entryId: entryId,\r\n    referenceData: referenceData\r\n}\r\n\r\ninitialization.sendMessage(\"updateApogeeModule\",commandData);","supplementalCode":""}},"unloadApogeeModule":{"name":"unloadApogeeModule","type":"apogee.FunctionMember","fields":{"argList":["entryId"],"functionBody":"let commandData = {\r\n    entryId: entryId,\r\n}\r\n\r\ninitialization.sendMessage(\"unloadApogeeModule\",commandData);","supplementalCode":""}}}}}},"components":{"modules":{"type":"apogeeapp.PageComponent","fields":{"editorState":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Modules"}]},{"type":"heading2","content":[{"type":"text","text":"App"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the react display for the module manager."}]},{"type":"paragraph","content":[{"type":"text","text":"to do:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"text","text":"get the status"}]},{"type":"listItem","content":[{"type":"text","text":"set the state message - NOTE: implemented for es. need to implement for npm. Need better error handling."}]},{"type":"listItem","content":[{"type":"text","text":"load the loaded or installed or latest version (now I load the _earliest_) - "}]},{"type":"listItem","content":[{"type":"text","text":"add the commands links (and commands) - NOTE: Added the commands for es modules (review them though)"}]},{"type":"listItem","content":[{"type":"text","text":"make it prettier"}]},{"type":"listItem","content":[{"type":"text","text":"I have a version compare function - it is not correct. It is a temporary simple implementation"}]}]},{"type":"apogeeComponent","attrs":{"name":"App","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Module Element"}]},{"type":"paragraph","content":[{"type":"text","text":"This element is the display element for a module from the repository. "}]},{"type":"apogeeComponent","attrs":{"name":"ModuleElement","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"getDefaultSelectedVersion","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Body Element"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the body of a module display element. It is shown when the module element is in the expanded state."}]},{"type":"apogeeComponent","attrs":{"name":"BodyElement","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Internal Elements"}]},{"type":"paragraph","content":[{"type":"text","text":"This element displays the loaded/installed status of the module from the app"}]},{"type":"apogeeComponent","attrs":{"name":"StatusElement","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This element is used to show or hide the module body."}]},{"type":"apogeeComponent","attrs":{"name":"MoreLessElement","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"These are the demo workspaces for a given module versoin."}]},{"type":"apogeeComponent","attrs":{"name":"DemoWorkspaces","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a link for a demo workspace for a given module version."}]},{"type":"apogeeComponent","attrs":{"name":"DemoWorkspaceLink","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is a link to go to the web space for the module."}]},{"type":"apogeeComponent","attrs":{"name":"ModuleWebLink","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This is the dropdown to select the active version for the given module."}]},{"type":"apogeeComponent","attrs":{"name":"VersionSelector","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"These are the commands for load/unload and install/uninstall for the module."}]},{"type":"apogeeComponent","attrs":{"name":"ModuleCommands","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Command Generation"}]},{"type":"paragraph","content":[{"type":"text","text":"This function determines the commands that should be sent given the selected version of the given module."}]},{"type":"apogeeComponent","attrs":{"name":"getCommandArray","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"isFirstVersionNewer","id":0,"state":""}}]}}},"children":{"App":{"type":"apogeeapp.ReactDisplayCell","fields":{"jsxCode":"//props: moduleInfoArray\nconst moduleInfoArray = props.moduleInfoArray;\n\nreturn (\n    <>\n        <h1>Module Manager</h1>\n        <div id=\"moduleListContainer\">\n            {props.moduleInfoArray.map(moduleInfo => <ModuleElement moduleInfo={moduleInfo} key={moduleInfo.name} />)}\n        </div>\n    </>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Display":{"isViewActive":true},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"ModuleElement":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//properties moduleInfo\nconst moduleInfo = props.moduleInfo;\n\nconst expandedStateArray = React.useState(false);\nconst expanded = expandedStateArray[0];\nconst setExpanded = expandedStateArray[1];\n\nconst selectedStateArray = React.useState(() => getDefaultSelectedVersion(moduleInfo));\nconst selectedVersion = selectedStateArray[0];\nconst setSelectedVersion = selectedStateArray[1];\n\nconst selectedVersionInfo = moduleInfo.versions.find(versionInfo => versionInfo.version == selectedVersion)\nconst title = selectedVersionInfo.displayName ? `${selectedVersionInfo.displayName}: ${moduleInfo.name}` : moduleInfo.name;\n\nreturn (\n    <div className=\"moduleCell\">\n        <div className=\"headerCell\">\n            <div className=\"titleField\">{title}</div>\n            <StatusElement moduleInfo={moduleInfo}/>\n            {selectedVersionInfo.desc ? <div className=\"shortDescField\">{selectedVersionInfo.desc}</div> : \"\"}\n            <>\n                {expanded ?\n                    <BodyElement moduleInfo={moduleInfo} selectedVersion={selectedVersion} setSelectedVersion ={setSelectedVersion} />\n                    :\n                    \"\"\n                }\n                <MoreLessElement expanded={expanded} setExpanded={setExpanded} />\n            </>\n        </div>\n    </div>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false}}}}},"BodyElement":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"const moduleInfo = props.moduleInfo;\nconst selectedVersion = props.selectedVersion;\nconst setSelectedVersion = props.setSelectedVersion\n\nconst selectedVersionInfo = moduleInfo.versions.find(versionInfo => versionInfo.version == selectedVersion)\n\nconst demoWorkspaces = selectedVersionInfo.demoWorkspaces;\n\nreturn (\n    <div className=\"bodyCell\">\n        <div className=\"leftCell\">\n            <VersionSelector moduleInfo={moduleInfo} selectedVersion={selectedVersion} setSelectedVersion ={setSelectedVersion} />\n        </div>\n        <div className=\"rightCell\">\n            <>\n                <ModuleCommands moduleInfo={moduleInfo} selectedVersion={selectedVersion} />\n                {((demoWorkspaces)&&(demoWorkspaces.length > 0)) ? <DemoWorkspaces demoWorkspaces={demoWorkspaces} /> : \"\"}\n                { selectedVersionInfo.webLink ? <ModuleWebLink url={selectedVersionInfo.webLink} /> : \"\" }\n            </>\n        </div>\n    </div>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false}}}}},"MoreLessElement":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//props setExpanded\nconst expanded = props.expanded\nconst setExpanded = props.setExpanded\n\nconst msg = (expanded) ? 'Show Less' : 'Show More'\n\nreturn (\n    <div className=\"moreOrLessContainer\">\n        <a href=\"#\" className=\"moreOrLessLink\" onClick={() => setExpanded(!expanded)}>{msg}</a>\n    </div>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":false,"height":7000},"convertedCode":{"isViewActive":false}}}}},"DemoWorkspaces":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//props versionInfo\nconst demoWorkspaces = props.demoWorkspaces; \n    \nreturn (\n    <div className=\"referenceCommandSetContainer\">\n        {demoWorkspaces.map(workspaceInfo => <DemoWorkspaceLink workspaceInfo={workspaceInfo} />)}\n    </div>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":false,"height":7000},"convertedCode":{"isViewActive":false,"height":7000}}}}},"DemoWorkspaceLink":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//props workspace info\nconst workspaceInfo = props.workspaceInfo;\n\nlet linkText = \"Open Sample Workspace\";\nif(workspaceInfo.name) linkText += \": \" + workspaceInfo.name\n\nconst onClick = () => messageCommands.openWebWorkspace(workspaceInfo.url);\n\nreturn (\n    <div className=\"referenceCommandContainer\">\n        <a key={workspaceInfo.url} className=\"referenceCommandLink\" href=\"#\" onClick={onClick}>{linkText}</a>\n    </div>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false}}}}},"ModuleWebLink":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//props url\nconst url = props.url\n\nconst onClick = () => messageCommands.openWebLink(url)\n\nreturn <div className=\"referenceCommandSetContainer\">\n    <label>Module Web Site: </label>\n    <a className=\"referenceCommandLink\" href=\"#\" onClick={onClick}>{url}</a>\n</div>"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false}}}}},"VersionSelector":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//props moduleInfo\nconst moduleInfo = props.moduleInfo;\nconst selectedVersion = props.selectedVersion;\nconst setSelectedVersion = props.setSelectedVersion;\n\nconst latestVersion = moduleInfo.versions[moduleInfo.versions.length-1].version;\n\n\nreturn (\n    <div className=\"versionContainer\">\n        <span className=\"versionLabel\">Version: </span>\n        <select onChange={event => setSelectedVersion(event.target.value)} value={selectedVersion}>\n            {\n                moduleInfo.versions.map(versionInfo => <option value={versionInfo.version}>{versionInfo.version}</option>)\n            }\n        </select>\n        { (selectedVersion != latestVersion) ? <div className=\"notLatestContainer\" >Not Latest Version!</div> : \"\" }\n    </div>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false}}}}},"ModuleCommands":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//props moduleInfo\nconst moduleInfo = props.moduleInfo;\nconst selectedVersion = props.selectedVersion;\n\nconst commandArray = getCommandArray(moduleInfo,selectedVersion);\n\nreturn (\n    <div className=\"moduleCommandSetContainer\">\n        { commandArray.map(command => {\n            return (\n                <div className=\"moduleCommandContainer\" key={command.msg}>\n                    <a href=\"#\" className=\"moduleCommandLink\" onClick={command.callback}>{command.msg}</a>\n                </div>\n            )\n        })}\n    </div>\n)"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false}}}}},"getCommandArray":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"StatusElement":{"type":"apogeeapp.ReactElementCell","fields":{"jsxCode":"//props moduleInfo\nconst moduleInfo = props.moduleInfo\nconst platform = initialization.initModuleData.platform;\n\nlet msg; \n\nif(platform == \"es\") {\n    if(moduleInfo.loaded) {\n        msg = `Loaded in Workspace: ${moduleInfo.loaded.version}`\n    }\n    else {\n        msg = \"Not Loaded in Workspace\"\n    }\n}\nelse if(platform == \"npm\") {\n    if((moduleInfo.loaded)&&(moduleInfo.installed)) {\n        msg = `Loaded in Workspace: ${moduleInfo.loaded}; Installed in app: ${moduleInfo.installed}`   \n    }\n    else if(moduleInfo.installed) {\n        msg = `Not Loaded in Workspace. Installed in app: ${moduleInfo.installed}`\n        \n    }\n    else if(moduleInfo.loaded) {\n        msg = `Loaded in Workspace: ${moduleInfo.loaded.version}, Not installed in app!`\n    }\n    else {\n        msg = \"Not Loaded in Workspace or Installed in App\"\n    }\n}\nelse {\n    msg = `Platform expected 'es' or 'npm', found: ${platform}`\n}\n    \nreturn <div className=\"statusField\">{msg}</div>;\n"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"jsxCode":{"isViewActive":true,"height":7000},"convertedCode":{"isViewActive":false}}}}},"getDefaultSelectedVersion":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"isFirstVersionNewer":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true,"tabShowing":true}},"initialization":{"type":"apogeeapp.PageComponent","fields":{"editorState":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Remote Module Manager"}]},{"type":"heading2","content":[{"type":"text","text":"External Listener Setup"}]},{"type":"paragraph","content":[{"type":"text","text":"We need a way to run some external (to model) code on startup. We mock this up by creating a custom component and create a global object just once."}]},{"type":"paragraph","content":[{"type":"text","text":"In the global object we put the "},{"type":"text","marks":[{"type":"italic"}],"text":"sendMessage"},{"type":"text","text":" function and add a "},{"type":"text","marks":[{"type":"italic"}],"text":"receiveMessag"},{"type":"text","text":"e function which we use as a message listener."}]},{"type":"paragraph","content":[{"type":"text","text":"In onLoad, we define some functions to pass data into the model, which we use to handle some messages sent from the remote app. (Alternatively, we could have loaded functions from the model that did this for us. Here we would do that by loading them from data. Externally, we would load them from the workspace/model."}]},{"type":"apogeeComponent","attrs":{"name":"globalStuff","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Model Listener Setup"}]},{"type":"apogeeComponent","attrs":{"name":"callerInfo","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"sendMessage","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"receiveMessage","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"initPage","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"App Data"}]},{"type":"paragraph","content":[{"type":"text","text":"Here is data sent from the app in initialize the module manager."}]},{"type":"apogeeComponent","attrs":{"name":"initModuleData","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"appStatusData","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Repository Data"}]},{"type":"paragraph","content":[{"type":"text","text":"This is the requested module file data from the repositories"}]},{"type":"apogeeComponent","attrs":{"name":"repoModuleListFiles","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Combined Module Data"}]},{"type":"paragraph","content":[{"type":"text","text":"If there are any modules or module versions loaded in the app but not present in the repos, we want to store these values so we can reload them later, if we unload them."}]},{"type":"apogeeComponent","attrs":{"name":"extraModuleListFile","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"Here we merge all the modules and versions from the different repositories."}]},{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"},{"type":"highlight","attrs":{"color":"yellow"}}],"text":"I NEED TO SORT THIS!!!"}]},{"type":"apogeeComponent","attrs":{"name":"combinedModuleListFile","id":0,"state":""}},{"type":"heading3","content":[{"type":"text","text":"Find \"Extra\" Modules"}]},{"type":"paragraph","content":[{"type":"text","text":"Here we search for modules in the app that are not present in the repos. If we find them, we save them with the \"extra\" modules."}]},{"type":"apogeeComponent","attrs":{"name":"extraModuleSearchCell","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Utilities"}]},{"type":"paragraph","content":[{"type":"text","text":"These are utilities for working with the module and version entries."}]},{"type":"paragraph","content":[{"type":"text","text":"This function merges two list files together. It copies the first file and then inserts any needed entries from the second file."}]},{"type":"apogeeComponent","attrs":{"name":"mergeRepoModuleListFile","id":0,"state":""}},{"type":"paragraph","content":[{"type":"text","text":"This function checks if two version entries are the same version."}]},{"type":"apogeeComponent","attrs":{"name":"versionEntriesEqual","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Module Data"}]},{"type":"apogeeComponent","attrs":{"name":"moduleInfoArray","id":0,"state":""}}]}}},"children":{"globalStuff":{"type":"apogeeapp.CustomCell","fields":{"destroyOnInactive":false,"html":"<p>This is a dummy component to do some global stuff</p>\n<ul>\n    <li>get the calling window and other init info</li>\n    <li>On load, create functions to pass message data into the model</li>\n    <li>create a globals function to send messages</li>\n    <li>start the message listener loop</li>\n</ul>","css":"","uiCode":"class GeneratorClass {\n    // constructor() {\n    //     //KLUDGE\n    //     if(!window.mmGlobals) {\n    //         this._initGlobals();\n    //     }\n    // }\n    \n    // onLoad(outputElement,admin) {\n    //     if(window.mmGlobals) {\n    //         if(!window.mmGlobals.msgHandlers) {\n    //             //start listener and send \"started\" msg \n    //             //if this is the first time to set the handlers.\n    //             //window.addEventListener(\"message\",window.mmGlobals.receiveMessage);\n    //             window.onmessage = window.mmGlobals.receiveMessage\n    //             console.log(\"Message listener started!\");\n    //             window.mmGlobals.sendMessage(\"opened\",{});\n    //             console.log(\"Started message sent!!\");\n    //         }\n    //         window.mmGlobals.msgHandlers = {\n    //             initModules: data => admin.getMessenger().dataUpdate(\"initModuleData\",data),\n    //             appStatus: data => admin.getMessenger().dataUpdate(\"appStatusData\",data),\n    //         };\n    //     }\n    // }\n    \n    // /** Alternatively we could have called model functions we loaded here. */\n    // //setData(msgHandlers,outputElement,admin) {\n    // //\n    // //}\n    \n    // //===============================\n    // // Private Methods\n    // //===============================\n    // _initGlobals() {\n    //     let mmGlobals = {};\n    //     window.mmGlobals = mmGlobals;\n        \n    //     //get the calling window\n    //     mmGlobals.callingWindow = window.opener;\n    \n    //     //lod the url params\n    //     var params = new URLSearchParams(window.location.search);\n    \n    //     mmGlobals.callingUrl = params.get(\"callingUrl\");\n    //     // if(!mmGlobals.callingUrl) {\n    //     //     this._fatalError(\"CallingUrl not found in input.\");\n    //     //     return false;\n    //     // }\n    \n    //     mmGlobals.windowId = params.get(\"windowId\");\n    //     // if(!mmGlobals.windowId) {\n    //     //     this._fatalError(\"Window ID not found in input.\");\n    //     //     return false;\n    //     // }\n    \n    //     mmGlobals.sendMessage = function(messageType,commandData) {\n    //         let messageData = {};\n    //         messageData.commandData = commandData;\n        \n    //         //this identifies the window sending the message\n    //         messageData.windowId = mmGlobals.windowId;\n        \n    //         if((mmGlobals.callingWindow)&&(mmGlobals.callingWindow.postMessage)) {\n    //             console.log(\"sending message: \" + messageType);\n    //             mmGlobals.callingWindow.postMessage({message: messageType, value: messageData},mmGlobals.callingUrl);\n    //         }\n    //     }   \n            \n    //     mmGlobals.receiveMessage = function(event) {\n    //         console.log(\"received message: \" + event.data.message);\n    //         switch(event.data.message) {\n    //             case \"initModules\": \n    //                 mmGlobals.msgHandlers.initModules(event.data.value);\n    //                 break;\n        \n    //             case \"appStatus\": \n    //                 mmGlobals.msgHandlers.appStatus(event.data.value);\n    //                 break;\n        \n    //             case \"appClosed\": \n    //                 window.close();\n    //                 break;\n    //         }\n    //     }\n    // }\n    \n    // /** Temporary fatal error handling */\n    // _fatalError(msg) {\n    //     throw new Error(msg);\n    // }\n\n}\n\nreturn new GeneratorClass();\n\n"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Display":{"isViewActive":false},"HTML":{"isViewActive":false,"height":7000},"CSS":{"isViewActive":false},"uiGenerator()":{"isViewActive":false,"height":7000},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"initModuleData":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"appStatusData":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false,"height":7000},"Private":{"isViewActive":false}}}}},"moduleInfoArray":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"sendMessage":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"callerInfo":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"initPage":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"receiveMessage":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"extraModuleSearchCell":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"height":7000,"isViewActive":true},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"mergeRepoModuleListFile":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"extraModuleListFile":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"repoModuleListFiles":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"versionEntriesEqual":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"combinedModuleListFile":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"treeState":1,"tabOpened":true}},"CSS":{"type":"apogeeapp.PageComponent","fields":{"editorState":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"CSS KLUDGE"}]},{"type":"paragraph","content":[{"type":"text","text":"Here I am doing a kludge to add CSS, by putting in a custom component just to add CSS."}]},{"type":"apogeeComponent","attrs":{"name":"dummyCustomComponent","id":0,"state":""}}]}}},"children":{"dummyCustomComponent":{"type":"apogeeapp.CustomCell","fields":{"destroyOnInactive":false,"html":"<h3>This component does nothing except define CSS</h3>","css":".moduleCell {\r\n    border: 1px solid darkgray;\r\n    padding: 5px;\r\n    margin: 1px;\r\n}\r\n.headerCell {\r\n\r\n}\r\n.bodyCell {\r\n\r\n}\r\n.leftCell {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n}\r\n.rightCell {\r\n    display: inline-block;\r\n    margin-left: 10px;\r\n    vertical-align: top;\r\n}\r\n.titleField {\r\n    font-weight: bold;\r\n    font-size: x-large;\r\n    display: inline-block;\r\n}\r\n.statusField {\r\n    color: gray;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    margin-left: 15px;\r\n}\r\n.shortDescField {\r\n    padding: 10px 0px;\r\n}\r\n.versionContainer {\r\n    padding: 10px 0px;\r\n}\r\n.versionLabel {\r\n\r\n}\r\n.notLatestContainer {\r\n    font-style: italic;\r\n    color: gray;\r\n}\r\n.moduleCommandLink {\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: darkblue;\r\n}\r\n.moduleCommandLink:hover {\r\n    background-color: lightgray;\r\n}\r\n.moduleCommandContainer {\r\n\r\n}\r\n.moduleCommandSetContainer {\r\n    padding: 10px 0px;\r\n    display: inline-block;\r\n\r\n}\r\n.referenceCommandLink {\r\n    text-decoration: none;\r\n    color: darkblue;\r\n}\r\n.referenceCommandLink:hover {\r\n    background-color: lightgray;\r\n}\r\n.referenceCommandContainer {\r\n    \r\n}\r\n.referenceCommandSetContainer {\r\n    padding: 5px 0px;\r\n}\r\n.moreOrLessLink {\r\n    font-size: smaller;\r\n    text-decoration: none;\r\n}\r\n.moreOrLessLink:hover {\r\n    background-color: lightgray;\r\n}\r\n.moreOrLessContainer {\r\n}","uiCode":"return {\n}"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Display":{"isViewActive":true},"HTML":{"isViewActive":true,"height":7000},"CSS":{"isViewActive":true,"height":7000},"uiGenerator()":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1}},"testing":{"type":"apogeeapp.PageComponent","fields":{"editorState":{"doc":{"type":"doc","content":[{"type":"heading1","content":[{"type":"text","text":"Testing"}]},{"type":"paragraph","content":[{"type":"text","text":"This page includes some test data for testing the workspace"}]},{"type":"apogeeComponent","attrs":{"name":"testForm","id":0,"state":""}},{"type":"paragraph"},{"type":"apogeeComponent","attrs":{"name":"resetCachedExtraModulesForm","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"Init Module Data"}]},{"type":"apogeeComponent","attrs":{"name":"esInitModuleData","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"npmInitModuleData","id":0,"state":""}},{"type":"heading2","content":[{"type":"text","text":"App Status Data"}]},{"type":"apogeeComponent","attrs":{"name":"esAppStatusData","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"npmAppStatusData","id":0,"state":""}}]}}},"children":{"esInitModuleData":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"npmInitModuleData":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"testForm":{"type":"apogeeapp.DesignerActionFormCell","fields":{"allowInputExpressions":true},"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":false}}}}},"esAppStatusData":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":7000},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"npmAppStatusData":{"type":"apogeeapp.JsonCell","fields":{"dataView":"Colorized"},"viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Data":{"isViewActive":true,"height":280},"Formula":{"isViewActive":false},"Private":{"isViewActive":false}}}}},"resetCachedExtraModulesForm":{"type":"apogeeapp.DesignerActionFormCell","fields":{"allowInputExpressions":true},"viewState":{"childDisplayState":{"views":{"Form":{"isViewActive":true},"Input":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":1,"tabOpened":true}},"messageCommands":{"type":"apogeeapp.PageComponent","fields":{"editorState":{"doc":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"This cell just holds the text of functions in the old module manager. I think I need to change these now that I have specific apogee modules."}]},{"type":"apogeeComponent","attrs":{"name":"loadApogeeModule","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"updateApogeeModule","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"unloadApogeeModule","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"openWebLink","id":0,"state":""}},{"type":"apogeeComponent","attrs":{"name":"openWebWorkspace","id":0,"state":""}}]}}},"children":{"openWebLink":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"openWebWorkspace":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"loadApogeeModule":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"updateApogeeModule":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}},"unloadApogeeModule":{"type":"apogeeapp.FunctionCell","viewState":{"childDisplayState":{"views":{"Info":{"isViewActive":false},"Code":{"isViewActive":true,"height":7000},"Private":{"isViewActive":false}}}}}},"viewState":{"childDisplayState":null,"treeState":-1,"tabOpened":true}},"viewState":{"treeState":1}}},"viewState":{"treeState":1}}